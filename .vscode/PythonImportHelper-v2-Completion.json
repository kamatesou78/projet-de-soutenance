[
    {
        "label": "QtCore",
        "importPath": "PyQt5",
        "description": "PyQt5",
        "isExtraImport": true,
        "detail": "PyQt5",
        "documentation": {}
    },
    {
        "label": "QtGui",
        "importPath": "PyQt5",
        "description": "PyQt5",
        "isExtraImport": true,
        "detail": "PyQt5",
        "documentation": {}
    },
    {
        "label": "QtWidgets",
        "importPath": "PyQt5",
        "description": "PyQt5",
        "isExtraImport": true,
        "detail": "PyQt5",
        "documentation": {}
    },
    {
        "label": "QtCore",
        "importPath": "PyQt5",
        "description": "PyQt5",
        "isExtraImport": true,
        "detail": "PyQt5",
        "documentation": {}
    },
    {
        "label": "QtGui",
        "importPath": "PyQt5",
        "description": "PyQt5",
        "isExtraImport": true,
        "detail": "PyQt5",
        "documentation": {}
    },
    {
        "label": "QtWidgets",
        "importPath": "PyQt5",
        "description": "PyQt5",
        "isExtraImport": true,
        "detail": "PyQt5",
        "documentation": {}
    },
    {
        "label": "QtCore",
        "importPath": "PyQt5",
        "description": "PyQt5",
        "isExtraImport": true,
        "detail": "PyQt5",
        "documentation": {}
    },
    {
        "label": "QtGui",
        "importPath": "PyQt5",
        "description": "PyQt5",
        "isExtraImport": true,
        "detail": "PyQt5",
        "documentation": {}
    },
    {
        "label": "QtWidgets",
        "importPath": "PyQt5",
        "description": "PyQt5",
        "isExtraImport": true,
        "detail": "PyQt5",
        "documentation": {}
    },
    {
        "label": "QtCore",
        "importPath": "PyQt5",
        "description": "PyQt5",
        "isExtraImport": true,
        "detail": "PyQt5",
        "documentation": {}
    },
    {
        "label": "QtGui",
        "importPath": "PyQt5",
        "description": "PyQt5",
        "isExtraImport": true,
        "detail": "PyQt5",
        "documentation": {}
    },
    {
        "label": "QtWidgets",
        "importPath": "PyQt5",
        "description": "PyQt5",
        "isExtraImport": true,
        "detail": "PyQt5",
        "documentation": {}
    },
    {
        "label": "QtCore",
        "importPath": "PyQt5",
        "description": "PyQt5",
        "isExtraImport": true,
        "detail": "PyQt5",
        "documentation": {}
    },
    {
        "label": "QtGui",
        "importPath": "PyQt5",
        "description": "PyQt5",
        "isExtraImport": true,
        "detail": "PyQt5",
        "documentation": {}
    },
    {
        "label": "QtWidgets",
        "importPath": "PyQt5",
        "description": "PyQt5",
        "isExtraImport": true,
        "detail": "PyQt5",
        "documentation": {}
    },
    {
        "label": "QtCore",
        "importPath": "PyQt5",
        "description": "PyQt5",
        "isExtraImport": true,
        "detail": "PyQt5",
        "documentation": {}
    },
    {
        "label": "QtGui",
        "importPath": "PyQt5",
        "description": "PyQt5",
        "isExtraImport": true,
        "detail": "PyQt5",
        "documentation": {}
    },
    {
        "label": "QtWidgets",
        "importPath": "PyQt5",
        "description": "PyQt5",
        "isExtraImport": true,
        "detail": "PyQt5",
        "documentation": {}
    },
    {
        "label": "QtCore",
        "importPath": "PyQt5",
        "description": "PyQt5",
        "isExtraImport": true,
        "detail": "PyQt5",
        "documentation": {}
    },
    {
        "label": "QtGui",
        "importPath": "PyQt5",
        "description": "PyQt5",
        "isExtraImport": true,
        "detail": "PyQt5",
        "documentation": {}
    },
    {
        "label": "QtWidgets",
        "importPath": "PyQt5",
        "description": "PyQt5",
        "isExtraImport": true,
        "detail": "PyQt5",
        "documentation": {}
    },
    {
        "label": "QtCore",
        "importPath": "PyQt5",
        "description": "PyQt5",
        "isExtraImport": true,
        "detail": "PyQt5",
        "documentation": {}
    },
    {
        "label": "QtGui",
        "importPath": "PyQt5",
        "description": "PyQt5",
        "isExtraImport": true,
        "detail": "PyQt5",
        "documentation": {}
    },
    {
        "label": "QtWidgets",
        "importPath": "PyQt5",
        "description": "PyQt5",
        "isExtraImport": true,
        "detail": "PyQt5",
        "documentation": {}
    },
    {
        "label": "QtCore",
        "importPath": "PyQt5",
        "description": "PyQt5",
        "isExtraImport": true,
        "detail": "PyQt5",
        "documentation": {}
    },
    {
        "label": "QtGui",
        "importPath": "PyQt5",
        "description": "PyQt5",
        "isExtraImport": true,
        "detail": "PyQt5",
        "documentation": {}
    },
    {
        "label": "QtWidgets",
        "importPath": "PyQt5",
        "description": "PyQt5",
        "isExtraImport": true,
        "detail": "PyQt5",
        "documentation": {}
    },
    {
        "label": "QtCore",
        "importPath": "PyQt5",
        "description": "PyQt5",
        "isExtraImport": true,
        "detail": "PyQt5",
        "documentation": {}
    },
    {
        "label": "QtGui",
        "importPath": "PyQt5",
        "description": "PyQt5",
        "isExtraImport": true,
        "detail": "PyQt5",
        "documentation": {}
    },
    {
        "label": "QtWidgets",
        "importPath": "PyQt5",
        "description": "PyQt5",
        "isExtraImport": true,
        "detail": "PyQt5",
        "documentation": {}
    },
    {
        "label": "QtCore",
        "importPath": "PyQt5",
        "description": "PyQt5",
        "isExtraImport": true,
        "detail": "PyQt5",
        "documentation": {}
    },
    {
        "label": "QtGui",
        "importPath": "PyQt5",
        "description": "PyQt5",
        "isExtraImport": true,
        "detail": "PyQt5",
        "documentation": {}
    },
    {
        "label": "QtWidgets",
        "importPath": "PyQt5",
        "description": "PyQt5",
        "isExtraImport": true,
        "detail": "PyQt5",
        "documentation": {}
    },
    {
        "label": "QtCore",
        "importPath": "PyQt5",
        "description": "PyQt5",
        "isExtraImport": true,
        "detail": "PyQt5",
        "documentation": {}
    },
    {
        "label": "QtGui",
        "importPath": "PyQt5",
        "description": "PyQt5",
        "isExtraImport": true,
        "detail": "PyQt5",
        "documentation": {}
    },
    {
        "label": "QtWidgets",
        "importPath": "PyQt5",
        "description": "PyQt5",
        "isExtraImport": true,
        "detail": "PyQt5",
        "documentation": {}
    },
    {
        "label": "QtCore",
        "importPath": "PyQt5",
        "description": "PyQt5",
        "isExtraImport": true,
        "detail": "PyQt5",
        "documentation": {}
    },
    {
        "label": "QtGui",
        "importPath": "PyQt5",
        "description": "PyQt5",
        "isExtraImport": true,
        "detail": "PyQt5",
        "documentation": {}
    },
    {
        "label": "QtWidgets",
        "importPath": "PyQt5",
        "description": "PyQt5",
        "isExtraImport": true,
        "detail": "PyQt5",
        "documentation": {}
    },
    {
        "label": "QtCore",
        "importPath": "PyQt5",
        "description": "PyQt5",
        "isExtraImport": true,
        "detail": "PyQt5",
        "documentation": {}
    },
    {
        "label": "QtGui",
        "importPath": "PyQt5",
        "description": "PyQt5",
        "isExtraImport": true,
        "detail": "PyQt5",
        "documentation": {}
    },
    {
        "label": "QtWidgets",
        "importPath": "PyQt5",
        "description": "PyQt5",
        "isExtraImport": true,
        "detail": "PyQt5",
        "documentation": {}
    },
    {
        "label": "QtCore",
        "importPath": "PyQt5",
        "description": "PyQt5",
        "isExtraImport": true,
        "detail": "PyQt5",
        "documentation": {}
    },
    {
        "label": "QtGui",
        "importPath": "PyQt5",
        "description": "PyQt5",
        "isExtraImport": true,
        "detail": "PyQt5",
        "documentation": {}
    },
    {
        "label": "QtWidgets",
        "importPath": "PyQt5",
        "description": "PyQt5",
        "isExtraImport": true,
        "detail": "PyQt5",
        "documentation": {}
    },
    {
        "label": "QtCore",
        "importPath": "PyQt5",
        "description": "PyQt5",
        "isExtraImport": true,
        "detail": "PyQt5",
        "documentation": {}
    },
    {
        "label": "QtGui",
        "importPath": "PyQt5",
        "description": "PyQt5",
        "isExtraImport": true,
        "detail": "PyQt5",
        "documentation": {}
    },
    {
        "label": "QtWidgets",
        "importPath": "PyQt5",
        "description": "PyQt5",
        "isExtraImport": true,
        "detail": "PyQt5",
        "documentation": {}
    },
    {
        "label": "QtCore",
        "importPath": "PyQt5",
        "description": "PyQt5",
        "isExtraImport": true,
        "detail": "PyQt5",
        "documentation": {}
    },
    {
        "label": "QtGui",
        "importPath": "PyQt5",
        "description": "PyQt5",
        "isExtraImport": true,
        "detail": "PyQt5",
        "documentation": {}
    },
    {
        "label": "QtWidgets",
        "importPath": "PyQt5",
        "description": "PyQt5",
        "isExtraImport": true,
        "detail": "PyQt5",
        "documentation": {}
    },
    {
        "label": "QtCore",
        "importPath": "PyQt5",
        "description": "PyQt5",
        "isExtraImport": true,
        "detail": "PyQt5",
        "documentation": {}
    },
    {
        "label": "QtGui",
        "importPath": "PyQt5",
        "description": "PyQt5",
        "isExtraImport": true,
        "detail": "PyQt5",
        "documentation": {}
    },
    {
        "label": "QtWidgets",
        "importPath": "PyQt5",
        "description": "PyQt5",
        "isExtraImport": true,
        "detail": "PyQt5",
        "documentation": {}
    },
    {
        "label": "QtCore",
        "importPath": "PyQt5",
        "description": "PyQt5",
        "isExtraImport": true,
        "detail": "PyQt5",
        "documentation": {}
    },
    {
        "label": "QtGui",
        "importPath": "PyQt5",
        "description": "PyQt5",
        "isExtraImport": true,
        "detail": "PyQt5",
        "documentation": {}
    },
    {
        "label": "QtWidgets",
        "importPath": "PyQt5",
        "description": "PyQt5",
        "isExtraImport": true,
        "detail": "PyQt5",
        "documentation": {}
    },
    {
        "label": "QtCore",
        "importPath": "PyQt5",
        "description": "PyQt5",
        "isExtraImport": true,
        "detail": "PyQt5",
        "documentation": {}
    },
    {
        "label": "QtGui",
        "importPath": "PyQt5",
        "description": "PyQt5",
        "isExtraImport": true,
        "detail": "PyQt5",
        "documentation": {}
    },
    {
        "label": "QtWidgets",
        "importPath": "PyQt5",
        "description": "PyQt5",
        "isExtraImport": true,
        "detail": "PyQt5",
        "documentation": {}
    },
    {
        "label": "QtCore",
        "importPath": "PyQt5",
        "description": "PyQt5",
        "isExtraImport": true,
        "detail": "PyQt5",
        "documentation": {}
    },
    {
        "label": "QtGui",
        "importPath": "PyQt5",
        "description": "PyQt5",
        "isExtraImport": true,
        "detail": "PyQt5",
        "documentation": {}
    },
    {
        "label": "QtWidgets",
        "importPath": "PyQt5",
        "description": "PyQt5",
        "isExtraImport": true,
        "detail": "PyQt5",
        "documentation": {}
    },
    {
        "label": "QtCore",
        "importPath": "PyQt5",
        "description": "PyQt5",
        "isExtraImport": true,
        "detail": "PyQt5",
        "documentation": {}
    },
    {
        "label": "QtGui",
        "importPath": "PyQt5",
        "description": "PyQt5",
        "isExtraImport": true,
        "detail": "PyQt5",
        "documentation": {}
    },
    {
        "label": "QtWidgets",
        "importPath": "PyQt5",
        "description": "PyQt5",
        "isExtraImport": true,
        "detail": "PyQt5",
        "documentation": {}
    },
    {
        "label": "QtCore",
        "importPath": "PyQt5",
        "description": "PyQt5",
        "isExtraImport": true,
        "detail": "PyQt5",
        "documentation": {}
    },
    {
        "label": "QtGui",
        "importPath": "PyQt5",
        "description": "PyQt5",
        "isExtraImport": true,
        "detail": "PyQt5",
        "documentation": {}
    },
    {
        "label": "QtWidgets",
        "importPath": "PyQt5",
        "description": "PyQt5",
        "isExtraImport": true,
        "detail": "PyQt5",
        "documentation": {}
    },
    {
        "label": "QtCore",
        "importPath": "PyQt5",
        "description": "PyQt5",
        "isExtraImport": true,
        "detail": "PyQt5",
        "documentation": {}
    },
    {
        "label": "QtGui",
        "importPath": "PyQt5",
        "description": "PyQt5",
        "isExtraImport": true,
        "detail": "PyQt5",
        "documentation": {}
    },
    {
        "label": "QtWidgets",
        "importPath": "PyQt5",
        "description": "PyQt5",
        "isExtraImport": true,
        "detail": "PyQt5",
        "documentation": {}
    },
    {
        "label": "QtCore",
        "importPath": "PyQt5",
        "description": "PyQt5",
        "isExtraImport": true,
        "detail": "PyQt5",
        "documentation": {}
    },
    {
        "label": "QtGui",
        "importPath": "PyQt5",
        "description": "PyQt5",
        "isExtraImport": true,
        "detail": "PyQt5",
        "documentation": {}
    },
    {
        "label": "QtWidgets",
        "importPath": "PyQt5",
        "description": "PyQt5",
        "isExtraImport": true,
        "detail": "PyQt5",
        "documentation": {}
    },
    {
        "label": "QtCore",
        "importPath": "PyQt5",
        "description": "PyQt5",
        "isExtraImport": true,
        "detail": "PyQt5",
        "documentation": {}
    },
    {
        "label": "QtGui",
        "importPath": "PyQt5",
        "description": "PyQt5",
        "isExtraImport": true,
        "detail": "PyQt5",
        "documentation": {}
    },
    {
        "label": "QtWidgets",
        "importPath": "PyQt5",
        "description": "PyQt5",
        "isExtraImport": true,
        "detail": "PyQt5",
        "documentation": {}
    },
    {
        "label": "QtCore",
        "importPath": "PyQt5",
        "description": "PyQt5",
        "isExtraImport": true,
        "detail": "PyQt5",
        "documentation": {}
    },
    {
        "label": "QtGui",
        "importPath": "PyQt5",
        "description": "PyQt5",
        "isExtraImport": true,
        "detail": "PyQt5",
        "documentation": {}
    },
    {
        "label": "QtWidgets",
        "importPath": "PyQt5",
        "description": "PyQt5",
        "isExtraImport": true,
        "detail": "PyQt5",
        "documentation": {}
    },
    {
        "label": "QtCore",
        "importPath": "PyQt5",
        "description": "PyQt5",
        "isExtraImport": true,
        "detail": "PyQt5",
        "documentation": {}
    },
    {
        "label": "QtGui",
        "importPath": "PyQt5",
        "description": "PyQt5",
        "isExtraImport": true,
        "detail": "PyQt5",
        "documentation": {}
    },
    {
        "label": "QtWidgets",
        "importPath": "PyQt5",
        "description": "PyQt5",
        "isExtraImport": true,
        "detail": "PyQt5",
        "documentation": {}
    },
    {
        "label": "QtCore",
        "importPath": "PyQt5",
        "description": "PyQt5",
        "isExtraImport": true,
        "detail": "PyQt5",
        "documentation": {}
    },
    {
        "label": "QtGui",
        "importPath": "PyQt5",
        "description": "PyQt5",
        "isExtraImport": true,
        "detail": "PyQt5",
        "documentation": {}
    },
    {
        "label": "QtWidgets",
        "importPath": "PyQt5",
        "description": "PyQt5",
        "isExtraImport": true,
        "detail": "PyQt5",
        "documentation": {}
    },
    {
        "label": "QtCore",
        "importPath": "PyQt5",
        "description": "PyQt5",
        "isExtraImport": true,
        "detail": "PyQt5",
        "documentation": {}
    },
    {
        "label": "QtGui",
        "importPath": "PyQt5",
        "description": "PyQt5",
        "isExtraImport": true,
        "detail": "PyQt5",
        "documentation": {}
    },
    {
        "label": "QtWidgets",
        "importPath": "PyQt5",
        "description": "PyQt5",
        "isExtraImport": true,
        "detail": "PyQt5",
        "documentation": {}
    },
    {
        "label": "QtCore",
        "importPath": "PyQt5",
        "description": "PyQt5",
        "isExtraImport": true,
        "detail": "PyQt5",
        "documentation": {}
    },
    {
        "label": "QtGui",
        "importPath": "PyQt5",
        "description": "PyQt5",
        "isExtraImport": true,
        "detail": "PyQt5",
        "documentation": {}
    },
    {
        "label": "QtWidgets",
        "importPath": "PyQt5",
        "description": "PyQt5",
        "isExtraImport": true,
        "detail": "PyQt5",
        "documentation": {}
    },
    {
        "label": "QtCore",
        "importPath": "PyQt5",
        "description": "PyQt5",
        "isExtraImport": true,
        "detail": "PyQt5",
        "documentation": {}
    },
    {
        "label": "QtGui",
        "importPath": "PyQt5",
        "description": "PyQt5",
        "isExtraImport": true,
        "detail": "PyQt5",
        "documentation": {}
    },
    {
        "label": "QtWidgets",
        "importPath": "PyQt5",
        "description": "PyQt5",
        "isExtraImport": true,
        "detail": "PyQt5",
        "documentation": {}
    },
    {
        "label": "QtCore",
        "importPath": "PyQt5",
        "description": "PyQt5",
        "isExtraImport": true,
        "detail": "PyQt5",
        "documentation": {}
    },
    {
        "label": "QtGui",
        "importPath": "PyQt5",
        "description": "PyQt5",
        "isExtraImport": true,
        "detail": "PyQt5",
        "documentation": {}
    },
    {
        "label": "QtWidgets",
        "importPath": "PyQt5",
        "description": "PyQt5",
        "isExtraImport": true,
        "detail": "PyQt5",
        "documentation": {}
    },
    {
        "label": "QtCore",
        "importPath": "PyQt5",
        "description": "PyQt5",
        "isExtraImport": true,
        "detail": "PyQt5",
        "documentation": {}
    },
    {
        "label": "QtGui",
        "importPath": "PyQt5",
        "description": "PyQt5",
        "isExtraImport": true,
        "detail": "PyQt5",
        "documentation": {}
    },
    {
        "label": "QtWidgets",
        "importPath": "PyQt5",
        "description": "PyQt5",
        "isExtraImport": true,
        "detail": "PyQt5",
        "documentation": {}
    },
    {
        "label": "QtCore",
        "importPath": "PyQt5",
        "description": "PyQt5",
        "isExtraImport": true,
        "detail": "PyQt5",
        "documentation": {}
    },
    {
        "label": "QtGui",
        "importPath": "PyQt5",
        "description": "PyQt5",
        "isExtraImport": true,
        "detail": "PyQt5",
        "documentation": {}
    },
    {
        "label": "QtWidgets",
        "importPath": "PyQt5",
        "description": "PyQt5",
        "isExtraImport": true,
        "detail": "PyQt5",
        "documentation": {}
    },
    {
        "label": "QtCore",
        "importPath": "PyQt5",
        "description": "PyQt5",
        "isExtraImport": true,
        "detail": "PyQt5",
        "documentation": {}
    },
    {
        "label": "QtGui",
        "importPath": "PyQt5",
        "description": "PyQt5",
        "isExtraImport": true,
        "detail": "PyQt5",
        "documentation": {}
    },
    {
        "label": "QtWidgets",
        "importPath": "PyQt5",
        "description": "PyQt5",
        "isExtraImport": true,
        "detail": "PyQt5",
        "documentation": {}
    },
    {
        "label": "QtCore",
        "importPath": "PyQt5",
        "description": "PyQt5",
        "isExtraImport": true,
        "detail": "PyQt5",
        "documentation": {}
    },
    {
        "label": "QtGui",
        "importPath": "PyQt5",
        "description": "PyQt5",
        "isExtraImport": true,
        "detail": "PyQt5",
        "documentation": {}
    },
    {
        "label": "QtWidgets",
        "importPath": "PyQt5",
        "description": "PyQt5",
        "isExtraImport": true,
        "detail": "PyQt5",
        "documentation": {}
    },
    {
        "label": "QtCore",
        "importPath": "PyQt5",
        "description": "PyQt5",
        "isExtraImport": true,
        "detail": "PyQt5",
        "documentation": {}
    },
    {
        "label": "QtGui",
        "importPath": "PyQt5",
        "description": "PyQt5",
        "isExtraImport": true,
        "detail": "PyQt5",
        "documentation": {}
    },
    {
        "label": "QtWidgets",
        "importPath": "PyQt5",
        "description": "PyQt5",
        "isExtraImport": true,
        "detail": "PyQt5",
        "documentation": {}
    },
    {
        "label": "QtCore",
        "importPath": "PyQt5",
        "description": "PyQt5",
        "isExtraImport": true,
        "detail": "PyQt5",
        "documentation": {}
    },
    {
        "label": "QtGui",
        "importPath": "PyQt5",
        "description": "PyQt5",
        "isExtraImport": true,
        "detail": "PyQt5",
        "documentation": {}
    },
    {
        "label": "QtWidgets",
        "importPath": "PyQt5",
        "description": "PyQt5",
        "isExtraImport": true,
        "detail": "PyQt5",
        "documentation": {}
    },
    {
        "label": "QtCore",
        "importPath": "PyQt5",
        "description": "PyQt5",
        "isExtraImport": true,
        "detail": "PyQt5",
        "documentation": {}
    },
    {
        "label": "QtGui",
        "importPath": "PyQt5",
        "description": "PyQt5",
        "isExtraImport": true,
        "detail": "PyQt5",
        "documentation": {}
    },
    {
        "label": "QtWidgets",
        "importPath": "PyQt5",
        "description": "PyQt5",
        "isExtraImport": true,
        "detail": "PyQt5",
        "documentation": {}
    },
    {
        "label": "QtCore",
        "importPath": "PyQt5",
        "description": "PyQt5",
        "isExtraImport": true,
        "detail": "PyQt5",
        "documentation": {}
    },
    {
        "label": "QtGui",
        "importPath": "PyQt5",
        "description": "PyQt5",
        "isExtraImport": true,
        "detail": "PyQt5",
        "documentation": {}
    },
    {
        "label": "QtWidgets",
        "importPath": "PyQt5",
        "description": "PyQt5",
        "isExtraImport": true,
        "detail": "PyQt5",
        "documentation": {}
    },
    {
        "label": "QtCore",
        "importPath": "PyQt5",
        "description": "PyQt5",
        "isExtraImport": true,
        "detail": "PyQt5",
        "documentation": {}
    },
    {
        "label": "QtGui",
        "importPath": "PyQt5",
        "description": "PyQt5",
        "isExtraImport": true,
        "detail": "PyQt5",
        "documentation": {}
    },
    {
        "label": "QtWidgets",
        "importPath": "PyQt5",
        "description": "PyQt5",
        "isExtraImport": true,
        "detail": "PyQt5",
        "documentation": {}
    },
    {
        "label": "QtCore",
        "importPath": "PyQt5",
        "description": "PyQt5",
        "isExtraImport": true,
        "detail": "PyQt5",
        "documentation": {}
    },
    {
        "label": "QtGui",
        "importPath": "PyQt5",
        "description": "PyQt5",
        "isExtraImport": true,
        "detail": "PyQt5",
        "documentation": {}
    },
    {
        "label": "QtWidgets",
        "importPath": "PyQt5",
        "description": "PyQt5",
        "isExtraImport": true,
        "detail": "PyQt5",
        "documentation": {}
    },
    {
        "label": "QtCore",
        "importPath": "PyQt5",
        "description": "PyQt5",
        "isExtraImport": true,
        "detail": "PyQt5",
        "documentation": {}
    },
    {
        "label": "QtGui",
        "importPath": "PyQt5",
        "description": "PyQt5",
        "isExtraImport": true,
        "detail": "PyQt5",
        "documentation": {}
    },
    {
        "label": "QtWidgets",
        "importPath": "PyQt5",
        "description": "PyQt5",
        "isExtraImport": true,
        "detail": "PyQt5",
        "documentation": {}
    },
    {
        "label": "QtCore",
        "importPath": "PyQt5",
        "description": "PyQt5",
        "isExtraImport": true,
        "detail": "PyQt5",
        "documentation": {}
    },
    {
        "label": "QtGui",
        "importPath": "PyQt5",
        "description": "PyQt5",
        "isExtraImport": true,
        "detail": "PyQt5",
        "documentation": {}
    },
    {
        "label": "QtWidgets",
        "importPath": "PyQt5",
        "description": "PyQt5",
        "isExtraImport": true,
        "detail": "PyQt5",
        "documentation": {}
    },
    {
        "label": "QtCore",
        "importPath": "PyQt5",
        "description": "PyQt5",
        "isExtraImport": true,
        "detail": "PyQt5",
        "documentation": {}
    },
    {
        "label": "QtGui",
        "importPath": "PyQt5",
        "description": "PyQt5",
        "isExtraImport": true,
        "detail": "PyQt5",
        "documentation": {}
    },
    {
        "label": "QtWidgets",
        "importPath": "PyQt5",
        "description": "PyQt5",
        "isExtraImport": true,
        "detail": "PyQt5",
        "documentation": {}
    },
    {
        "label": "QtCore",
        "importPath": "PyQt5",
        "description": "PyQt5",
        "isExtraImport": true,
        "detail": "PyQt5",
        "documentation": {}
    },
    {
        "label": "QtGui",
        "importPath": "PyQt5",
        "description": "PyQt5",
        "isExtraImport": true,
        "detail": "PyQt5",
        "documentation": {}
    },
    {
        "label": "QtWidgets",
        "importPath": "PyQt5",
        "description": "PyQt5",
        "isExtraImport": true,
        "detail": "PyQt5",
        "documentation": {}
    },
    {
        "label": "QtCore",
        "importPath": "PyQt5",
        "description": "PyQt5",
        "isExtraImport": true,
        "detail": "PyQt5",
        "documentation": {}
    },
    {
        "label": "QtGui",
        "importPath": "PyQt5",
        "description": "PyQt5",
        "isExtraImport": true,
        "detail": "PyQt5",
        "documentation": {}
    },
    {
        "label": "QtWidgets",
        "importPath": "PyQt5",
        "description": "PyQt5",
        "isExtraImport": true,
        "detail": "PyQt5",
        "documentation": {}
    },
    {
        "label": "QtCore",
        "importPath": "PyQt5",
        "description": "PyQt5",
        "isExtraImport": true,
        "detail": "PyQt5",
        "documentation": {}
    },
    {
        "label": "QtGui",
        "importPath": "PyQt5",
        "description": "PyQt5",
        "isExtraImport": true,
        "detail": "PyQt5",
        "documentation": {}
    },
    {
        "label": "QtWidgets",
        "importPath": "PyQt5",
        "description": "PyQt5",
        "isExtraImport": true,
        "detail": "PyQt5",
        "documentation": {}
    },
    {
        "label": "QtCore",
        "importPath": "PyQt5",
        "description": "PyQt5",
        "isExtraImport": true,
        "detail": "PyQt5",
        "documentation": {}
    },
    {
        "label": "QtGui",
        "importPath": "PyQt5",
        "description": "PyQt5",
        "isExtraImport": true,
        "detail": "PyQt5",
        "documentation": {}
    },
    {
        "label": "QtWidgets",
        "importPath": "PyQt5",
        "description": "PyQt5",
        "isExtraImport": true,
        "detail": "PyQt5",
        "documentation": {}
    },
    {
        "label": "QtCore",
        "importPath": "PyQt5",
        "description": "PyQt5",
        "isExtraImport": true,
        "detail": "PyQt5",
        "documentation": {}
    },
    {
        "label": "QtGui",
        "importPath": "PyQt5",
        "description": "PyQt5",
        "isExtraImport": true,
        "detail": "PyQt5",
        "documentation": {}
    },
    {
        "label": "QtWidgets",
        "importPath": "PyQt5",
        "description": "PyQt5",
        "isExtraImport": true,
        "detail": "PyQt5",
        "documentation": {}
    },
    {
        "label": "QtCore",
        "importPath": "PyQt5",
        "description": "PyQt5",
        "isExtraImport": true,
        "detail": "PyQt5",
        "documentation": {}
    },
    {
        "label": "QtGui",
        "importPath": "PyQt5",
        "description": "PyQt5",
        "isExtraImport": true,
        "detail": "PyQt5",
        "documentation": {}
    },
    {
        "label": "QtWidgets",
        "importPath": "PyQt5",
        "description": "PyQt5",
        "isExtraImport": true,
        "detail": "PyQt5",
        "documentation": {}
    },
    {
        "label": "QtCore",
        "importPath": "PyQt5",
        "description": "PyQt5",
        "isExtraImport": true,
        "detail": "PyQt5",
        "documentation": {}
    },
    {
        "label": "QtGui",
        "importPath": "PyQt5",
        "description": "PyQt5",
        "isExtraImport": true,
        "detail": "PyQt5",
        "documentation": {}
    },
    {
        "label": "QtWidgets",
        "importPath": "PyQt5",
        "description": "PyQt5",
        "isExtraImport": true,
        "detail": "PyQt5",
        "documentation": {}
    },
    {
        "label": "QtCore",
        "importPath": "PyQt5",
        "description": "PyQt5",
        "isExtraImport": true,
        "detail": "PyQt5",
        "documentation": {}
    },
    {
        "label": "QtGui",
        "importPath": "PyQt5",
        "description": "PyQt5",
        "isExtraImport": true,
        "detail": "PyQt5",
        "documentation": {}
    },
    {
        "label": "QtWidgets",
        "importPath": "PyQt5",
        "description": "PyQt5",
        "isExtraImport": true,
        "detail": "PyQt5",
        "documentation": {}
    },
    {
        "label": "QtCore",
        "importPath": "PyQt5",
        "description": "PyQt5",
        "isExtraImport": true,
        "detail": "PyQt5",
        "documentation": {}
    },
    {
        "label": "QtGui",
        "importPath": "PyQt5",
        "description": "PyQt5",
        "isExtraImport": true,
        "detail": "PyQt5",
        "documentation": {}
    },
    {
        "label": "QtWidgets",
        "importPath": "PyQt5",
        "description": "PyQt5",
        "isExtraImport": true,
        "detail": "PyQt5",
        "documentation": {}
    },
    {
        "label": "QtCore",
        "importPath": "PyQt5",
        "description": "PyQt5",
        "isExtraImport": true,
        "detail": "PyQt5",
        "documentation": {}
    },
    {
        "label": "QtGui",
        "importPath": "PyQt5",
        "description": "PyQt5",
        "isExtraImport": true,
        "detail": "PyQt5",
        "documentation": {}
    },
    {
        "label": "QtWidgets",
        "importPath": "PyQt5",
        "description": "PyQt5",
        "isExtraImport": true,
        "detail": "PyQt5",
        "documentation": {}
    },
    {
        "label": "QtCore",
        "importPath": "PyQt5",
        "description": "PyQt5",
        "isExtraImport": true,
        "detail": "PyQt5",
        "documentation": {}
    },
    {
        "label": "QtGui",
        "importPath": "PyQt5",
        "description": "PyQt5",
        "isExtraImport": true,
        "detail": "PyQt5",
        "documentation": {}
    },
    {
        "label": "QtWidgets",
        "importPath": "PyQt5",
        "description": "PyQt5",
        "isExtraImport": true,
        "detail": "PyQt5",
        "documentation": {}
    },
    {
        "label": "QtCore",
        "importPath": "PyQt5",
        "description": "PyQt5",
        "isExtraImport": true,
        "detail": "PyQt5",
        "documentation": {}
    },
    {
        "label": "QtGui",
        "importPath": "PyQt5",
        "description": "PyQt5",
        "isExtraImport": true,
        "detail": "PyQt5",
        "documentation": {}
    },
    {
        "label": "QtWidgets",
        "importPath": "PyQt5",
        "description": "PyQt5",
        "isExtraImport": true,
        "detail": "PyQt5",
        "documentation": {}
    },
    {
        "label": "QtCore",
        "importPath": "PyQt5",
        "description": "PyQt5",
        "isExtraImport": true,
        "detail": "PyQt5",
        "documentation": {}
    },
    {
        "label": "QtGui",
        "importPath": "PyQt5",
        "description": "PyQt5",
        "isExtraImport": true,
        "detail": "PyQt5",
        "documentation": {}
    },
    {
        "label": "QtWidgets",
        "importPath": "PyQt5",
        "description": "PyQt5",
        "isExtraImport": true,
        "detail": "PyQt5",
        "documentation": {}
    },
    {
        "label": "QtCore",
        "importPath": "PyQt5",
        "description": "PyQt5",
        "isExtraImport": true,
        "detail": "PyQt5",
        "documentation": {}
    },
    {
        "label": "QtGui",
        "importPath": "PyQt5",
        "description": "PyQt5",
        "isExtraImport": true,
        "detail": "PyQt5",
        "documentation": {}
    },
    {
        "label": "QtWidgets",
        "importPath": "PyQt5",
        "description": "PyQt5",
        "isExtraImport": true,
        "detail": "PyQt5",
        "documentation": {}
    },
    {
        "label": "QtCore",
        "importPath": "PyQt5",
        "description": "PyQt5",
        "isExtraImport": true,
        "detail": "PyQt5",
        "documentation": {}
    },
    {
        "label": "QtGui",
        "importPath": "PyQt5",
        "description": "PyQt5",
        "isExtraImport": true,
        "detail": "PyQt5",
        "documentation": {}
    },
    {
        "label": "QtWidgets",
        "importPath": "PyQt5",
        "description": "PyQt5",
        "isExtraImport": true,
        "detail": "PyQt5",
        "documentation": {}
    },
    {
        "label": "QtCore",
        "importPath": "PyQt5",
        "description": "PyQt5",
        "isExtraImport": true,
        "detail": "PyQt5",
        "documentation": {}
    },
    {
        "label": "QtGui",
        "importPath": "PyQt5",
        "description": "PyQt5",
        "isExtraImport": true,
        "detail": "PyQt5",
        "documentation": {}
    },
    {
        "label": "QtWidgets",
        "importPath": "PyQt5",
        "description": "PyQt5",
        "isExtraImport": true,
        "detail": "PyQt5",
        "documentation": {}
    },
    {
        "label": "QtCore",
        "importPath": "PyQt5",
        "description": "PyQt5",
        "isExtraImport": true,
        "detail": "PyQt5",
        "documentation": {}
    },
    {
        "label": "QtGui",
        "importPath": "PyQt5",
        "description": "PyQt5",
        "isExtraImport": true,
        "detail": "PyQt5",
        "documentation": {}
    },
    {
        "label": "QtWidgets",
        "importPath": "PyQt5",
        "description": "PyQt5",
        "isExtraImport": true,
        "detail": "PyQt5",
        "documentation": {}
    },
    {
        "label": "QtCore",
        "importPath": "PyQt5",
        "description": "PyQt5",
        "isExtraImport": true,
        "detail": "PyQt5",
        "documentation": {}
    },
    {
        "label": "QtGui",
        "importPath": "PyQt5",
        "description": "PyQt5",
        "isExtraImport": true,
        "detail": "PyQt5",
        "documentation": {}
    },
    {
        "label": "QtWidgets",
        "importPath": "PyQt5",
        "description": "PyQt5",
        "isExtraImport": true,
        "detail": "PyQt5",
        "documentation": {}
    },
    {
        "label": "QtCore",
        "importPath": "PyQt5",
        "description": "PyQt5",
        "isExtraImport": true,
        "detail": "PyQt5",
        "documentation": {}
    },
    {
        "label": "QtGui",
        "importPath": "PyQt5",
        "description": "PyQt5",
        "isExtraImport": true,
        "detail": "PyQt5",
        "documentation": {}
    },
    {
        "label": "QtWidgets",
        "importPath": "PyQt5",
        "description": "PyQt5",
        "isExtraImport": true,
        "detail": "PyQt5",
        "documentation": {}
    },
    {
        "label": "QtCore",
        "importPath": "PyQt5",
        "description": "PyQt5",
        "isExtraImport": true,
        "detail": "PyQt5",
        "documentation": {}
    },
    {
        "label": "QtGui",
        "importPath": "PyQt5",
        "description": "PyQt5",
        "isExtraImport": true,
        "detail": "PyQt5",
        "documentation": {}
    },
    {
        "label": "QtWidgets",
        "importPath": "PyQt5",
        "description": "PyQt5",
        "isExtraImport": true,
        "detail": "PyQt5",
        "documentation": {}
    },
    {
        "label": "QtCore",
        "importPath": "PyQt5",
        "description": "PyQt5",
        "isExtraImport": true,
        "detail": "PyQt5",
        "documentation": {}
    },
    {
        "label": "QtGui",
        "importPath": "PyQt5",
        "description": "PyQt5",
        "isExtraImport": true,
        "detail": "PyQt5",
        "documentation": {}
    },
    {
        "label": "QtWidgets",
        "importPath": "PyQt5",
        "description": "PyQt5",
        "isExtraImport": true,
        "detail": "PyQt5",
        "documentation": {}
    },
    {
        "label": "QtCore",
        "importPath": "PyQt5",
        "description": "PyQt5",
        "isExtraImport": true,
        "detail": "PyQt5",
        "documentation": {}
    },
    {
        "label": "QtGui",
        "importPath": "PyQt5",
        "description": "PyQt5",
        "isExtraImport": true,
        "detail": "PyQt5",
        "documentation": {}
    },
    {
        "label": "QtWidgets",
        "importPath": "PyQt5",
        "description": "PyQt5",
        "isExtraImport": true,
        "detail": "PyQt5",
        "documentation": {}
    },
    {
        "label": "QMessageBox",
        "importPath": "PyQt5.QtWidgets",
        "description": "PyQt5.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt5.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QMessageBox",
        "importPath": "PyQt5.QtWidgets",
        "description": "PyQt5.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt5.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QMessageBox",
        "importPath": "PyQt5.QtWidgets",
        "description": "PyQt5.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt5.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QMessageBox",
        "importPath": "PyQt5.QtWidgets",
        "description": "PyQt5.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt5.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QMessageBox",
        "importPath": "PyQt5.QtWidgets",
        "description": "PyQt5.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt5.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QMessageBox",
        "importPath": "PyQt5.QtWidgets",
        "description": "PyQt5.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt5.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QMessageBox",
        "importPath": "PyQt5.QtWidgets",
        "description": "PyQt5.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt5.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QMessageBox",
        "importPath": "PyQt5.QtWidgets",
        "description": "PyQt5.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt5.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QMessageBox",
        "importPath": "PyQt5.QtWidgets",
        "description": "PyQt5.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt5.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QMessageBox",
        "importPath": "PyQt5.QtWidgets",
        "description": "PyQt5.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt5.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QMessageBox",
        "importPath": "PyQt5.QtWidgets",
        "description": "PyQt5.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt5.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QMessageBox",
        "importPath": "PyQt5.QtWidgets",
        "description": "PyQt5.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt5.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QMessageBox",
        "importPath": "PyQt5.QtWidgets",
        "description": "PyQt5.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt5.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QMessageBox",
        "importPath": "PyQt5.QtWidgets",
        "description": "PyQt5.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt5.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QMessageBox",
        "importPath": "PyQt5.QtWidgets",
        "description": "PyQt5.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt5.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QMessageBox",
        "importPath": "PyQt5.QtWidgets",
        "description": "PyQt5.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt5.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QMessageBox",
        "importPath": "PyQt5.QtWidgets",
        "description": "PyQt5.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt5.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QMessageBox",
        "importPath": "PyQt5.QtWidgets",
        "description": "PyQt5.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt5.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QMessageBox",
        "importPath": "PyQt5.QtWidgets",
        "description": "PyQt5.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt5.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QMessageBox",
        "importPath": "PyQt5.QtWidgets",
        "description": "PyQt5.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt5.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QMessageBox",
        "importPath": "PyQt5.QtWidgets",
        "description": "PyQt5.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt5.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QMessageBox",
        "importPath": "PyQt5.QtWidgets",
        "description": "PyQt5.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt5.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QMessageBox",
        "importPath": "PyQt5.QtWidgets",
        "description": "PyQt5.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt5.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QMessageBox",
        "importPath": "PyQt5.QtWidgets",
        "description": "PyQt5.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt5.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QMessageBox",
        "importPath": "PyQt5.QtWidgets",
        "description": "PyQt5.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt5.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QMessageBox",
        "importPath": "PyQt5.QtWidgets",
        "description": "PyQt5.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt5.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QMessageBox",
        "importPath": "PyQt5.QtWidgets",
        "description": "PyQt5.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt5.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QMessageBox",
        "importPath": "PyQt5.QtWidgets",
        "description": "PyQt5.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt5.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QMessageBox",
        "importPath": "PyQt5.QtWidgets",
        "description": "PyQt5.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt5.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QMessageBox",
        "importPath": "PyQt5.QtWidgets",
        "description": "PyQt5.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt5.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QMessageBox",
        "importPath": "PyQt5.QtWidgets",
        "description": "PyQt5.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt5.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QMessageBox",
        "importPath": "PyQt5.QtWidgets",
        "description": "PyQt5.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt5.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QMessageBox",
        "importPath": "PyQt5.QtWidgets",
        "description": "PyQt5.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt5.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QMessageBox",
        "importPath": "PyQt5.QtWidgets",
        "description": "PyQt5.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt5.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QMessageBox",
        "importPath": "PyQt5.QtWidgets",
        "description": "PyQt5.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt5.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QMessageBox",
        "importPath": "PyQt5.QtWidgets",
        "description": "PyQt5.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt5.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QMessageBox",
        "importPath": "PyQt5.QtWidgets",
        "description": "PyQt5.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt5.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QMessageBox",
        "importPath": "PyQt5.QtWidgets",
        "description": "PyQt5.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt5.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QMessageBox",
        "importPath": "PyQt5.QtWidgets",
        "description": "PyQt5.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt5.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QMessageBox",
        "importPath": "PyQt5.QtWidgets",
        "description": "PyQt5.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt5.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QMessageBox",
        "importPath": "PyQt5.QtWidgets",
        "description": "PyQt5.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt5.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QMessageBox",
        "importPath": "PyQt5.QtWidgets",
        "description": "PyQt5.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt5.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QMessageBox",
        "importPath": "PyQt5.QtWidgets",
        "description": "PyQt5.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt5.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QMessageBox",
        "importPath": "PyQt5.QtWidgets",
        "description": "PyQt5.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt5.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QMessageBox",
        "importPath": "PyQt5.QtWidgets",
        "description": "PyQt5.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt5.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QMessageBox",
        "importPath": "PyQt5.QtWidgets",
        "description": "PyQt5.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt5.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QMessageBox",
        "importPath": "PyQt5.QtWidgets",
        "description": "PyQt5.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt5.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QMessageBox",
        "importPath": "PyQt5.QtWidgets",
        "description": "PyQt5.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt5.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QMessageBox",
        "importPath": "PyQt5.QtWidgets",
        "description": "PyQt5.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt5.QtWidgets",
        "documentation": {}
    },
    {
        "label": "openpyxl",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "openpyxl",
        "description": "openpyxl",
        "detail": "openpyxl",
        "documentation": {}
    },
    {
        "label": "math",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "math",
        "description": "math",
        "detail": "math",
        "documentation": {}
    },
    {
        "label": "QMovie",
        "importPath": "PyQt5.QtGui",
        "description": "PyQt5.QtGui",
        "isExtraImport": true,
        "detail": "PyQt5.QtGui",
        "documentation": {}
    },
    {
        "label": "QMovie",
        "importPath": "PyQt5.QtGui",
        "description": "PyQt5.QtGui",
        "isExtraImport": true,
        "detail": "PyQt5.QtGui",
        "documentation": {}
    },
    {
        "label": "Ui_LOGICIEL_DE_CALCUL",
        "importPath": "menu",
        "description": "menu",
        "isExtraImport": true,
        "detail": "menu",
        "documentation": {}
    },
    {
        "label": "Ui_calcul_module",
        "importPath": "biblio.calcul_module",
        "description": "biblio.calcul_module",
        "isExtraImport": true,
        "detail": "biblio.calcul_module",
        "documentation": {}
    },
    {
        "label": "Ui_fenetre_case1",
        "importPath": "biblio.contenu_case1",
        "description": "biblio.contenu_case1",
        "isExtraImport": true,
        "detail": "biblio.contenu_case1",
        "documentation": {}
    },
    {
        "label": "Ui_denture_droite_ch1",
        "importPath": "biblio.denture_droiteEX",
        "description": "biblio.denture_droiteEX",
        "isExtraImport": true,
        "detail": "biblio.denture_droiteEX",
        "documentation": {}
    },
    {
        "label": "Ui_denture_droite_ch11",
        "importPath": "biblio.denture_droiteIN",
        "description": "biblio.denture_droiteIN",
        "isExtraImport": true,
        "detail": "biblio.denture_droiteIN",
        "documentation": {}
    },
    {
        "label": "Ui_denture_droite_hE_ch1",
        "importPath": "biblio.denture_droite_hE",
        "description": "biblio.denture_droite_hE",
        "isExtraImport": true,
        "detail": "biblio.denture_droite_hE",
        "documentation": {}
    },
    {
        "label": "Ui_denture_droite_hI_ch1",
        "importPath": "biblio.denture_droite_hI",
        "description": "biblio.denture_droite_hI",
        "isExtraImport": true,
        "detail": "biblio.denture_droite_hI",
        "documentation": {}
    },
    {
        "label": "Ui_different_type_engrenage",
        "importPath": "biblio.fenetre_2",
        "description": "biblio.fenetre_2",
        "isExtraImport": true,
        "detail": "biblio.fenetre_2",
        "documentation": {}
    },
    {
        "label": "Ui_ENGRENAGES_DEPORTEES",
        "importPath": "biblio.Engrenages_Deportees",
        "description": "biblio.Engrenages_Deportees",
        "isExtraImport": true,
        "detail": "biblio.Engrenages_Deportees",
        "documentation": {}
    },
    {
        "label": "Ui_VARIATION_ENTRAXE",
        "importPath": "biblio.Engrenages_deportes_avec_variation_entraxe",
        "description": "biblio.Engrenages_deportes_avec_variation_entraxe",
        "isExtraImport": true,
        "detail": "biblio.Engrenages_deportes_avec_variation_entraxe",
        "documentation": {}
    },
    {
        "label": "Ui_SANS_VARIATION_ENTRAXE",
        "importPath": "biblio.Engrenages_deportes_sans_variation_entraxe",
        "description": "biblio.Engrenages_deportes_sans_variation_entraxe",
        "isExtraImport": true,
        "detail": "biblio.Engrenages_deportes_sans_variation_entraxe",
        "documentation": {}
    },
    {
        "label": "Ui_DEPORTS_AVEC_VARIATION_ENTRAXE",
        "importPath": "biblio.Deports_avec_variation_entraxe",
        "description": "biblio.Deports_avec_variation_entraxe",
        "isExtraImport": true,
        "detail": "biblio.Deports_avec_variation_entraxe",
        "documentation": {}
    },
    {
        "label": "Ui_DEPORTS_SANS_VARIATION_ENTRAXE",
        "importPath": "biblio.Deports_sans_variation_entraxe",
        "description": "biblio.Deports_sans_variation_entraxe",
        "isExtraImport": true,
        "detail": "biblio.Deports_sans_variation_entraxe",
        "documentation": {}
    },
    {
        "label": "Ui_METHODE_ISO_SANS_VARIATION_ENTRAXE",
        "importPath": "biblio.Methode_ISO_Sans_Variation_Entraxe",
        "description": "biblio.Methode_ISO_Sans_Variation_Entraxe",
        "isExtraImport": true,
        "detail": "biblio.Methode_ISO_Sans_Variation_Entraxe",
        "documentation": {}
    },
    {
        "label": "Ui_METHODE_MAAGTASCHENBUCH_SANS_VARIATION_ENTRAXE",
        "importPath": "biblio.Methode_MAAG_TASCHENBUCH_Sans_Variation_Entraxe",
        "description": "biblio.Methode_MAAG_TASCHENBUCH_Sans_Variation_Entraxe",
        "isExtraImport": true,
        "detail": "biblio.Methode_MAAG_TASCHENBUCH_Sans_Variation_Entraxe",
        "documentation": {}
    },
    {
        "label": "Ui_METHODE_WRICHTER_SANS_VARIATION_ENTRAXE",
        "importPath": "biblio.Methode_W_RICHTER_Sans_Variation_Entraxe",
        "description": "biblio.Methode_W_RICHTER_Sans_Variation_Entraxe",
        "isExtraImport": true,
        "detail": "biblio.Methode_W_RICHTER_Sans_Variation_Entraxe",
        "documentation": {}
    },
    {
        "label": "Ui_METHODE_ISO_D_DROITE",
        "importPath": "biblio.Methode_ISO_denture_droite",
        "description": "biblio.Methode_ISO_denture_droite",
        "isExtraImport": true,
        "detail": "biblio.Methode_ISO_denture_droite",
        "documentation": {}
    },
    {
        "label": "Ui_METHODE_ISO_D_HELICOIDALE",
        "importPath": "biblio.Methode_METHODE_ISO_denture_helicoidale",
        "description": "biblio.Methode_METHODE_ISO_denture_helicoidale",
        "isExtraImport": true,
        "detail": "biblio.Methode_METHODE_ISO_denture_helicoidale",
        "documentation": {}
    },
    {
        "label": "Ui_METHODE_W_RICHTER_D_DROITE",
        "importPath": "biblio.Methode_W_RICHTER_denture_droite",
        "description": "biblio.Methode_W_RICHTER_denture_droite",
        "isExtraImport": true,
        "detail": "biblio.Methode_W_RICHTER_denture_droite",
        "documentation": {}
    },
    {
        "label": "Ui_METHODE_DE_W_RICHTER_D_HELICOIDALE",
        "importPath": "biblio.Methode_METHODE_DE_W_RICHTER_denture_helicoidale",
        "description": "biblio.Methode_METHODE_DE_W_RICHTER_denture_helicoidale",
        "isExtraImport": true,
        "detail": "biblio.Methode_METHODE_DE_W_RICHTER_denture_helicoidale",
        "documentation": {}
    },
    {
        "label": "Ui_METHODE_MAAG_TASCHENBUCH_D_DROITE",
        "importPath": "biblio.Methode_MAAG_TASCHENBUCH_denture_droite",
        "description": "biblio.Methode_MAAG_TASCHENBUCH_denture_droite",
        "isExtraImport": true,
        "detail": "biblio.Methode_MAAG_TASCHENBUCH_denture_droite",
        "documentation": {}
    },
    {
        "label": "Ui_METHODE_MAAG_TASCHENBUCH_D_HELICOIDALE",
        "importPath": "biblio.Methode_MAAG_TASCHENBUCH_denture_helicoidale",
        "description": "biblio.Methode_MAAG_TASCHENBUCH_denture_helicoidale",
        "isExtraImport": true,
        "detail": "biblio.Methode_MAAG_TASCHENBUCH_denture_helicoidale",
        "documentation": {}
    },
    {
        "label": "Ui_Denture_droite_deporteE",
        "importPath": "biblio.denture_droite_EXTERIEUR_DEPORTE",
        "description": "biblio.denture_droite_EXTERIEUR_DEPORTE",
        "isExtraImport": true,
        "detail": "biblio.denture_droite_EXTERIEUR_DEPORTE",
        "documentation": {}
    },
    {
        "label": "Ui_Denture_droite_deporteIN",
        "importPath": "biblio.denture_droite_INTERIEUR_DEPORTE",
        "description": "biblio.denture_droite_INTERIEUR_DEPORTE",
        "isExtraImport": true,
        "detail": "biblio.denture_droite_INTERIEUR_DEPORTE",
        "documentation": {}
    },
    {
        "label": "Ui_Denture_droiteH_deporteIN",
        "importPath": "biblio.denture_droiteH_deporteIN",
        "description": "biblio.denture_droiteH_deporteIN",
        "isExtraImport": true,
        "detail": "biblio.denture_droiteH_deporteIN",
        "documentation": {}
    },
    {
        "label": "Ui_Denture_droiteH_deporteE",
        "importPath": "biblio.denture_droiteH_deporteEX",
        "description": "biblio.denture_droiteH_deporteEX",
        "isExtraImport": true,
        "detail": "biblio.denture_droiteH_deporteEX",
        "documentation": {}
    },
    {
        "label": "Ui_Denture_droite_deporteEX_VARIATION_ANT_NON_IMPOSE",
        "importPath": "biblio.denture_droite_EXTERIEUR_DEPORTE_VARIATION_ANT_NON_IMPOSE",
        "description": "biblio.denture_droite_EXTERIEUR_DEPORTE_VARIATION_ANT_NON_IMPOSE",
        "isExtraImport": true,
        "detail": "biblio.denture_droite_EXTERIEUR_DEPORTE_VARIATION_ANT_NON_IMPOSE",
        "documentation": {}
    },
    {
        "label": "Ui_Denture_droite_deporteIN_VARIATION_ANT_NON_IMPOSE",
        "importPath": "biblio.denture_droite_INTERIEUR_DEPORTE_VARIATION_ANT_NON_IMPOSE",
        "description": "biblio.denture_droite_INTERIEUR_DEPORTE_VARIATION_ANT_NON_IMPOSE",
        "isExtraImport": true,
        "detail": "biblio.denture_droite_INTERIEUR_DEPORTE_VARIATION_ANT_NON_IMPOSE",
        "documentation": {}
    },
    {
        "label": "Ui_Denture_droiteH_deporteE_VARIATION_ANT_NON_IMPOSE",
        "importPath": "biblio.denture_droiteH_deporteEX_VARIATION_ENTRAXE_NON_IMPOSE",
        "description": "biblio.denture_droiteH_deporteEX_VARIATION_ENTRAXE_NON_IMPOSE",
        "isExtraImport": true,
        "detail": "biblio.denture_droiteH_deporteEX_VARIATION_ENTRAXE_NON_IMPOSE",
        "documentation": {}
    },
    {
        "label": "Ui_Denture_droiteH_deporteIN_VARIATION_ANT_NON_IMPOSE",
        "importPath": "biblio.denture_droiteH_deporteIN_VARIATION_ENTRAXE_NON_IMPOSE",
        "description": "biblio.denture_droiteH_deporteIN_VARIATION_ENTRAXE_NON_IMPOSE",
        "isExtraImport": true,
        "detail": "biblio.denture_droiteH_deporteIN_VARIATION_ENTRAXE_NON_IMPOSE",
        "documentation": {}
    },
    {
        "label": "Ui_Denture_droite_deporteEX_VARIATION_ENT_IMPOSE",
        "importPath": "biblio.DENTURE_DROITE_EXTERIEUR_DEPORTE_VARIATION_ENT_IMPOSE",
        "description": "biblio.DENTURE_DROITE_EXTERIEUR_DEPORTE_VARIATION_ENT_IMPOSE",
        "isExtraImport": true,
        "detail": "biblio.DENTURE_DROITE_EXTERIEUR_DEPORTE_VARIATION_ENT_IMPOSE",
        "documentation": {}
    },
    {
        "label": "Ui_Denture_droite_deporteIN_VARIATION_ENT_IMPOSE",
        "importPath": "biblio.DENTURE_DROITE_INTERIEUR_DEPORTE_VARIATION_ENT_IMPOSE",
        "description": "biblio.DENTURE_DROITE_INTERIEUR_DEPORTE_VARIATION_ENT_IMPOSE",
        "isExtraImport": true,
        "detail": "biblio.DENTURE_DROITE_INTERIEUR_DEPORTE_VARIATION_ENT_IMPOSE",
        "documentation": {}
    },
    {
        "label": "Ui_Denture_droiteH_deporteE_VARIATION_ENT_IMPOSE",
        "importPath": "biblio.DENTURE_HELICOIDALE_deporteEXTERIEUR_VARIATION_ENTRAXE_IMPOSE",
        "description": "biblio.DENTURE_HELICOIDALE_deporteEXTERIEUR_VARIATION_ENTRAXE_IMPOSE",
        "isExtraImport": true,
        "detail": "biblio.DENTURE_HELICOIDALE_deporteEXTERIEUR_VARIATION_ENTRAXE_IMPOSE",
        "documentation": {}
    },
    {
        "label": "Ui_Denture_droiteH_deporteIN_VARIATION_ENT_IMPOSE",
        "importPath": "biblio.DENTURE_HELICOIDALE_deporteINTERIEUR_VARIATION_ENTRAXE_IMPOSE",
        "description": "biblio.DENTURE_HELICOIDALE_deporteINTERIEUR_VARIATION_ENTRAXE_IMPOSE",
        "isExtraImport": true,
        "detail": "biblio.DENTURE_HELICOIDALE_deporteINTERIEUR_VARIATION_ENTRAXE_IMPOSE",
        "documentation": {}
    },
    {
        "label": "Ui_ENGRENAGE_CONCOURANTE",
        "importPath": "biblio.ENGRENAGE_CONCOURANTE",
        "description": "biblio.ENGRENAGE_CONCOURANTE",
        "isExtraImport": true,
        "detail": "biblio.ENGRENAGE_CONCOURANTE",
        "documentation": {}
    },
    {
        "label": "Ui_ENGRENAGE_CONIQUE_DROIT_DENTURE_DEPORTEE",
        "importPath": "biblio.ENGRENAGE_CONIQUE_DROIT_DENTURE_DEPORTEE",
        "description": "biblio.ENGRENAGE_CONIQUE_DROIT_DENTURE_DEPORTEE",
        "isExtraImport": true,
        "detail": "biblio.ENGRENAGE_CONIQUE_DROIT_DENTURE_DEPORTEE",
        "documentation": {}
    },
    {
        "label": "Ui_ENGRENAGE_CONIQUE_DROIT_DENTURE_NORMALE",
        "importPath": "biblio.ENGRENAGE_CONIQUE_DROIT_DENTURE_NORMALE",
        "description": "biblio.ENGRENAGE_CONIQUE_DROIT_DENTURE_NORMALE",
        "isExtraImport": true,
        "detail": "biblio.ENGRENAGE_CONIQUE_DROIT_DENTURE_NORMALE",
        "documentation": {}
    },
    {
        "label": "Ui_ENGRENAGE_CONIQUE_HELICOIDALE_DEPORTEE",
        "importPath": "biblio.ENGRENAGE_CONIQUE_HELICOIDALE_DEPORTEE",
        "description": "biblio.ENGRENAGE_CONIQUE_HELICOIDALE_DEPORTEE",
        "isExtraImport": true,
        "detail": "biblio.ENGRENAGE_CONIQUE_HELICOIDALE_DEPORTEE",
        "documentation": {}
    },
    {
        "label": "Ui_ENGRENAGE_CONIQUE_HELICOIDALE_NON_DEPORTEE",
        "importPath": "biblio.ENGRENAGE_CONIQUE_HELICOIDALE_NON_DEPORTEE",
        "description": "biblio.ENGRENAGE_CONIQUE_HELICOIDALE_NON_DEPORTEE",
        "isExtraImport": true,
        "detail": "biblio.ENGRENAGE_CONIQUE_HELICOIDALE_NON_DEPORTEE",
        "documentation": {}
    },
    {
        "label": "Ui_ROUE_VIS_SANS_FIN",
        "importPath": "biblio.ROUE_VIS_SANS_FIN",
        "description": "biblio.ROUE_VIS_SANS_FIN",
        "isExtraImport": true,
        "detail": "biblio.ROUE_VIS_SANS_FIN",
        "documentation": {}
    },
    {
        "label": "Ui_RESISTANCE_EFFORT",
        "importPath": "biblio.RESISTANCE_EFFORTS",
        "description": "biblio.RESISTANCE_EFFORTS",
        "isExtraImport": true,
        "detail": "biblio.RESISTANCE_EFFORTS",
        "documentation": {}
    },
    {
        "label": "Ui_LES_EFFORTS_SUR_DENTS",
        "importPath": "biblio.LES_EFFORTS_SUR_DENTS",
        "description": "biblio.LES_EFFORTS_SUR_DENTS",
        "isExtraImport": true,
        "detail": "biblio.LES_EFFORTS_SUR_DENTS",
        "documentation": {}
    },
    {
        "label": "Ui_DENTURE_DROITE_PARALLELE",
        "importPath": "biblio.LES_EFFORTS_DENTURE_DROITE_PARALLELE",
        "description": "biblio.LES_EFFORTS_DENTURE_DROITE_PARALLELE",
        "isExtraImport": true,
        "detail": "biblio.LES_EFFORTS_DENTURE_DROITE_PARALLELE",
        "documentation": {}
    },
    {
        "label": "Ui_DENTURE_HELICOIDALE_PARALLELE",
        "importPath": "biblio.LES_EFFORTS_DENTURE_HELICOIDALE_PARALLELE",
        "description": "biblio.LES_EFFORTS_DENTURE_HELICOIDALE_PARALLELE",
        "isExtraImport": true,
        "detail": "biblio.LES_EFFORTS_DENTURE_HELICOIDALE_PARALLELE",
        "documentation": {}
    },
    {
        "label": "Ui_DENTURE_CONIQUE",
        "importPath": "biblio.LES_EFFORTS_DENTURE_CONIQUE",
        "description": "biblio.LES_EFFORTS_DENTURE_CONIQUE",
        "isExtraImport": true,
        "detail": "biblio.LES_EFFORTS_DENTURE_CONIQUE",
        "documentation": {}
    },
    {
        "label": "Ui_LES_EFFORTS_ROUE_ET_VIS",
        "importPath": "biblio.LES_EFFORTS_ROUE_ET_VIS",
        "description": "biblio.LES_EFFORTS_ROUE_ET_VIS",
        "isExtraImport": true,
        "detail": "biblio.LES_EFFORTS_ROUE_ET_VIS",
        "documentation": {}
    },
    {
        "label": "Ui_RESISTANCE_ENGRENAGE_PARALLELE",
        "importPath": "biblio.CALCUL_DE_RESISTANCE_DES_DENTS_DES_ENGRENAGES_PARALLELES",
        "description": "biblio.CALCUL_DE_RESISTANCE_DES_DENTS_DES_ENGRENAGES_PARALLELES",
        "isExtraImport": true,
        "detail": "biblio.CALCUL_DE_RESISTANCE_DES_DENTS_DES_ENGRENAGES_PARALLELES",
        "documentation": {}
    },
    {
        "label": "Ui_RESISTANCE_DROITE_ENTRAXE_NON_IMPOSE",
        "importPath": "biblio.RESISTANCE_DROITE_ENTRAXE_NON_IMPOSE",
        "description": "biblio.RESISTANCE_DROITE_ENTRAXE_NON_IMPOSE",
        "isExtraImport": true,
        "detail": "biblio.RESISTANCE_DROITE_ENTRAXE_NON_IMPOSE",
        "documentation": {}
    },
    {
        "label": "Ui_RESISTANCE_DROITE_AVEC_ENTRAXE_IMPOSE",
        "importPath": "biblio.RESISTANCE_DROITE_AVEC_ENTRAXE_IMPOSE",
        "description": "biblio.RESISTANCE_DROITE_AVEC_ENTRAXE_IMPOSE",
        "isExtraImport": true,
        "detail": "biblio.RESISTANCE_DROITE_AVEC_ENTRAXE_IMPOSE",
        "documentation": {}
    },
    {
        "label": "Ui_RESISTANCE_HELICOI_ENTRAXE_NON_IMPOSE",
        "importPath": "biblio.RESISTANCE_HELICOI_ENTRAXE_NON_IMPOSE",
        "description": "biblio.RESISTANCE_HELICOI_ENTRAXE_NON_IMPOSE",
        "isExtraImport": true,
        "detail": "biblio.RESISTANCE_HELICOI_ENTRAXE_NON_IMPOSE",
        "documentation": {}
    },
    {
        "label": "Ui_RESISTANCE_HELICOI_ENTRAXE_IMPOSE",
        "importPath": "biblio.RESISTANCE_HELICOI_ENTRAXE_IMPOSE",
        "description": "biblio.RESISTANCE_HELICOI_ENTRAXE_IMPOSE",
        "isExtraImport": true,
        "detail": "biblio.RESISTANCE_HELICOI_ENTRAXE_IMPOSE",
        "documentation": {}
    },
    {
        "label": "sys",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "sys",
        "description": "sys",
        "detail": "sys",
        "documentation": {}
    },
    {
        "label": "Ui_MENU",
        "kind": 6,
        "importPath": "biblio.ui.CL",
        "description": "biblio.ui.CL",
        "peekOfCode": "class Ui_MENU(object):\n    def setupUi(self, MENU):\n        MENU.setObjectName(\"MENU\")\n        MENU.resize(709, 454)\n        MENU.setMinimumSize(QtCore.QSize(709, 454))\n        MENU.setCursor(QtGui.QCursor(QtCore.Qt.ArrowCursor))\n        self.centralwidget = QtWidgets.QWidget(MENU)\n        self.centralwidget.setObjectName(\"centralwidget\")\n        self.gridLayout = QtWidgets.QGridLayout(self.centralwidget)\n        self.gridLayout.setObjectName(\"gridLayout\")",
        "detail": "biblio.ui.CL",
        "documentation": {}
    },
    {
        "label": "Ui_ENGRENAGE_CONCOURANTE",
        "kind": 6,
        "importPath": "biblio.ui.ENGRENAGE_CONCOURANTE",
        "description": "biblio.ui.ENGRENAGE_CONCOURANTE",
        "peekOfCode": "class Ui_ENGRENAGE_CONCOURANTE(object):\n    def setupUi(self, ENGRENAGE_CONCOURANTE):\n        ENGRENAGE_CONCOURANTE.setObjectName(\"ENGRENAGE_CONCOURANTE\")\n        ENGRENAGE_CONCOURANTE.resize(660, 594)\n        icon = QtGui.QIcon()\n        icon.addPixmap(QtGui.QPixmap(\"reducteur_gearexpert.gif\"), QtGui.QIcon.Normal, QtGui.QIcon.Off)\n        ENGRENAGE_CONCOURANTE.setWindowIcon(icon)\n        self.gridLayout_2 = QtWidgets.QGridLayout(ENGRENAGE_CONCOURANTE)\n        self.gridLayout_2.setObjectName(\"gridLayout_2\")\n        self.scrollArea = QtWidgets.QScrollArea(ENGRENAGE_CONCOURANTE)",
        "detail": "biblio.ui.ENGRENAGE_CONCOURANTE",
        "documentation": {}
    },
    {
        "label": "Ui_ENGRENAGE_CONIQUE_DROIT_DENTURE_DEPORTEE",
        "kind": 6,
        "importPath": "biblio.ui.ENGRENAGE_CONIQUE_DROIT_DENTURE_DEPORTEE",
        "description": "biblio.ui.ENGRENAGE_CONIQUE_DROIT_DENTURE_DEPORTEE",
        "peekOfCode": "class Ui_ENGRENAGE_CONIQUE_DROIT_DENTURE_DEPORTEE(object):\n    def calculer_engrenage(self):\n        try:\n            M = float(self.lineEdit1.text())\n            A_P = float(self.lineEdit2.text())\n            Σ = float(self.lineEdit3.text())\n            b = float(self.lineEdit4.text())    \n            Z1 = int(self.lineEdit5.text())\n            Z2 = int(self.lineEdit6.text()) \n            x1 = float(self.lineEdit7.text())",
        "detail": "biblio.ui.ENGRENAGE_CONIQUE_DROIT_DENTURE_DEPORTEE",
        "documentation": {}
    },
    {
        "label": "Ui_ENGRENAGE_CONIQUE_DROIT_DENTURE_NORMALE",
        "kind": 6,
        "importPath": "biblio.ui.ENGRENAGE_CONIQUE_DROIT_DENTURE_NORMALE",
        "description": "biblio.ui.ENGRENAGE_CONIQUE_DROIT_DENTURE_NORMALE",
        "peekOfCode": "class Ui_ENGRENAGE_CONIQUE_DROIT_DENTURE_NORMALE(object):\n    def calculer_engrenage(self):\n        try:\n            M = float(self.lineEdit1.text())\n            A_P = float(self.lineEdit2.text())\n            Σ = float(self.lineEdit3.text())\n            b = float(self.lineEdit4.text())    \n            Z1 = int(self.lineEdit5.text())\n            Z2 = int(self.lineEdit6.text())             \n            Jn = 0",
        "detail": "biblio.ui.ENGRENAGE_CONIQUE_DROIT_DENTURE_NORMALE",
        "documentation": {}
    },
    {
        "label": "Ui_ENGRENAGE_CONIQUE_HELICOIDALE_DEPORTEE",
        "kind": 6,
        "importPath": "biblio.ui.ENGRENAGE_CONIQUE_HELICOIDALE_DEPORTEE",
        "description": "biblio.ui.ENGRENAGE_CONIQUE_HELICOIDALE_DEPORTEE",
        "peekOfCode": "class Ui_ENGRENAGE_CONIQUE_HELICOIDALE_DEPORTEE(object):\n    def calculer_engrenage(self):\n        try:\n            M = float(self.lineEdit1.text())\n            A_P = float(self.lineEdit2.text())\n            A_H = float(self.lineEdit2_1.text())\n            Σ = float(self.lineEdit3.text())\n            b = float(self.lineEdit4.text())    \n            Z1 = int(self.lineEdit5.text())\n            Z2 = int(self.lineEdit6.text())",
        "detail": "biblio.ui.ENGRENAGE_CONIQUE_HELICOIDALE_DEPORTEE",
        "documentation": {}
    },
    {
        "label": "Ui_ENGRENAGE_CONIQUE_HELICOIDALE_NON_DEPORTEE",
        "kind": 6,
        "importPath": "biblio.ui.ENGRENAGE_CONIQUE_HELICOIDALE_NON_DEPORTEE",
        "description": "biblio.ui.ENGRENAGE_CONIQUE_HELICOIDALE_NON_DEPORTEE",
        "peekOfCode": "class Ui_ENGRENAGE_CONIQUE_HELICOIDALE_NON_DEPORTEE(object):\n    def calculer_engrenage(self):\n        try:\n            M = float(self.lineEdit1.text())\n            A_P = float(self.lineEdit2.text())\n            A_H = float(self.lineEdit2_1.text())\n            Σ = float(self.lineEdit3.text())\n            b = float(self.lineEdit4.text())    \n            Z1 = int(self.lineEdit5.text())\n            Z2 = int(self.lineEdit6.text())",
        "detail": "biblio.ui.ENGRENAGE_CONIQUE_HELICOIDALE_NON_DEPORTEE",
        "documentation": {}
    },
    {
        "label": "Ui_DENTURE_DROITE_PARALLELE",
        "kind": 6,
        "importPath": "biblio.ui.LES_EFFORTS_DENTURE_DROITE_PARALLELE",
        "description": "biblio.ui.LES_EFFORTS_DENTURE_DROITE_PARALLELE",
        "peekOfCode": "class Ui_DENTURE_DROITE_PARALLELE(object):\n    def calculer_engrenage(self):\n        try:\n            m = float(self.lineEdit1.text())\n            alpha = float(self.lineEdit2.text())\n            P = float(self.lineEdit3.text())\n            N = float(self.lineEdit4.text())\n            Zm = float(self.lineEdit5.text())    \n            η = float(self.lineEdit6.text())\n            C1 = (30*P)/(math.pi*N)",
        "detail": "biblio.ui.LES_EFFORTS_DENTURE_DROITE_PARALLELE",
        "documentation": {}
    },
    {
        "label": "Ui_DENTURE_HELICOIDALE_PARALLELE",
        "kind": 6,
        "importPath": "biblio.ui.LES_EFFORTS_DENTURE_HELICOIDALE_PARALLELE",
        "description": "biblio.ui.LES_EFFORTS_DENTURE_HELICOIDALE_PARALLELE",
        "peekOfCode": "class Ui_DENTURE_HELICOIDALE_PARALLELE(object):\n    def calculer_engrenage(self):\n        try:\n            m = float(self.lineEdit1.text())\n            alpha = float(self.lineEdit2.text())\n            β = float(self.lineEdit2_1.text())\n            P = float(self.lineEdit3.text())\n            N = float(self.lineEdit4.text())\n            Zm = float(self.lineEdit5.text())    \n            η = float(self.lineEdit6.text())",
        "detail": "biblio.ui.LES_EFFORTS_DENTURE_HELICOIDALE_PARALLELE",
        "documentation": {}
    },
    {
        "label": "Ui_LES_EFFORTS_ROUE_ET_VIS",
        "kind": 6,
        "importPath": "biblio.ui.LES_EFFORTS_ROUE_ET_VIS",
        "description": "biblio.ui.LES_EFFORTS_ROUE_ET_VIS",
        "peekOfCode": "class Ui_LES_EFFORTS_ROUE_ET_VIS(object):\n    def perform_selected_calculation(self):\n        R = \"\"\n        if self.radioButton.isChecked():\n            R = \"vis\"\n        elif self.radioButton_2.isChecked():\n            R = \"roue\"\n        else:\n            QMessageBox.warning(None, \"Erreur de sélection\", \"Veuillez sélectionner entre la vis et la roue celle qui est menante.\")\n            return",
        "detail": "biblio.ui.LES_EFFORTS_ROUE_ET_VIS",
        "documentation": {}
    },
    {
        "label": "Ui_LOGICIEL_DE_CALCUL",
        "kind": 6,
        "importPath": "biblio.ui.menu",
        "description": "biblio.ui.menu",
        "peekOfCode": "class Ui_LOGICIEL_DE_CALCUL(object):\n    def setupUi(self, LOGICIEL_DE_CALCUL):\n        LOGICIEL_DE_CALCUL.setObjectName(\"LOGICIEL_DE_CALCUL\")\n        LOGICIEL_DE_CALCUL.resize(709, 454)\n        LOGICIEL_DE_CALCUL.setMinimumSize(QtCore.QSize(709, 454))\n        LOGICIEL_DE_CALCUL.setCursor(QtGui.QCursor(QtCore.Qt.ArrowCursor))\n        #############################################################\n        LOGICIEL_DE_CALCUL.setStyleSheet(\"background-color: #00aaff;\")\n        icon = QtGui.QIcon()\n        icon.addPixmap(QtGui.QPixmap(\"../../reducteur_gearexpert.gif\"), QtGui.QIcon.Normal, QtGui.QIcon.Off)",
        "detail": "biblio.ui.menu",
        "documentation": {}
    },
    {
        "label": "Ui_ROUE_VIS_SANS_FIN",
        "kind": 6,
        "importPath": "biblio.ui.ROUE_VIS_SANS_FIN",
        "description": "biblio.ui.ROUE_VIS_SANS_FIN",
        "peekOfCode": "class Ui_ROUE_VIS_SANS_FIN(object):\n    def calculer_engrenage(self):\n        try:\n            mn = float(self.lineEdit1.text())\n            alpha = float(self.lineEdit2.text())\n            q = float(self.lineEdit3.text())\n            zr = float(self.lineEdit4.text())\n            zv = float(self.lineEdit5.text())    \n            μ = float(self.lineEdit5_1.text())\n            beta_v1 = math.atan(zv / q)",
        "detail": "biblio.ui.ROUE_VIS_SANS_FIN",
        "documentation": {}
    },
    {
        "label": "Ui_RESISTANCE_ENGRENAGE_PARALLELE",
        "kind": 6,
        "importPath": "biblio.CALCUL_DE_RESISTANCE_DES_DENTS_DES_ENGRENAGES_PARALLELES",
        "description": "biblio.CALCUL_DE_RESISTANCE_DES_DENTS_DES_ENGRENAGES_PARALLELES",
        "peekOfCode": "class Ui_RESISTANCE_ENGRENAGE_PARALLELE(object):\n    def setupUi(self, RESISTANCE_ENGRENAGE_PARALLELE):\n        RESISTANCE_ENGRENAGE_PARALLELE.setObjectName(\"RESISTANCE_ENGRENAGE_PARALLELE\")\n        #RESISTANCE_ENGRENAGE_PARALLELE.setWindowModality(QtCore.Qt.ApplicationModal)\n        RESISTANCE_ENGRENAGE_PARALLELE.resize(719, 594)\n        RESISTANCE_ENGRENAGE_PARALLELE.setStyleSheet(\"background-color: #00aaff;\")\n        icon = QtGui.QIcon()\n        icon.addPixmap(QtGui.QPixmap(\"reducteur_gearexpert.gif\"), QtGui.QIcon.Normal, QtGui.QIcon.Off)\n        RESISTANCE_ENGRENAGE_PARALLELE.setWindowIcon(icon)\n        self.gridLayout_2 = QtWidgets.QGridLayout(RESISTANCE_ENGRENAGE_PARALLELE)",
        "detail": "biblio.CALCUL_DE_RESISTANCE_DES_DENTS_DES_ENGRENAGES_PARALLELES",
        "documentation": {}
    },
    {
        "label": "Ui_calcul_module",
        "kind": 6,
        "importPath": "biblio.calcul_module",
        "description": "biblio.calcul_module",
        "peekOfCode": "class Ui_calcul_module(object):\n    def calculer_et_afficher(self):\n        try:\n            T = float(self.lineEdit.text())\n            k = float(self.lineEdit1.text())\n            Rpe = float(self.lineEdit2.text())\n            beta = float(self.lineEdit3.text())\n        except ValueError:\n            QMessageBox.warning(None, \"Erreur de saisie\", \"Il est impossible d'effectuer le calcul. Vérifiez les valeurs d'entrée.\")\n            return",
        "detail": "biblio.calcul_module",
        "documentation": {}
    },
    {
        "label": "Ui_fenetre_case1",
        "kind": 6,
        "importPath": "biblio.contenu_case1",
        "description": "biblio.contenu_case1",
        "peekOfCode": "class Ui_fenetre_case1(object):\n    def setupUi(self, fenetre_case1):\n        fenetre_case1.setObjectName(\"fenetre_case1\")\n        fenetre_case1.resize(718, 629)\n        fenetre_case1.setStyleSheet(\"background-color: #00aaff;\")\n        self.gridLayout_2 = QtWidgets.QGridLayout(fenetre_case1)\n        self.gridLayout_2.setObjectName(\"gridLayout_2\")\n        self.verticalLayout = QtWidgets.QVBoxLayout()\n        self.verticalLayout.setObjectName(\"verticalLayout\")\n        self.gridLayout = QtWidgets.QGridLayout()",
        "detail": "biblio.contenu_case1",
        "documentation": {}
    },
    {
        "label": "Ui_denture_droite_ch1",
        "kind": 6,
        "importPath": "biblio.denture_droiteEX",
        "description": "biblio.denture_droiteEX",
        "peekOfCode": "class Ui_denture_droite_ch1(object):\n    def calculer_engrenage(self):\n        try:\n            A_P = int(self.lineEdit_2_alpha.text())\n            M = float(self.lineEdit_12_module.text())    \n            Z1 = int(self.lineEdit_7_Z1.text())\n            Z2 = int(self.lineEdit_22_Z2.text()) \n            k = float(self.lineEdit_5_k.text())\n            U = Z2 / Z1\n            i = float(-(Z1 / Z2))",
        "detail": "biblio.denture_droiteEX",
        "documentation": {}
    },
    {
        "label": "Ui_Denture_droiteH_deporteE",
        "kind": 6,
        "importPath": "biblio.denture_droiteH_deporteEX",
        "description": "biblio.denture_droiteH_deporteEX",
        "peekOfCode": "class Ui_Denture_droiteH_deporteE(object):\n    def calculer_engrenage(self):\n        try:            \n            M = float(self.lineEdit1.text())\n            A_P = int(self.lineEdit2.text())\n            A_H = float(self.lineEdit3.text())\n            b = float(self.lineEdit4.text())   \n            Z1 = int(self.lineEdit5.text())\n            Z2 = int(self.lineEdit6.text()) \n            X1 = float(self.lineEdit7.text())",
        "detail": "biblio.denture_droiteH_deporteEX",
        "documentation": {}
    },
    {
        "label": "Ui_Denture_droiteH_deporteE_VARIATION_ANT_NON_IMPOSE",
        "kind": 6,
        "importPath": "biblio.denture_droiteH_deporteEX_VARIATION_ENTRAXE_NON_IMPOSE",
        "description": "biblio.denture_droiteH_deporteEX_VARIATION_ENTRAXE_NON_IMPOSE",
        "peekOfCode": "class Ui_Denture_droiteH_deporteE_VARIATION_ANT_NON_IMPOSE(object):\n    def calculer_engrenage(self):\n        try:            \n            M = float(self.lineEdit1.text())\n            A_P = int(self.lineEdit2.text())\n            A_H = float(self.lineEdit3.text())\n            b = float(self.lineEdit4.text())   \n            Z1 = int(self.lineEdit5.text())\n            Z2 = int(self.lineEdit6.text()) \n            X1 = float(self.lineEdit7.text())",
        "detail": "biblio.denture_droiteH_deporteEX_VARIATION_ENTRAXE_NON_IMPOSE",
        "documentation": {}
    },
    {
        "label": "Ui_Denture_droiteH_deporteIN",
        "kind": 6,
        "importPath": "biblio.denture_droiteH_deporteIN",
        "description": "biblio.denture_droiteH_deporteIN",
        "peekOfCode": "class Ui_Denture_droiteH_deporteIN(object):\n    def calculer_engrenage(self):\n        try:            \n            M = float(self.lineEdit1.text())\n            A_P = int(self.lineEdit2.text())\n            A_H = float(self.lineEdit3.text())\n            b = float(self.lineEdit4.text())   \n            Z1 = int(self.lineEdit5.text())\n            Z2 = int(self.lineEdit6.text()) \n            X1 = float(self.lineEdit7.text())",
        "detail": "biblio.denture_droiteH_deporteIN",
        "documentation": {}
    },
    {
        "label": "Ui_Denture_droiteH_deporteIN_VARIATION_ANT_NON_IMPOSE",
        "kind": 6,
        "importPath": "biblio.denture_droiteH_deporteIN_VARIATION_ENTRAXE_NON_IMPOSE",
        "description": "biblio.denture_droiteH_deporteIN_VARIATION_ENTRAXE_NON_IMPOSE",
        "peekOfCode": "class Ui_Denture_droiteH_deporteIN_VARIATION_ANT_NON_IMPOSE(object):\n    def calculer_engrenage(self):\n        try:            \n            M = float(self.lineEdit1.text())\n            A_P = int(self.lineEdit2.text())\n            A_H = float(self.lineEdit3.text())\n            b = float(self.lineEdit4.text())   \n            Z1 = int(self.lineEdit5.text())\n            Z2 = int(self.lineEdit6.text()) \n            X1 = float(self.lineEdit7.text())",
        "detail": "biblio.denture_droiteH_deporteIN_VARIATION_ENTRAXE_NON_IMPOSE",
        "documentation": {}
    },
    {
        "label": "Ui_denture_droite_ch11",
        "kind": 6,
        "importPath": "biblio.denture_droiteIN",
        "description": "biblio.denture_droiteIN",
        "peekOfCode": "class Ui_denture_droite_ch11(object):\n    def calculer_engrenage(self):\n        try:\n            A_P = int(self.lineEdit_2_alpha.text())\n            M = float(self.lineEdit_12_module.text())    \n            Z1 = int(self.lineEdit_7_Z1.text())\n            Z2 = int(self.lineEdit_22_Z2.text()) \n            k = float(self.lineEdit_5_k.text())\n            U = Z2 / Z1\n            i = float((Z1 / Z2))",
        "detail": "biblio.denture_droiteIN",
        "documentation": {}
    },
    {
        "label": "Ui_Denture_droite_deporteE",
        "kind": 6,
        "importPath": "biblio.denture_droite_deporteEX",
        "description": "biblio.denture_droite_deporteEX",
        "peekOfCode": "class Ui_Denture_droite_deporteE(object):\n    def setupUi(self, Denture_droite_deporteE):\n        Denture_droite_deporteE.setObjectName(\"Denture_droite_deporteE\")\n        Denture_droite_deporteE.resize(537, 993)\n        self.gridLayout = QtWidgets.QGridLayout(Denture_droite_deporteE)\n        self.gridLayout.setObjectName(\"gridLayout\")\n        self.scrollArea = QtWidgets.QScrollArea(Denture_droite_deporteE)\n        self.scrollArea.setWidgetResizable(True)\n        self.scrollArea.setObjectName(\"scrollArea\")\n        self.scrollAreaWidgetContents = QtWidgets.QWidget()",
        "detail": "biblio.denture_droite_deporteEX",
        "documentation": {}
    },
    {
        "label": "Ui_Denture_droite_deporteE",
        "kind": 6,
        "importPath": "biblio.denture_droite_deporteIN",
        "description": "biblio.denture_droite_deporteIN",
        "peekOfCode": "class Ui_Denture_droite_deporteE(object):\n    def setupUi(self, Denture_droite_deporteE):\n        Denture_droite_deporteE.setObjectName(\"Denture_droite_deporteE\")\n        Denture_droite_deporteE.resize(537, 993)\n        self.gridLayout = QtWidgets.QGridLayout(Denture_droite_deporteE)\n        self.gridLayout.setObjectName(\"gridLayout\")\n        self.scrollArea = QtWidgets.QScrollArea(Denture_droite_deporteE)\n        self.scrollArea.setWidgetResizable(True)\n        self.scrollArea.setObjectName(\"scrollArea\")\n        self.scrollAreaWidgetContents = QtWidgets.QWidget()",
        "detail": "biblio.denture_droite_deporteIN",
        "documentation": {}
    },
    {
        "label": "Ui_Denture_droite_deporteE",
        "kind": 6,
        "importPath": "biblio.denture_droite_EXTERIEUR_DEPORTE",
        "description": "biblio.denture_droite_EXTERIEUR_DEPORTE",
        "peekOfCode": "class Ui_Denture_droite_deporteE(object):\n    def calculer_engrenage(self):\n        try:\n            M = float(self.lineEdit1.text()) \n            A_P = int(self.lineEdit2.text())   \n            Z1 = int(self.lineEdit3.text())\n            Z2 = int(self.lineEdit4.text()) \n            X1 = float(self.lineEdit5.text())\n            X2 = float(self.lineEdit6.text())\n            μ = float(self.lineEdit_mi.text())",
        "detail": "biblio.denture_droite_EXTERIEUR_DEPORTE",
        "documentation": {}
    },
    {
        "label": "Ui_Denture_droite_deporteEX_VARIATION_ANT_NON_IMPOSE",
        "kind": 6,
        "importPath": "biblio.denture_droite_EXTERIEUR_DEPORTE_VARIATION_ANT_NON_IMPOSE",
        "description": "biblio.denture_droite_EXTERIEUR_DEPORTE_VARIATION_ANT_NON_IMPOSE",
        "peekOfCode": "class Ui_Denture_droite_deporteEX_VARIATION_ANT_NON_IMPOSE(object):\n    def calculer_engrenage(self):\n        try:\n            M = float(self.lineEdit1.text()) \n            A_P = int(self.lineEdit2.text())   \n            Z1 = int(self.lineEdit3.text())\n            Z2 = int(self.lineEdit4.text()) \n            X1 = float(self.lineEdit5.text())\n            X2 = float(self.lineEdit6.text())\n            μ = float(self.lineEdit_mi.text())",
        "detail": "biblio.denture_droite_EXTERIEUR_DEPORTE_VARIATION_ANT_NON_IMPOSE",
        "documentation": {}
    },
    {
        "label": "Ui_Denture_droite_deporteEX_VARIATION_ENT_IMPOSE",
        "kind": 6,
        "importPath": "biblio.DENTURE_DROITE_EXTERIEUR_DEPORTE_VARIATION_ENT_IMPOSE",
        "description": "biblio.DENTURE_DROITE_EXTERIEUR_DEPORTE_VARIATION_ENT_IMPOSE",
        "peekOfCode": "class Ui_Denture_droite_deporteEX_VARIATION_ENT_IMPOSE(object):\n    def calculer_engrenage(self):\n        try:\n            M = float(self.lineEdit1.text()) \n            A_P = int(self.lineEdit2.text()) \n            a_p = float(self.lineEdit13.text())  \n            Z1 = int(self.lineEdit3.text())\n            Z2 = int(self.lineEdit4.text()) \n            X1 = float(self.lineEdit5.text())\n            X2 = float(self.lineEdit6.text())",
        "detail": "biblio.DENTURE_DROITE_EXTERIEUR_DEPORTE_VARIATION_ENT_IMPOSE",
        "documentation": {}
    },
    {
        "label": "Ui_denture_droite_h_ch1",
        "kind": 6,
        "importPath": "biblio.denture_droite_h",
        "description": "biblio.denture_droite_h",
        "peekOfCode": "class Ui_denture_droite_h_ch1(object):\n    def calculer_engrenage(self):\n        A_P = int(self.lineEdit_2_alpha.text())\n        M = float(self.lineEdit_12_module.text())    \n        Z1 = int(self.lineEdit_7_Z1.text())\n        Z2 = int(self.lineEdit_22_Z2.text()) \n        A_H = float(self.lineEdit_beta.text())\n        U = Z2 / Z1\n        i = float(-(Z1 / Z2))\n        Cosinus1 = math.cos(math.radians(A_P))",
        "detail": "biblio.denture_droite_h",
        "documentation": {}
    },
    {
        "label": "Ui_denture_droite_hE_ch1",
        "kind": 6,
        "importPath": "biblio.denture_droite_hE",
        "description": "biblio.denture_droite_hE",
        "peekOfCode": "class Ui_denture_droite_hE_ch1(object):\n    def calculer_engrenage(self):\n        try:\n            A_P = int(self.lineEdit_2_alpha.text())\n            M = float(self.lineEdit_12_module.text())    \n            Z1 = int(self.lineEdit_7_Z1.text())\n            Z2 = int(self.lineEdit_22_Z2.text()) \n            A_H = float(self.lineEdit_beta.text())\n            U = Z2 / Z1\n            i = float(-(Z1 / Z2))",
        "detail": "biblio.denture_droite_hE",
        "documentation": {}
    },
    {
        "label": "Ui_denture_droite_hI_ch1",
        "kind": 6,
        "importPath": "biblio.denture_droite_hI",
        "description": "biblio.denture_droite_hI",
        "peekOfCode": "class Ui_denture_droite_hI_ch1(object):\n    def calculer_engrenage(self):\n        try:\n            A_P = int(self.lineEdit_2_alpha.text())\n            M = float(self.lineEdit_12_module.text())    \n            Z1 = int(self.lineEdit_7_Z1.text())\n            Z2 = int(self.lineEdit_22_Z2.text()) \n            A_H = float(self.lineEdit_beta.text())\n            U = Z2 / Z1\n            i = float(Z1 / Z2)",
        "detail": "biblio.denture_droite_hI",
        "documentation": {}
    },
    {
        "label": "Ui_Denture_droite_deporteIN",
        "kind": 6,
        "importPath": "biblio.denture_droite_INTERIEUR_DEPORTE",
        "description": "biblio.denture_droite_INTERIEUR_DEPORTE",
        "peekOfCode": "class Ui_Denture_droite_deporteIN(object):\n    def calculer_engrenage(self):\n        try:\n            M = float(self.lineEdit1.text()) \n            A_P = int(self.lineEdit2.text())   \n            Z1 = int(self.lineEdit3.text())\n            Z2 = int(self.lineEdit4.text()) \n            X1 = float(self.lineEdit5.text())\n            X2 = float(self.lineEdit6.text())\n            μ = float(self.lineEdit_mi.text())",
        "detail": "biblio.denture_droite_INTERIEUR_DEPORTE",
        "documentation": {}
    },
    {
        "label": "Ui_Denture_droite_deporteIN_VARIATION_ANT_NON_IMPOSE",
        "kind": 6,
        "importPath": "biblio.denture_droite_INTERIEUR_DEPORTE_VARIATION_ANT_NON_IMPOSE",
        "description": "biblio.denture_droite_INTERIEUR_DEPORTE_VARIATION_ANT_NON_IMPOSE",
        "peekOfCode": "class Ui_Denture_droite_deporteIN_VARIATION_ANT_NON_IMPOSE(object):\n    def calculer_engrenage(self):\n        try:\n            M = float(self.lineEdit1.text()) \n            A_P = int(self.lineEdit2.text())   \n            Z1 = int(self.lineEdit3.text())\n            Z2 = int(self.lineEdit4.text()) \n            X1 = float(self.lineEdit5.text())\n            X2 = float(self.lineEdit6.text())\n            μ = float(self.lineEdit_mi.text())",
        "detail": "biblio.denture_droite_INTERIEUR_DEPORTE_VARIATION_ANT_NON_IMPOSE",
        "documentation": {}
    },
    {
        "label": "Ui_Denture_droite_deporteIN_VARIATION_ENT_IMPOSE",
        "kind": 6,
        "importPath": "biblio.DENTURE_DROITE_INTERIEUR_DEPORTE_VARIATION_ENT_IMPOSE",
        "description": "biblio.DENTURE_DROITE_INTERIEUR_DEPORTE_VARIATION_ENT_IMPOSE",
        "peekOfCode": "class Ui_Denture_droite_deporteIN_VARIATION_ENT_IMPOSE(object):\n    def calculer_engrenage(self):\n        try:\n            M = float(self.lineEdit1.text()) \n            A_P = int(self.lineEdit2.text()) \n            a_p = float(self.lineEdit13.text())  \n            Z1 = int(self.lineEdit3.text())\n            Z2 = int(self.lineEdit4.text()) \n            X1 = float(self.lineEdit5.text())\n            X2 = float(self.lineEdit6.text())",
        "detail": "biblio.DENTURE_DROITE_INTERIEUR_DEPORTE_VARIATION_ENT_IMPOSE",
        "documentation": {}
    },
    {
        "label": "Ui_Denture_droiteH_deporteE_VARIATION_ENT_IMPOSE",
        "kind": 6,
        "importPath": "biblio.DENTURE_HELICOIDALE_deporteEXTERIEUR_VARIATION_ENTRAXE_IMPOSE",
        "description": "biblio.DENTURE_HELICOIDALE_deporteEXTERIEUR_VARIATION_ENTRAXE_IMPOSE",
        "peekOfCode": "class Ui_Denture_droiteH_deporteE_VARIATION_ENT_IMPOSE(object):\n    def calculer_engrenage(self):\n        try:            \n            M = float(self.lineEdit1.text())\n            A_P = int(self.lineEdit2.text())\n            A_H = float(self.lineEdit3.text())\n            ap = float(self.lineEdit23.text())\n            b = float(self.lineEdit4.text())   \n            Z1 = int(self.lineEdit5.text())\n            Z2 = int(self.lineEdit6.text()) ",
        "detail": "biblio.DENTURE_HELICOIDALE_deporteEXTERIEUR_VARIATION_ENTRAXE_IMPOSE",
        "documentation": {}
    },
    {
        "label": "Ui_Denture_droiteH_deporteIN_VARIATION_ENT_IMPOSE",
        "kind": 6,
        "importPath": "biblio.DENTURE_HELICOIDALE_deporteINTERIEUR_VARIATION_ENTRAXE_IMPOSE",
        "description": "biblio.DENTURE_HELICOIDALE_deporteINTERIEUR_VARIATION_ENTRAXE_IMPOSE",
        "peekOfCode": "class Ui_Denture_droiteH_deporteIN_VARIATION_ENT_IMPOSE(object):\n    def calculer_engrenage(self):\n        try:            \n            M = float(self.lineEdit1.text())\n            A_P = int(self.lineEdit2.text())\n            A_H = float(self.lineEdit3.text())\n            ap = float(self.lineEdit23.text())\n            b = float(self.lineEdit4.text())   \n            Z1 = int(self.lineEdit5.text())\n            Z2 = int(self.lineEdit6.text()) ",
        "detail": "biblio.DENTURE_HELICOIDALE_deporteINTERIEUR_VARIATION_ENTRAXE_IMPOSE",
        "documentation": {}
    },
    {
        "label": "Ui_DEPORTS_AVEC_VARIATION_ENTRAXE",
        "kind": 6,
        "importPath": "biblio.Deports_avec_variation_entraxe",
        "description": "biblio.Deports_avec_variation_entraxe",
        "peekOfCode": "class Ui_DEPORTS_AVEC_VARIATION_ENTRAXE(object):\n    def setupUi(self, DEPORTS_AVEC_VARIATION_ENTRAXE):\n        DEPORTS_AVEC_VARIATION_ENTRAXE.setObjectName(\"DEPORTS_AVEC_VARIATION_ENTRAXE\")\n        DEPORTS_AVEC_VARIATION_ENTRAXE.resize(1265, 419)\n        DEPORTS_AVEC_VARIATION_ENTRAXE.setStyleSheet(\"background-color: #00aaff;\")\n        icon = QtGui.QIcon()\n        icon.addPixmap(QtGui.QPixmap(\"reducteur_gearexpert.gif\"), QtGui.QIcon.Normal, QtGui.QIcon.Off)\n        DEPORTS_AVEC_VARIATION_ENTRAXE.setWindowIcon(icon)\n        self.gridLayout_2 = QtWidgets.QGridLayout(DEPORTS_AVEC_VARIATION_ENTRAXE)\n        self.gridLayout_2.setObjectName(\"gridLayout_2\")",
        "detail": "biblio.Deports_avec_variation_entraxe",
        "documentation": {}
    },
    {
        "label": "Ui_DEPORTS_SANS_VARIATION_ENTRAXE",
        "kind": 6,
        "importPath": "biblio.Deports_sans_variation_entraxe",
        "description": "biblio.Deports_sans_variation_entraxe",
        "peekOfCode": "class Ui_DEPORTS_SANS_VARIATION_ENTRAXE(object):\n    def setupUi(self, DEPORTS_SANS_VARIATION_ENTRAXE):\n        DEPORTS_SANS_VARIATION_ENTRAXE.setObjectName(\"DEPORTS_SANS_VARIATION_ENTRAXE\")\n        DEPORTS_SANS_VARIATION_ENTRAXE.resize(643, 300)\n        DEPORTS_SANS_VARIATION_ENTRAXE.setStyleSheet(\"background-color: #00aaff;\")\n        icon = QtGui.QIcon()\n        icon.addPixmap(QtGui.QPixmap(\"reducteur_gearexpert.gif\"), QtGui.QIcon.Normal, QtGui.QIcon.Off)\n        DEPORTS_SANS_VARIATION_ENTRAXE.setWindowIcon(icon)\n        self.gridLayout = QtWidgets.QGridLayout(DEPORTS_SANS_VARIATION_ENTRAXE)\n        self.gridLayout.setObjectName(\"gridLayout\")",
        "detail": "biblio.Deports_sans_variation_entraxe",
        "documentation": {}
    },
    {
        "label": "Ui_ENGRENAGES_DEPORTEES",
        "kind": 6,
        "importPath": "biblio.Engrenages_Deportees",
        "description": "biblio.Engrenages_Deportees",
        "peekOfCode": "class Ui_ENGRENAGES_DEPORTEES(object):\n    def setupUi(self, ENGRENAGES_DEPORTEES):\n        ENGRENAGES_DEPORTEES.setObjectName(\"ENGRENAGES_DEPORTEES\")\n        ENGRENAGES_DEPORTEES.resize(697, 396)\n        ENGRENAGES_DEPORTEES.setWindowModality(QtCore.Qt.WindowModal)\n        ENGRENAGES_DEPORTEES.setStyleSheet(\"background-color: #00aaff;\")\n        icon = QtGui.QIcon()\n        icon.addPixmap(QtGui.QPixmap(\"reducteur_gearexpert.gif\"), QtGui.QIcon.Normal, QtGui.QIcon.Off)\n        ENGRENAGES_DEPORTEES.setWindowIcon(icon)\n        self.gridLayout_4 = QtWidgets.QGridLayout(ENGRENAGES_DEPORTEES)",
        "detail": "biblio.Engrenages_Deportees",
        "documentation": {}
    },
    {
        "label": "Ui_VARIATION_ENTRAXE",
        "kind": 6,
        "importPath": "biblio.Engrenages_deportes_avec_variation_entraxe",
        "description": "biblio.Engrenages_deportes_avec_variation_entraxe",
        "peekOfCode": "class Ui_VARIATION_ENTRAXE(object):\n    def setupUi(self, VARIATION_ENTRAXE):\n        VARIATION_ENTRAXE.setObjectName(\"VARIATION_ENTRAXE\")\n        VARIATION_ENTRAXE.resize(768, 814)\n        VARIATION_ENTRAXE.setStyleSheet(\"background-color: #00aaff;\")\n        icon = QtGui.QIcon()\n        icon.addPixmap(QtGui.QPixmap(\"reducteur_gearexpert.gif\"), QtGui.QIcon.Normal, QtGui.QIcon.Off)\n        VARIATION_ENTRAXE.setWindowIcon(icon)\n        self.gridLayout_2 = QtWidgets.QGridLayout(VARIATION_ENTRAXE)\n        self.gridLayout_2.setObjectName(\"gridLayout_2\")",
        "detail": "biblio.Engrenages_deportes_avec_variation_entraxe",
        "documentation": {}
    },
    {
        "label": "Ui_SANS_VARIATION_ENTRAXE",
        "kind": 6,
        "importPath": "biblio.Engrenages_deportes_sans_variation_entraxe",
        "description": "biblio.Engrenages_deportes_sans_variation_entraxe",
        "peekOfCode": "class Ui_SANS_VARIATION_ENTRAXE(object):\n    def setupUi(self, SANS_VARIATION_ENTRAXE):\n        SANS_VARIATION_ENTRAXE.setObjectName(\"SANS_VARIATION_ENTRAXE\")\n        SANS_VARIATION_ENTRAXE.resize(768, 814)\n        SANS_VARIATION_ENTRAXE.setStyleSheet(\"background-color: #00aaff;\")\n        icon = QtGui.QIcon()\n        icon.addPixmap(QtGui.QPixmap(\"reducteur_gearexpert.gif\"), QtGui.QIcon.Normal, QtGui.QIcon.Off)\n        SANS_VARIATION_ENTRAXE.setWindowIcon(icon)\n        self.gridLayout_2 = QtWidgets.QGridLayout(SANS_VARIATION_ENTRAXE)\n        self.gridLayout_2.setObjectName(\"gridLayout_2\")",
        "detail": "biblio.Engrenages_deportes_sans_variation_entraxe",
        "documentation": {}
    },
    {
        "label": "Ui_ENGRENAGE_CONCOURANTE",
        "kind": 6,
        "importPath": "biblio.ENGRENAGE_CONCOURANTE",
        "description": "biblio.ENGRENAGE_CONCOURANTE",
        "peekOfCode": "class Ui_ENGRENAGE_CONCOURANTE(object):\n    def setupUi(self, ENGRENAGE_CONCOURANTE):\n        ENGRENAGE_CONCOURANTE.setObjectName(\"ENGRENAGE_CONCOURANTE\")\n        ENGRENAGE_CONCOURANTE.resize(660, 594)\n        ENGRENAGE_CONCOURANTE.setWindowModality(QtCore.Qt.WindowModal)\n        ENGRENAGE_CONCOURANTE.setStyleSheet(\"background-color: #00aaff;\")\n        icon = QtGui.QIcon()\n        icon.addPixmap(QtGui.QPixmap(\"reducteur_gearexpert.gif\"), QtGui.QIcon.Normal, QtGui.QIcon.Off)\n        ENGRENAGE_CONCOURANTE.setWindowIcon(icon)\n        self.gridLayout_2 = QtWidgets.QGridLayout(ENGRENAGE_CONCOURANTE)",
        "detail": "biblio.ENGRENAGE_CONCOURANTE",
        "documentation": {}
    },
    {
        "label": "Ui_ENGRENAGE_CONIQUE_DROIT_DENTURE_DEPORTEE",
        "kind": 6,
        "importPath": "biblio.ENGRENAGE_CONIQUE_DROIT_DENTURE_DEPORTEE",
        "description": "biblio.ENGRENAGE_CONIQUE_DROIT_DENTURE_DEPORTEE",
        "peekOfCode": "class Ui_ENGRENAGE_CONIQUE_DROIT_DENTURE_DEPORTEE(object):\n    def calculer_engrenage(self):\n        try:\n            M = float(self.lineEdit1.text())\n            A_P = float(self.lineEdit2.text())\n            Σ = float(self.lineEdit3.text())\n            b = float(self.lineEdit4.text())    \n            Z1 = int(self.lineEdit5.text())\n            Z2 = int(self.lineEdit6.text()) \n            x1 = float(self.lineEdit7.text())",
        "detail": "biblio.ENGRENAGE_CONIQUE_DROIT_DENTURE_DEPORTEE",
        "documentation": {}
    },
    {
        "label": "Ui_ENGRENAGE_CONIQUE_DROIT_DENTURE_NORMALE",
        "kind": 6,
        "importPath": "biblio.ENGRENAGE_CONIQUE_DROIT_DENTURE_NORMALE",
        "description": "biblio.ENGRENAGE_CONIQUE_DROIT_DENTURE_NORMALE",
        "peekOfCode": "class Ui_ENGRENAGE_CONIQUE_DROIT_DENTURE_NORMALE(object):\n    def calculer_engrenage(self):\n        try:\n            M = float(self.lineEdit1.text())\n            A_P = float(self.lineEdit2.text())\n            Σ = float(self.lineEdit3.text())\n            b = float(self.lineEdit4.text())    \n            Z1 = int(self.lineEdit5.text())\n            Z2 = int(self.lineEdit6.text())             \n            Jn = 0",
        "detail": "biblio.ENGRENAGE_CONIQUE_DROIT_DENTURE_NORMALE",
        "documentation": {}
    },
    {
        "label": "Ui_ENGRENAGE_CONIQUE_HELICOIDALE_DEPORTEE",
        "kind": 6,
        "importPath": "biblio.ENGRENAGE_CONIQUE_HELICOIDALE_DEPORTEE",
        "description": "biblio.ENGRENAGE_CONIQUE_HELICOIDALE_DEPORTEE",
        "peekOfCode": "class Ui_ENGRENAGE_CONIQUE_HELICOIDALE_DEPORTEE(object):\n    def calculer_engrenage(self):\n        try:\n            M = float(self.lineEdit1.text())\n            A_P = float(self.lineEdit2.text())\n            A_H = float(self.lineEdit2_1.text())\n            Σ = float(self.lineEdit3.text())\n            b = float(self.lineEdit4.text())    \n            Z1 = int(self.lineEdit5.text())\n            Z2 = int(self.lineEdit6.text())",
        "detail": "biblio.ENGRENAGE_CONIQUE_HELICOIDALE_DEPORTEE",
        "documentation": {}
    },
    {
        "label": "Ui_ENGRENAGE_CONIQUE_HELICOIDALE_NON_DEPORTEE",
        "kind": 6,
        "importPath": "biblio.ENGRENAGE_CONIQUE_HELICOIDALE_NON_DEPORTEE",
        "description": "biblio.ENGRENAGE_CONIQUE_HELICOIDALE_NON_DEPORTEE",
        "peekOfCode": "class Ui_ENGRENAGE_CONIQUE_HELICOIDALE_NON_DEPORTEE(object):\n    def calculer_engrenage(self):\n        try:\n            M = float(self.lineEdit1.text())\n            A_P = float(self.lineEdit2.text())\n            A_H = float(self.lineEdit2_1.text())\n            Σ = float(self.lineEdit3.text())\n            b = float(self.lineEdit4.text())    \n            Z1 = int(self.lineEdit5.text())\n            Z2 = int(self.lineEdit6.text())",
        "detail": "biblio.ENGRENAGE_CONIQUE_HELICOIDALE_NON_DEPORTEE",
        "documentation": {}
    },
    {
        "label": "Ui_different_type_engrenage",
        "kind": 6,
        "importPath": "biblio.fenetre_2",
        "description": "biblio.fenetre_2",
        "peekOfCode": "class Ui_different_type_engrenage(object):\n    def setupUi(self, different_type_engrenage):\n        different_type_engrenage.setObjectName(\"different_type_engrenage\")\n        different_type_engrenage.resize(632, 290)\n        #different_type_engrenage.setWindowModality(QtCore.Qt.ApplicationModal)\n        different_type_engrenage.setStyleSheet(\"background-color: #00aaff;\")\n        self.gridLayout_2 = QtWidgets.QGridLayout(different_type_engrenage)\n        self.gridLayout_2.setObjectName(\"gridLayout_2\")\n        self.verticalLayout = QtWidgets.QVBoxLayout()\n        self.verticalLayout.setObjectName(\"verticalLayout\")",
        "detail": "biblio.fenetre_2",
        "documentation": {}
    },
    {
        "label": "Ui_DENTURE_CONIQUE",
        "kind": 6,
        "importPath": "biblio.LES_EFFORTS_DENTURE_CONIQUE",
        "description": "biblio.LES_EFFORTS_DENTURE_CONIQUE",
        "peekOfCode": "class Ui_DENTURE_CONIQUE(object):\n    def perform_selected_calculation(self):\n        R = \"\"\n        if self.radioButton.isChecked():\n            R = \"pignon\"\n        elif self.radioButton_2.isChecked():\n            R = \"roue\"\n        else:\n            QMessageBox.warning(None, \"Erreur de sélection\", \"Veuillez sélectionner la roue menante.\")\n            return",
        "detail": "biblio.LES_EFFORTS_DENTURE_CONIQUE",
        "documentation": {}
    },
    {
        "label": "Ui_DENTURE_DROITE_PARALLELE",
        "kind": 6,
        "importPath": "biblio.LES_EFFORTS_DENTURE_DROITE_PARALLELE",
        "description": "biblio.LES_EFFORTS_DENTURE_DROITE_PARALLELE",
        "peekOfCode": "class Ui_DENTURE_DROITE_PARALLELE(object):\n    def calculer_engrenage(self):\n        try:\n            m = float(self.lineEdit1.text())\n            alpha = float(self.lineEdit2.text())\n            P = float(self.lineEdit3.text())\n            N = float(self.lineEdit4.text())\n            Zm = float(self.lineEdit5.text())    \n            η = float(self.lineEdit6.text())\n            C1 = (30*P)/(math.pi*N)",
        "detail": "biblio.LES_EFFORTS_DENTURE_DROITE_PARALLELE",
        "documentation": {}
    },
    {
        "label": "Ui_DENTURE_HELICOIDALE_PARALLELE",
        "kind": 6,
        "importPath": "biblio.LES_EFFORTS_DENTURE_HELICOIDALE_PARALLELE",
        "description": "biblio.LES_EFFORTS_DENTURE_HELICOIDALE_PARALLELE",
        "peekOfCode": "class Ui_DENTURE_HELICOIDALE_PARALLELE(object):\n    def calculer_engrenage(self):\n        try:\n            m = float(self.lineEdit1.text())\n            alpha = float(self.lineEdit2.text())\n            β = float(self.lineEdit2_1.text())\n            P = float(self.lineEdit3.text())\n            N = float(self.lineEdit4.text())\n            Zm = float(self.lineEdit5.text())    \n            η = float(self.lineEdit6.text())",
        "detail": "biblio.LES_EFFORTS_DENTURE_HELICOIDALE_PARALLELE",
        "documentation": {}
    },
    {
        "label": "Ui_LES_EFFORTS_ROUE_ET_VIS",
        "kind": 6,
        "importPath": "biblio.LES_EFFORTS_ROUE_ET_VIS",
        "description": "biblio.LES_EFFORTS_ROUE_ET_VIS",
        "peekOfCode": "class Ui_LES_EFFORTS_ROUE_ET_VIS(object):\n    def perform_selected_calculation(self):\n        R = \"\"\n        if self.radioButton.isChecked():\n            R = \"vis\"\n        elif self.radioButton_2.isChecked():\n            R = \"roue\"\n        else:\n            QMessageBox.warning(None, \"Erreur de sélection\", \"Veuillez sélectionner entre la vis et la roue celle qui est menante.\")\n            return",
        "detail": "biblio.LES_EFFORTS_ROUE_ET_VIS",
        "documentation": {}
    },
    {
        "label": "Ui_LES_EFFORTS_SUR_DENTS",
        "kind": 6,
        "importPath": "biblio.LES_EFFORTS_SUR_DENTS",
        "description": "biblio.LES_EFFORTS_SUR_DENTS",
        "peekOfCode": "class Ui_LES_EFFORTS_SUR_DENTS(object):\n    def setupUi(self, LES_EFFORTS_SUR_DENTS):\n        LES_EFFORTS_SUR_DENTS.setObjectName(\"LES_EFFORTS_SUR_DENTS\")\n        LES_EFFORTS_SUR_DENTS.resize(660, 594)\n        LES_EFFORTS_SUR_DENTS.setStyleSheet(\"background-color: #00aaff;\")\n        icon = QtGui.QIcon()\n        icon.addPixmap(QtGui.QPixmap(\"reducteur_gearexpert.gif\"), QtGui.QIcon.Normal, QtGui.QIcon.Off)\n        LES_EFFORTS_SUR_DENTS.setWindowIcon(icon)\n        self.gridLayout_2 = QtWidgets.QGridLayout(LES_EFFORTS_SUR_DENTS)\n        self.gridLayout_2.setObjectName(\"gridLayout_2\")",
        "detail": "biblio.LES_EFFORTS_SUR_DENTS",
        "documentation": {}
    },
    {
        "label": "Ui_METHODE_ISO_D_DROITE",
        "kind": 6,
        "importPath": "biblio.Methode_ISO_denture_droite",
        "description": "biblio.Methode_ISO_denture_droite",
        "peekOfCode": "class Ui_METHODE_ISO_D_DROITE(object):\n    def calculer_engrenage(self):\n        try:\n            ANT_F = float(self.lineEdit_3.text())    \n            Z1 = int(self.lineEdit.text())\n            Z2 = int(self.lineEdit_2.text()) \n            # Calcul de M\n            M = (2 * ANT_F) / (Z1 + Z2)\n            # Trouver la valeur la plus proche dans la liste\n            liste = [0.06, 0.08, 0.10, 0.12, 0.15, 0.20, 0.25, 0.30, 0.40, 0.50, 0.75, 1, 1.25, 1.5, 2, 2.5, 3, 4, 5, 6, 8, 10, 12, 16, 20, 25, 32, 40, 50, 60, 0.07, 0.09, 0.11, 0.14, 0.18, 0.22, 0.28, 0.35, 0.45, 0.55, 0.7, 0.9, 1.125, 1.375, 1.75, 2.75, 3.5, 4.5, 5.5, 7, 9, 11, 14, 18, 22, 28, 36, 45, 55, 70]",
        "detail": "biblio.Methode_ISO_denture_droite",
        "documentation": {}
    },
    {
        "label": "Ui_METHODE_ISO_SANS_VARIATION_ENTRAXE",
        "kind": 6,
        "importPath": "biblio.Methode_ISO_Sans_Variation_Entraxe",
        "description": "biblio.Methode_ISO_Sans_Variation_Entraxe",
        "peekOfCode": "class Ui_METHODE_ISO_SANS_VARIATION_ENTRAXE(object):\n    def calculer_engrenage(self):\n        try:   \n            Z1 = int(self.lineEdit.text())\n            Z2 = int(self.lineEdit_2.text()) \n            X1 = float(0.6*((Z2 - Z1)/(Z2 + Z1)))\n            X2 = - float(X1)\n        except ValueError:\n            QMessageBox.warning(None, \"Erreur de saisie\", \"Il est impossible d'effectuer le calcul. Vérifiez les valeurs d'entrée.\")\n            return",
        "detail": "biblio.Methode_ISO_Sans_Variation_Entraxe",
        "documentation": {}
    },
    {
        "label": "Ui_METHODE_MAAG_TASCHENBUCH_D_DROITE",
        "kind": 6,
        "importPath": "biblio.Methode_MAAG_TASCHENBUCH_denture_droite",
        "description": "biblio.Methode_MAAG_TASCHENBUCH_denture_droite",
        "peekOfCode": "class Ui_METHODE_MAAG_TASCHENBUCH_D_DROITE(object):\n    def calculer_engrenage(self):\n        try:\n            ANT_F = float(self.lineEdit_3.text())    \n            Z1 = int(self.lineEdit.text())\n            Z2 = int(self.lineEdit_2.text()) \n            # Calcul de M\n            M = (2 * ANT_F) / (Z1 + Z2)\n            # Trouver la valeur la plus proche dans la liste\n            liste = [0.06, 0.08, 0.10, 0.12, 0.15, 0.20, 0.25, 0.30, 0.40, 0.50, 0.75, 1, 1.25, 1.5, 2, 2.5, 3, 4, 5, 6, 8, 10, 12, 16, 20, 25, 32, 40, 50, 60, 0.07, 0.09, 0.11, 0.14, 0.18, 0.22, 0.28, 0.35, 0.45, 0.55, 0.7, 0.9, 1.125, 1.375, 1.75, 2.75, 3.5, 4.5, 5.5, 7, 9, 11, 14, 18, 22, 28, 36, 45, 55, 70]",
        "detail": "biblio.Methode_MAAG_TASCHENBUCH_denture_droite",
        "documentation": {}
    },
    {
        "label": "Ui_METHODE_MAAG_TASCHENBUCH_D_HELICOIDALE",
        "kind": 6,
        "importPath": "biblio.Methode_MAAG_TASCHENBUCH_denture_helicoidale",
        "description": "biblio.Methode_MAAG_TASCHENBUCH_denture_helicoidale",
        "peekOfCode": "class Ui_METHODE_MAAG_TASCHENBUCH_D_HELICOIDALE(object):\n    def calculer_engrenage(self):\n        try:\n            Z1 = int(self.lineEdit.text())\n            Z2 = int(self.lineEdit_2.text()) \n            ANT_F = float(self.lineEdit_3.text())\n            A_H = float(self.lineEdit_6.text())\n            # Calcul de M\n            M = ((2 * ANT_F) / (Z1 + Z2)) * math.cos(math.radians(A_H))\n            # Trouver la valeur la plus proche dans la liste",
        "detail": "biblio.Methode_MAAG_TASCHENBUCH_denture_helicoidale",
        "documentation": {}
    },
    {
        "label": "Ui_METHODE_MAAGTASCHENBUCH_SANS_VARIATION_ENTRAXE",
        "kind": 6,
        "importPath": "biblio.Methode_MAAG_TASCHENBUCH_Sans_Variation_Entraxe",
        "description": "biblio.Methode_MAAG_TASCHENBUCH_Sans_Variation_Entraxe",
        "peekOfCode": "class Ui_METHODE_MAAGTASCHENBUCH_SANS_VARIATION_ENTRAXE(object):\n    def calculer_engrenage(self):\n        try:   \n            Z1 = int(self.lineEdit.text())\n            Z2 = int(self.lineEdit_2.text()) \n            X1 = 0.5*((math.log(Z2 / Z1))/(math.log((Z2 * Z1) / 100)))\n            X2 = - X1\n        except ValueError:\n            QMessageBox.warning(None, \"Erreur de saisie\", \"Il est impossible d'effectuer le calcul. Vérifiez les valeurs d'entrée.\")\n            return",
        "detail": "biblio.Methode_MAAG_TASCHENBUCH_Sans_Variation_Entraxe",
        "documentation": {}
    },
    {
        "label": "Ui_METHODE_DE_W_RICHTER_D_HELICOIDALE",
        "kind": 6,
        "importPath": "biblio.Methode_METHODE_DE_W_RICHTER_denture_helicoidale",
        "description": "biblio.Methode_METHODE_DE_W_RICHTER_denture_helicoidale",
        "peekOfCode": "class Ui_METHODE_DE_W_RICHTER_D_HELICOIDALE(object):\n    def calculer_engrenage(self):\n        try:\n            Z1 = int(self.lineEdit.text())\n            Z2 = int(self.lineEdit_2.text()) \n            ANT_F = float(self.lineEdit_3.text())\n            A_H = float(self.lineEdit_6.text())\n            # Calcul de M\n            M = ((2 * ANT_F) / (Z1 + Z2)) * math.cos(math.radians(A_H))\n            # Trouver la valeur la plus proche dans la liste",
        "detail": "biblio.Methode_METHODE_DE_W_RICHTER_denture_helicoidale",
        "documentation": {}
    },
    {
        "label": "Ui_METHODE_ISO_D_HELICOIDALE",
        "kind": 6,
        "importPath": "biblio.Methode_METHODE_ISO_denture_helicoidale",
        "description": "biblio.Methode_METHODE_ISO_denture_helicoidale",
        "peekOfCode": "class Ui_METHODE_ISO_D_HELICOIDALE(object):\n    def calculer_engrenage(self):\n        try:\n            Z1 = int(self.lineEdit.text())\n            Z2 = int(self.lineEdit_2.text()) \n            ANT_F = float(self.lineEdit_3.text())\n            A_H = float(self.lineEdit_6.text())\n            # Calcul de M\n            M = ((2 * ANT_F) / (Z1 + Z2)) * math.cos(math.radians(A_H))\n            # Trouver la valeur la plus proche dans la liste",
        "detail": "biblio.Methode_METHODE_ISO_denture_helicoidale",
        "documentation": {}
    },
    {
        "label": "Ui_METHODE_W_RICHTER_D_DROITE",
        "kind": 6,
        "importPath": "biblio.Methode_W_RICHTER_denture_droite",
        "description": "biblio.Methode_W_RICHTER_denture_droite",
        "peekOfCode": "class Ui_METHODE_W_RICHTER_D_DROITE(object):\n    def calculer_engrenage(self):\n        try:\n            ANT_F = float(self.lineEdit_3.text())    \n            Z1 = int(self.lineEdit.text())\n            Z2 = int(self.lineEdit_2.text()) \n            # Calcul de M\n            M = (2 * ANT_F) / (Z1 + Z2)\n            # Trouver la valeur la plus proche dans la liste\n            liste = [0.06, 0.08, 0.10, 0.12, 0.15, 0.20, 0.25, 0.30, 0.40, 0.50, 0.75, 1, 1.25, 1.5, 2, 2.5, 3, 4, 5, 6, 8, 10, 12, 16, 20, 25, 32, 40, 50, 60, 0.07, 0.09, 0.11, 0.14, 0.18, 0.22, 0.28, 0.35, 0.45, 0.55, 0.7, 0.9, 1.125, 1.375, 1.75, 2.75, 3.5, 4.5, 5.5, 7, 9, 11, 14, 18, 22, 28, 36, 45, 55, 70]",
        "detail": "biblio.Methode_W_RICHTER_denture_droite",
        "documentation": {}
    },
    {
        "label": "Ui_METHODE_WRICHTER_SANS_VARIATION_ENTRAXE",
        "kind": 6,
        "importPath": "biblio.Methode_W_RICHTER_Sans_Variation_Entraxe",
        "description": "biblio.Methode_W_RICHTER_Sans_Variation_Entraxe",
        "peekOfCode": "class Ui_METHODE_WRICHTER_SANS_VARIATION_ENTRAXE(object):\n    def calculer_engrenage(self):\n        try:   \n            Z1 = int(self.lineEdit.text())\n            Z2 = int(self.lineEdit_2.text()) \n            X1 = float(0.5*((Z2 - Z1)/(Z2 + Z1)))\n            X2 = - float(X1)\n        except ValueError:\n            QMessageBox.warning(None, \"Erreur de saisie\", \"Il est impossible d'effectuer le calcul. Vérifiez les valeurs d'entrée.\")\n            return",
        "detail": "biblio.Methode_W_RICHTER_Sans_Variation_Entraxe",
        "documentation": {}
    },
    {
        "label": "Ui_RESISTANCE_DROITE_AVEC_ENTRAXE_IMPOSE",
        "kind": 6,
        "importPath": "biblio.RESISTANCE_DROITE_AVEC_ENTRAXE_IMPOSE",
        "description": "biblio.RESISTANCE_DROITE_AVEC_ENTRAXE_IMPOSE",
        "peekOfCode": "class Ui_RESISTANCE_DROITE_AVEC_ENTRAXE_IMPOSE(object):\n    def calculer_engrenage(self):\n        engrenage = \"\"\n        if self.radioButton.isChecked():\n            engrenage = \"exterieur\"\n        elif self.radioButton_2.isChecked():\n            engrenage = \"interieur\"\n        else:\n            QMessageBox.warning(None, \"Erreur de sélection\", \"Veuillez sélectionner une classe d'ISO_un type d'acier et precisez si l'engrenage est exterieur ou interieur.\")\n            return",
        "detail": "biblio.RESISTANCE_DROITE_AVEC_ENTRAXE_IMPOSE",
        "documentation": {}
    },
    {
        "label": "Ui_RESISTANCE_DROITE_ENTRAXE_NON_IMPOSE",
        "kind": 6,
        "importPath": "biblio.RESISTANCE_DROITE_ENTRAXE_NON_IMPOSE",
        "description": "biblio.RESISTANCE_DROITE_ENTRAXE_NON_IMPOSE",
        "peekOfCode": "class Ui_RESISTANCE_DROITE_ENTRAXE_NON_IMPOSE(object):\n    def calculer_engrenage(self):\n        engrenage = \"\"\n        if self.radioButton.isChecked():\n            engrenage = \"exterieur\"\n        elif self.radioButton_2.isChecked():\n            engrenage = \"interieur\"\n        else:\n            QMessageBox.warning(None, \"Erreur de sélection\", \"Veuillez sélectionner une classe d'ISO_un type d'acier et precisez si l'engrenage est exterieur ou interieur.\")\n            return",
        "detail": "biblio.RESISTANCE_DROITE_ENTRAXE_NON_IMPOSE",
        "documentation": {}
    },
    {
        "label": "Ui_RESISTANCE_EFFORT",
        "kind": 6,
        "importPath": "biblio.RESISTANCE_EFFORTS",
        "description": "biblio.RESISTANCE_EFFORTS",
        "peekOfCode": "class Ui_RESISTANCE_EFFORT(object):\n    def setupUi(self, RESISTANCE_EFFORT):\n        RESISTANCE_EFFORT.setObjectName(\"RESISTANCE_EFFORT\")\n        RESISTANCE_EFFORT.resize(730, 343)\n        RESISTANCE_EFFORT.setStyleSheet(\"background-color: #00aaff;\")\n        icon = QtGui.QIcon()\n        icon.addPixmap(QtGui.QPixmap(\"../../reducteur_gearexpert.gif\"), QtGui.QIcon.Normal, QtGui.QIcon.Off)\n        RESISTANCE_EFFORT.setWindowIcon(icon)\n        self.gridLayout = QtWidgets.QGridLayout(RESISTANCE_EFFORT)\n        self.gridLayout.setObjectName(\"gridLayout\")",
        "detail": "biblio.RESISTANCE_EFFORTS",
        "documentation": {}
    },
    {
        "label": "Ui_RESISTANCE_HELICOI_ENTRAXE_IMPOSE",
        "kind": 6,
        "importPath": "biblio.RESISTANCE_HELICOI_ENTRAXE_IMPOSE",
        "description": "biblio.RESISTANCE_HELICOI_ENTRAXE_IMPOSE",
        "peekOfCode": "class Ui_RESISTANCE_HELICOI_ENTRAXE_IMPOSE(object):\n    def calculer_engrenage(self):\n        engrenage = \"\"\n        if self.radioButton.isChecked():\n            engrenage = \"exterieur\"\n        elif self.radioButton_2.isChecked():\n            engrenage = \"interieur\"\n        else:\n            QMessageBox.warning(None, \"Erreur de sélection\", \"Veuillez sélectionner une classe d'ISO et un type d'acier et aussi precisez si l'engrenage est exterieur ou interieur.\")\n            return",
        "detail": "biblio.RESISTANCE_HELICOI_ENTRAXE_IMPOSE",
        "documentation": {}
    },
    {
        "label": "Ui_RESISTANCE_HELICOI_ENTRAXE_NON_IMPOSE",
        "kind": 6,
        "importPath": "biblio.RESISTANCE_HELICOI_ENTRAXE_NON_IMPOSE",
        "description": "biblio.RESISTANCE_HELICOI_ENTRAXE_NON_IMPOSE",
        "peekOfCode": "class Ui_RESISTANCE_HELICOI_ENTRAXE_NON_IMPOSE(object):\n    def calculer_engrenage(self):\n        engrenage = \"\"\n        if self.radioButton.isChecked():\n            engrenage = \"exterieur\"\n        elif self.radioButton_2.isChecked():\n            engrenage = \"interieur\"\n        else:\n            QMessageBox.warning(None, \"Erreur de sélection\", \"Veuillez sélectionner une classe d'ISO_un type d'acier et precisez si l'engrenage est exterieur ou interieur.\")\n            return",
        "detail": "biblio.RESISTANCE_HELICOI_ENTRAXE_NON_IMPOSE",
        "documentation": {}
    },
    {
        "label": "Ui_ROUE_VIS_SANS_FIN",
        "kind": 6,
        "importPath": "biblio.ROUE_VIS_SANS_FIN",
        "description": "biblio.ROUE_VIS_SANS_FIN",
        "peekOfCode": "class Ui_ROUE_VIS_SANS_FIN(object):\n    def calculer_engrenage(self):\n        try:\n            mn = float(self.lineEdit1.text())\n            alpha = float(self.lineEdit2.text())\n            q = float(self.lineEdit3.text())\n            zr = float(self.lineEdit4.text())\n            zv = float(self.lineEdit5.text())    \n            μ = float(self.lineEdit5_1.text())\n            beta_v1 = math.atan(zv / q)",
        "detail": "biblio.ROUE_VIS_SANS_FIN",
        "documentation": {}
    },
    {
        "label": "retour",
        "kind": 2,
        "importPath": "GEARMASTER",
        "description": "GEARMASTER",
        "peekOfCode": "def retour():\n    LOGICIEL_DE_CALCUL.close() \ndef retour_1():\n    different_type_engrenage.close()  # Ferme la fenêtre lorsque le bouton \"retour\" est cliqué \ndef retour_2():\n\tfenetre_case1.close()\ndef retour_3():\n\tdenture_droite_ch1.close()\ndef retour_4():\n\tdenture_droite_hE_ch1.close()",
        "detail": "GEARMASTER",
        "documentation": {}
    },
    {
        "label": "retour_1",
        "kind": 2,
        "importPath": "GEARMASTER",
        "description": "GEARMASTER",
        "peekOfCode": "def retour_1():\n    different_type_engrenage.close()  # Ferme la fenêtre lorsque le bouton \"retour\" est cliqué \ndef retour_2():\n\tfenetre_case1.close()\ndef retour_3():\n\tdenture_droite_ch1.close()\ndef retour_4():\n\tdenture_droite_hE_ch1.close()\ndef retour_5():\n\tdenture_droite_ch11.close()",
        "detail": "GEARMASTER",
        "documentation": {}
    },
    {
        "label": "retour_2",
        "kind": 2,
        "importPath": "GEARMASTER",
        "description": "GEARMASTER",
        "peekOfCode": "def retour_2():\n\tfenetre_case1.close()\ndef retour_3():\n\tdenture_droite_ch1.close()\ndef retour_4():\n\tdenture_droite_hE_ch1.close()\ndef retour_5():\n\tdenture_droite_ch11.close()\ndef retour_6():\n\tdenture_droite_hI_ch1.close()",
        "detail": "GEARMASTER",
        "documentation": {}
    },
    {
        "label": "retour_3",
        "kind": 2,
        "importPath": "GEARMASTER",
        "description": "GEARMASTER",
        "peekOfCode": "def retour_3():\n\tdenture_droite_ch1.close()\ndef retour_4():\n\tdenture_droite_hE_ch1.close()\ndef retour_5():\n\tdenture_droite_ch11.close()\ndef retour_6():\n\tdenture_droite_hI_ch1.close()\ndef retour_7():\n\tcalcul_module.close()",
        "detail": "GEARMASTER",
        "documentation": {}
    },
    {
        "label": "retour_4",
        "kind": 2,
        "importPath": "GEARMASTER",
        "description": "GEARMASTER",
        "peekOfCode": "def retour_4():\n\tdenture_droite_hE_ch1.close()\ndef retour_5():\n\tdenture_droite_ch11.close()\ndef retour_6():\n\tdenture_droite_hI_ch1.close()\ndef retour_7():\n\tcalcul_module.close()\ndef retour_8():\n\tENGRENAGES_DEPORTEES.close()",
        "detail": "GEARMASTER",
        "documentation": {}
    },
    {
        "label": "retour_5",
        "kind": 2,
        "importPath": "GEARMASTER",
        "description": "GEARMASTER",
        "peekOfCode": "def retour_5():\n\tdenture_droite_ch11.close()\ndef retour_6():\n\tdenture_droite_hI_ch1.close()\ndef retour_7():\n\tcalcul_module.close()\ndef retour_8():\n\tENGRENAGES_DEPORTEES.close()\ndef retour_9():\n\tDEPORTS_SANS_VARIATION_ENTRAXE.close()",
        "detail": "GEARMASTER",
        "documentation": {}
    },
    {
        "label": "retour_6",
        "kind": 2,
        "importPath": "GEARMASTER",
        "description": "GEARMASTER",
        "peekOfCode": "def retour_6():\n\tdenture_droite_hI_ch1.close()\ndef retour_7():\n\tcalcul_module.close()\ndef retour_8():\n\tENGRENAGES_DEPORTEES.close()\ndef retour_9():\n\tDEPORTS_SANS_VARIATION_ENTRAXE.close()\ndef retour_10():\n\tDEPORTS_AVEC_VARIATION_ENTRAXE.close()",
        "detail": "GEARMASTER",
        "documentation": {}
    },
    {
        "label": "retour_7",
        "kind": 2,
        "importPath": "GEARMASTER",
        "description": "GEARMASTER",
        "peekOfCode": "def retour_7():\n\tcalcul_module.close()\ndef retour_8():\n\tENGRENAGES_DEPORTEES.close()\ndef retour_9():\n\tDEPORTS_SANS_VARIATION_ENTRAXE.close()\ndef retour_10():\n\tDEPORTS_AVEC_VARIATION_ENTRAXE.close()\ndef retour_11():\n\tSANS_VARIATION_ENTRAXE.close()",
        "detail": "GEARMASTER",
        "documentation": {}
    },
    {
        "label": "retour_8",
        "kind": 2,
        "importPath": "GEARMASTER",
        "description": "GEARMASTER",
        "peekOfCode": "def retour_8():\n\tENGRENAGES_DEPORTEES.close()\ndef retour_9():\n\tDEPORTS_SANS_VARIATION_ENTRAXE.close()\ndef retour_10():\n\tDEPORTS_AVEC_VARIATION_ENTRAXE.close()\ndef retour_11():\n\tSANS_VARIATION_ENTRAXE.close()\ndef retour_12():\n\tVARIATION_ENTRAXE.close()",
        "detail": "GEARMASTER",
        "documentation": {}
    },
    {
        "label": "retour_9",
        "kind": 2,
        "importPath": "GEARMASTER",
        "description": "GEARMASTER",
        "peekOfCode": "def retour_9():\n\tDEPORTS_SANS_VARIATION_ENTRAXE.close()\ndef retour_10():\n\tDEPORTS_AVEC_VARIATION_ENTRAXE.close()\ndef retour_11():\n\tSANS_VARIATION_ENTRAXE.close()\ndef retour_12():\n\tVARIATION_ENTRAXE.close()\ndef retour_13():\n\tMETHODE_ISO_SANS_VARIATION_ENTRAXE.close()",
        "detail": "GEARMASTER",
        "documentation": {}
    },
    {
        "label": "retour_10",
        "kind": 2,
        "importPath": "GEARMASTER",
        "description": "GEARMASTER",
        "peekOfCode": "def retour_10():\n\tDEPORTS_AVEC_VARIATION_ENTRAXE.close()\ndef retour_11():\n\tSANS_VARIATION_ENTRAXE.close()\ndef retour_12():\n\tVARIATION_ENTRAXE.close()\ndef retour_13():\n\tMETHODE_ISO_SANS_VARIATION_ENTRAXE.close()\ndef retour_14():\n\tMETHODE_WRICHTER_SANS_VARIATION_ENTRAXE.close()",
        "detail": "GEARMASTER",
        "documentation": {}
    },
    {
        "label": "retour_11",
        "kind": 2,
        "importPath": "GEARMASTER",
        "description": "GEARMASTER",
        "peekOfCode": "def retour_11():\n\tSANS_VARIATION_ENTRAXE.close()\ndef retour_12():\n\tVARIATION_ENTRAXE.close()\ndef retour_13():\n\tMETHODE_ISO_SANS_VARIATION_ENTRAXE.close()\ndef retour_14():\n\tMETHODE_WRICHTER_SANS_VARIATION_ENTRAXE.close()\ndef retour_15():\n\tMETHODE_MAAGTASCHENBUCH_SANS_VARIATION_ENTRAXE.close()",
        "detail": "GEARMASTER",
        "documentation": {}
    },
    {
        "label": "retour_12",
        "kind": 2,
        "importPath": "GEARMASTER",
        "description": "GEARMASTER",
        "peekOfCode": "def retour_12():\n\tVARIATION_ENTRAXE.close()\ndef retour_13():\n\tMETHODE_ISO_SANS_VARIATION_ENTRAXE.close()\ndef retour_14():\n\tMETHODE_WRICHTER_SANS_VARIATION_ENTRAXE.close()\ndef retour_15():\n\tMETHODE_MAAGTASCHENBUCH_SANS_VARIATION_ENTRAXE.close()\ndef retour_16():\n\tMETHODE_ISO_D_DROITE.close()",
        "detail": "GEARMASTER",
        "documentation": {}
    },
    {
        "label": "retour_13",
        "kind": 2,
        "importPath": "GEARMASTER",
        "description": "GEARMASTER",
        "peekOfCode": "def retour_13():\n\tMETHODE_ISO_SANS_VARIATION_ENTRAXE.close()\ndef retour_14():\n\tMETHODE_WRICHTER_SANS_VARIATION_ENTRAXE.close()\ndef retour_15():\n\tMETHODE_MAAGTASCHENBUCH_SANS_VARIATION_ENTRAXE.close()\ndef retour_16():\n\tMETHODE_ISO_D_DROITE.close()\ndef retour_17():\n\tMETHODE_W_RICHTER_D_DROITE.close()",
        "detail": "GEARMASTER",
        "documentation": {}
    },
    {
        "label": "retour_14",
        "kind": 2,
        "importPath": "GEARMASTER",
        "description": "GEARMASTER",
        "peekOfCode": "def retour_14():\n\tMETHODE_WRICHTER_SANS_VARIATION_ENTRAXE.close()\ndef retour_15():\n\tMETHODE_MAAGTASCHENBUCH_SANS_VARIATION_ENTRAXE.close()\ndef retour_16():\n\tMETHODE_ISO_D_DROITE.close()\ndef retour_17():\n\tMETHODE_W_RICHTER_D_DROITE.close()\ndef retour_18():\n\tMETHODE_MAAG_TASCHENBUCH_D_DROITE.close()",
        "detail": "GEARMASTER",
        "documentation": {}
    },
    {
        "label": "retour_15",
        "kind": 2,
        "importPath": "GEARMASTER",
        "description": "GEARMASTER",
        "peekOfCode": "def retour_15():\n\tMETHODE_MAAGTASCHENBUCH_SANS_VARIATION_ENTRAXE.close()\ndef retour_16():\n\tMETHODE_ISO_D_DROITE.close()\ndef retour_17():\n\tMETHODE_W_RICHTER_D_DROITE.close()\ndef retour_18():\n\tMETHODE_MAAG_TASCHENBUCH_D_DROITE.close()\ndef retour_19():\n\tMETHODE_ISO_D_HELICOIDALE.close()",
        "detail": "GEARMASTER",
        "documentation": {}
    },
    {
        "label": "retour_16",
        "kind": 2,
        "importPath": "GEARMASTER",
        "description": "GEARMASTER",
        "peekOfCode": "def retour_16():\n\tMETHODE_ISO_D_DROITE.close()\ndef retour_17():\n\tMETHODE_W_RICHTER_D_DROITE.close()\ndef retour_18():\n\tMETHODE_MAAG_TASCHENBUCH_D_DROITE.close()\ndef retour_19():\n\tMETHODE_ISO_D_HELICOIDALE.close()\ndef retour_20():\n\tMETHODE_DE_W_RICHTER_D_HELICOIDALE.close()",
        "detail": "GEARMASTER",
        "documentation": {}
    },
    {
        "label": "retour_17",
        "kind": 2,
        "importPath": "GEARMASTER",
        "description": "GEARMASTER",
        "peekOfCode": "def retour_17():\n\tMETHODE_W_RICHTER_D_DROITE.close()\ndef retour_18():\n\tMETHODE_MAAG_TASCHENBUCH_D_DROITE.close()\ndef retour_19():\n\tMETHODE_ISO_D_HELICOIDALE.close()\ndef retour_20():\n\tMETHODE_DE_W_RICHTER_D_HELICOIDALE.close()\ndef retour_21():\n\tMETHODE_MAAG_TASCHENBUCH_D_HELICOIDALE.close()",
        "detail": "GEARMASTER",
        "documentation": {}
    },
    {
        "label": "retour_18",
        "kind": 2,
        "importPath": "GEARMASTER",
        "description": "GEARMASTER",
        "peekOfCode": "def retour_18():\n\tMETHODE_MAAG_TASCHENBUCH_D_DROITE.close()\ndef retour_19():\n\tMETHODE_ISO_D_HELICOIDALE.close()\ndef retour_20():\n\tMETHODE_DE_W_RICHTER_D_HELICOIDALE.close()\ndef retour_21():\n\tMETHODE_MAAG_TASCHENBUCH_D_HELICOIDALE.close()\ndef retour_22():\n\tDenture_droite_deporteE.close()",
        "detail": "GEARMASTER",
        "documentation": {}
    },
    {
        "label": "retour_19",
        "kind": 2,
        "importPath": "GEARMASTER",
        "description": "GEARMASTER",
        "peekOfCode": "def retour_19():\n\tMETHODE_ISO_D_HELICOIDALE.close()\ndef retour_20():\n\tMETHODE_DE_W_RICHTER_D_HELICOIDALE.close()\ndef retour_21():\n\tMETHODE_MAAG_TASCHENBUCH_D_HELICOIDALE.close()\ndef retour_22():\n\tDenture_droite_deporteE.close()\ndef retour_23():\n\tDenture_droite_deporteIN.close()",
        "detail": "GEARMASTER",
        "documentation": {}
    },
    {
        "label": "retour_20",
        "kind": 2,
        "importPath": "GEARMASTER",
        "description": "GEARMASTER",
        "peekOfCode": "def retour_20():\n\tMETHODE_DE_W_RICHTER_D_HELICOIDALE.close()\ndef retour_21():\n\tMETHODE_MAAG_TASCHENBUCH_D_HELICOIDALE.close()\ndef retour_22():\n\tDenture_droite_deporteE.close()\ndef retour_23():\n\tDenture_droite_deporteIN.close()\ndef retour_24():\n\tDenture_droiteH_deporteIN.close()",
        "detail": "GEARMASTER",
        "documentation": {}
    },
    {
        "label": "retour_21",
        "kind": 2,
        "importPath": "GEARMASTER",
        "description": "GEARMASTER",
        "peekOfCode": "def retour_21():\n\tMETHODE_MAAG_TASCHENBUCH_D_HELICOIDALE.close()\ndef retour_22():\n\tDenture_droite_deporteE.close()\ndef retour_23():\n\tDenture_droite_deporteIN.close()\ndef retour_24():\n\tDenture_droiteH_deporteIN.close()\ndef retour_25():\n\tDenture_droiteH_deporteE.close()",
        "detail": "GEARMASTER",
        "documentation": {}
    },
    {
        "label": "retour_22",
        "kind": 2,
        "importPath": "GEARMASTER",
        "description": "GEARMASTER",
        "peekOfCode": "def retour_22():\n\tDenture_droite_deporteE.close()\ndef retour_23():\n\tDenture_droite_deporteIN.close()\ndef retour_24():\n\tDenture_droiteH_deporteIN.close()\ndef retour_25():\n\tDenture_droiteH_deporteE.close()\ndef retour_26():\n\tDenture_droite_deporteEX_VARIATION_ANT_NON_IMPOSE.close()",
        "detail": "GEARMASTER",
        "documentation": {}
    },
    {
        "label": "retour_23",
        "kind": 2,
        "importPath": "GEARMASTER",
        "description": "GEARMASTER",
        "peekOfCode": "def retour_23():\n\tDenture_droite_deporteIN.close()\ndef retour_24():\n\tDenture_droiteH_deporteIN.close()\ndef retour_25():\n\tDenture_droiteH_deporteE.close()\ndef retour_26():\n\tDenture_droite_deporteEX_VARIATION_ANT_NON_IMPOSE.close()\ndef retour_27():\n\tDenture_droite_deporteIN_VARIATION_ANT_NON_IMPOSE.close()\t",
        "detail": "GEARMASTER",
        "documentation": {}
    },
    {
        "label": "retour_24",
        "kind": 2,
        "importPath": "GEARMASTER",
        "description": "GEARMASTER",
        "peekOfCode": "def retour_24():\n\tDenture_droiteH_deporteIN.close()\ndef retour_25():\n\tDenture_droiteH_deporteE.close()\ndef retour_26():\n\tDenture_droite_deporteEX_VARIATION_ANT_NON_IMPOSE.close()\ndef retour_27():\n\tDenture_droite_deporteIN_VARIATION_ANT_NON_IMPOSE.close()\t\ndef retour_28():\n\tDenture_droiteH_deporteE_VARIATION_ANT_NON_IMPOSE.close()",
        "detail": "GEARMASTER",
        "documentation": {}
    },
    {
        "label": "retour_25",
        "kind": 2,
        "importPath": "GEARMASTER",
        "description": "GEARMASTER",
        "peekOfCode": "def retour_25():\n\tDenture_droiteH_deporteE.close()\ndef retour_26():\n\tDenture_droite_deporteEX_VARIATION_ANT_NON_IMPOSE.close()\ndef retour_27():\n\tDenture_droite_deporteIN_VARIATION_ANT_NON_IMPOSE.close()\t\ndef retour_28():\n\tDenture_droiteH_deporteE_VARIATION_ANT_NON_IMPOSE.close()\ndef retour_29():\n\tDenture_droiteH_deporteIN_VARIATION_ANT_NON_IMPOSE.close()",
        "detail": "GEARMASTER",
        "documentation": {}
    },
    {
        "label": "retour_26",
        "kind": 2,
        "importPath": "GEARMASTER",
        "description": "GEARMASTER",
        "peekOfCode": "def retour_26():\n\tDenture_droite_deporteEX_VARIATION_ANT_NON_IMPOSE.close()\ndef retour_27():\n\tDenture_droite_deporteIN_VARIATION_ANT_NON_IMPOSE.close()\t\ndef retour_28():\n\tDenture_droiteH_deporteE_VARIATION_ANT_NON_IMPOSE.close()\ndef retour_29():\n\tDenture_droiteH_deporteIN_VARIATION_ANT_NON_IMPOSE.close()\ndef retour_30():\n\tDenture_droite_deporteEX_VARIATION_ENT_IMPOSE.close()\t",
        "detail": "GEARMASTER",
        "documentation": {}
    },
    {
        "label": "retour_27",
        "kind": 2,
        "importPath": "GEARMASTER",
        "description": "GEARMASTER",
        "peekOfCode": "def retour_27():\n\tDenture_droite_deporteIN_VARIATION_ANT_NON_IMPOSE.close()\t\ndef retour_28():\n\tDenture_droiteH_deporteE_VARIATION_ANT_NON_IMPOSE.close()\ndef retour_29():\n\tDenture_droiteH_deporteIN_VARIATION_ANT_NON_IMPOSE.close()\ndef retour_30():\n\tDenture_droite_deporteEX_VARIATION_ENT_IMPOSE.close()\t\ndef retour_31():\n\tDenture_droite_deporteIN_VARIATION_ENT_IMPOSE.close()",
        "detail": "GEARMASTER",
        "documentation": {}
    },
    {
        "label": "retour_28",
        "kind": 2,
        "importPath": "GEARMASTER",
        "description": "GEARMASTER",
        "peekOfCode": "def retour_28():\n\tDenture_droiteH_deporteE_VARIATION_ANT_NON_IMPOSE.close()\ndef retour_29():\n\tDenture_droiteH_deporteIN_VARIATION_ANT_NON_IMPOSE.close()\ndef retour_30():\n\tDenture_droite_deporteEX_VARIATION_ENT_IMPOSE.close()\t\ndef retour_31():\n\tDenture_droite_deporteIN_VARIATION_ENT_IMPOSE.close()\ndef retour_32():\n\tDenture_droiteH_deporteE_VARIATION_ENT_IMPOSE.close()",
        "detail": "GEARMASTER",
        "documentation": {}
    },
    {
        "label": "retour_29",
        "kind": 2,
        "importPath": "GEARMASTER",
        "description": "GEARMASTER",
        "peekOfCode": "def retour_29():\n\tDenture_droiteH_deporteIN_VARIATION_ANT_NON_IMPOSE.close()\ndef retour_30():\n\tDenture_droite_deporteEX_VARIATION_ENT_IMPOSE.close()\t\ndef retour_31():\n\tDenture_droite_deporteIN_VARIATION_ENT_IMPOSE.close()\ndef retour_32():\n\tDenture_droiteH_deporteE_VARIATION_ENT_IMPOSE.close()\ndef retour_33():\n\tDenture_droiteH_deporteIN_VARIATION_ENT_IMPOSE.close()\t",
        "detail": "GEARMASTER",
        "documentation": {}
    },
    {
        "label": "retour_30",
        "kind": 2,
        "importPath": "GEARMASTER",
        "description": "GEARMASTER",
        "peekOfCode": "def retour_30():\n\tDenture_droite_deporteEX_VARIATION_ENT_IMPOSE.close()\t\ndef retour_31():\n\tDenture_droite_deporteIN_VARIATION_ENT_IMPOSE.close()\ndef retour_32():\n\tDenture_droiteH_deporteE_VARIATION_ENT_IMPOSE.close()\ndef retour_33():\n\tDenture_droiteH_deporteIN_VARIATION_ENT_IMPOSE.close()\t\ndef retour_34():\n\tENGRENAGE_CONCOURANTE.close()",
        "detail": "GEARMASTER",
        "documentation": {}
    },
    {
        "label": "retour_31",
        "kind": 2,
        "importPath": "GEARMASTER",
        "description": "GEARMASTER",
        "peekOfCode": "def retour_31():\n\tDenture_droite_deporteIN_VARIATION_ENT_IMPOSE.close()\ndef retour_32():\n\tDenture_droiteH_deporteE_VARIATION_ENT_IMPOSE.close()\ndef retour_33():\n\tDenture_droiteH_deporteIN_VARIATION_ENT_IMPOSE.close()\t\ndef retour_34():\n\tENGRENAGE_CONCOURANTE.close()\ndef retour_35():\n\tENGRENAGE_CONIQUE_DROIT_DENTURE_NORMALE.close()",
        "detail": "GEARMASTER",
        "documentation": {}
    },
    {
        "label": "retour_32",
        "kind": 2,
        "importPath": "GEARMASTER",
        "description": "GEARMASTER",
        "peekOfCode": "def retour_32():\n\tDenture_droiteH_deporteE_VARIATION_ENT_IMPOSE.close()\ndef retour_33():\n\tDenture_droiteH_deporteIN_VARIATION_ENT_IMPOSE.close()\t\ndef retour_34():\n\tENGRENAGE_CONCOURANTE.close()\ndef retour_35():\n\tENGRENAGE_CONIQUE_DROIT_DENTURE_NORMALE.close()\ndef retour_36():\n\tENGRENAGE_CONIQUE_DROIT_DENTURE_DEPORTEE.close()",
        "detail": "GEARMASTER",
        "documentation": {}
    },
    {
        "label": "retour_33",
        "kind": 2,
        "importPath": "GEARMASTER",
        "description": "GEARMASTER",
        "peekOfCode": "def retour_33():\n\tDenture_droiteH_deporteIN_VARIATION_ENT_IMPOSE.close()\t\ndef retour_34():\n\tENGRENAGE_CONCOURANTE.close()\ndef retour_35():\n\tENGRENAGE_CONIQUE_DROIT_DENTURE_NORMALE.close()\ndef retour_36():\n\tENGRENAGE_CONIQUE_DROIT_DENTURE_DEPORTEE.close()\ndef retour_37():\n\tENGRENAGE_CONIQUE_HELICOIDALE_NON_DEPORTEE.close()",
        "detail": "GEARMASTER",
        "documentation": {}
    },
    {
        "label": "retour_34",
        "kind": 2,
        "importPath": "GEARMASTER",
        "description": "GEARMASTER",
        "peekOfCode": "def retour_34():\n\tENGRENAGE_CONCOURANTE.close()\ndef retour_35():\n\tENGRENAGE_CONIQUE_DROIT_DENTURE_NORMALE.close()\ndef retour_36():\n\tENGRENAGE_CONIQUE_DROIT_DENTURE_DEPORTEE.close()\ndef retour_37():\n\tENGRENAGE_CONIQUE_HELICOIDALE_NON_DEPORTEE.close()\ndef retour_38():\n\tENGRENAGE_CONIQUE_HELICOIDALE_DEPORTEE.close()",
        "detail": "GEARMASTER",
        "documentation": {}
    },
    {
        "label": "retour_35",
        "kind": 2,
        "importPath": "GEARMASTER",
        "description": "GEARMASTER",
        "peekOfCode": "def retour_35():\n\tENGRENAGE_CONIQUE_DROIT_DENTURE_NORMALE.close()\ndef retour_36():\n\tENGRENAGE_CONIQUE_DROIT_DENTURE_DEPORTEE.close()\ndef retour_37():\n\tENGRENAGE_CONIQUE_HELICOIDALE_NON_DEPORTEE.close()\ndef retour_38():\n\tENGRENAGE_CONIQUE_HELICOIDALE_DEPORTEE.close()\ndef retour_39():\n\tROUE_VIS_SANS_FIN.close()",
        "detail": "GEARMASTER",
        "documentation": {}
    },
    {
        "label": "retour_36",
        "kind": 2,
        "importPath": "GEARMASTER",
        "description": "GEARMASTER",
        "peekOfCode": "def retour_36():\n\tENGRENAGE_CONIQUE_DROIT_DENTURE_DEPORTEE.close()\ndef retour_37():\n\tENGRENAGE_CONIQUE_HELICOIDALE_NON_DEPORTEE.close()\ndef retour_38():\n\tENGRENAGE_CONIQUE_HELICOIDALE_DEPORTEE.close()\ndef retour_39():\n\tROUE_VIS_SANS_FIN.close()\ndef retour_40():\n\tRESISTANCE_EFFORT.close()",
        "detail": "GEARMASTER",
        "documentation": {}
    },
    {
        "label": "retour_37",
        "kind": 2,
        "importPath": "GEARMASTER",
        "description": "GEARMASTER",
        "peekOfCode": "def retour_37():\n\tENGRENAGE_CONIQUE_HELICOIDALE_NON_DEPORTEE.close()\ndef retour_38():\n\tENGRENAGE_CONIQUE_HELICOIDALE_DEPORTEE.close()\ndef retour_39():\n\tROUE_VIS_SANS_FIN.close()\ndef retour_40():\n\tRESISTANCE_EFFORT.close()\ndef retour_41():\n\tLES_EFFORTS_SUR_DENTS.close()",
        "detail": "GEARMASTER",
        "documentation": {}
    },
    {
        "label": "retour_38",
        "kind": 2,
        "importPath": "GEARMASTER",
        "description": "GEARMASTER",
        "peekOfCode": "def retour_38():\n\tENGRENAGE_CONIQUE_HELICOIDALE_DEPORTEE.close()\ndef retour_39():\n\tROUE_VIS_SANS_FIN.close()\ndef retour_40():\n\tRESISTANCE_EFFORT.close()\ndef retour_41():\n\tLES_EFFORTS_SUR_DENTS.close()\ndef retour_42():\n\tDENTURE_DROITE_PARALLELE.close()",
        "detail": "GEARMASTER",
        "documentation": {}
    },
    {
        "label": "retour_39",
        "kind": 2,
        "importPath": "GEARMASTER",
        "description": "GEARMASTER",
        "peekOfCode": "def retour_39():\n\tROUE_VIS_SANS_FIN.close()\ndef retour_40():\n\tRESISTANCE_EFFORT.close()\ndef retour_41():\n\tLES_EFFORTS_SUR_DENTS.close()\ndef retour_42():\n\tDENTURE_DROITE_PARALLELE.close()\ndef retour_43():\n\tDENTURE_HELICOIDALE_PARALLELE.close()",
        "detail": "GEARMASTER",
        "documentation": {}
    },
    {
        "label": "retour_40",
        "kind": 2,
        "importPath": "GEARMASTER",
        "description": "GEARMASTER",
        "peekOfCode": "def retour_40():\n\tRESISTANCE_EFFORT.close()\ndef retour_41():\n\tLES_EFFORTS_SUR_DENTS.close()\ndef retour_42():\n\tDENTURE_DROITE_PARALLELE.close()\ndef retour_43():\n\tDENTURE_HELICOIDALE_PARALLELE.close()\ndef retour_44():\n\tDENTURE_CONIQUE.close()",
        "detail": "GEARMASTER",
        "documentation": {}
    },
    {
        "label": "retour_41",
        "kind": 2,
        "importPath": "GEARMASTER",
        "description": "GEARMASTER",
        "peekOfCode": "def retour_41():\n\tLES_EFFORTS_SUR_DENTS.close()\ndef retour_42():\n\tDENTURE_DROITE_PARALLELE.close()\ndef retour_43():\n\tDENTURE_HELICOIDALE_PARALLELE.close()\ndef retour_44():\n\tDENTURE_CONIQUE.close()\ndef retour_45():\n\tLES_EFFORTS_ROUE_ET_VIS.close()",
        "detail": "GEARMASTER",
        "documentation": {}
    },
    {
        "label": "retour_42",
        "kind": 2,
        "importPath": "GEARMASTER",
        "description": "GEARMASTER",
        "peekOfCode": "def retour_42():\n\tDENTURE_DROITE_PARALLELE.close()\ndef retour_43():\n\tDENTURE_HELICOIDALE_PARALLELE.close()\ndef retour_44():\n\tDENTURE_CONIQUE.close()\ndef retour_45():\n\tLES_EFFORTS_ROUE_ET_VIS.close()\ndef retour_46():\n\tRESISTANCE_ENGRENAGE_PARALLELE.close()",
        "detail": "GEARMASTER",
        "documentation": {}
    },
    {
        "label": "retour_43",
        "kind": 2,
        "importPath": "GEARMASTER",
        "description": "GEARMASTER",
        "peekOfCode": "def retour_43():\n\tDENTURE_HELICOIDALE_PARALLELE.close()\ndef retour_44():\n\tDENTURE_CONIQUE.close()\ndef retour_45():\n\tLES_EFFORTS_ROUE_ET_VIS.close()\ndef retour_46():\n\tRESISTANCE_ENGRENAGE_PARALLELE.close()\ndef retour_47():\n\tRESISTANCE_DROITE_ENTRAXE_NON_IMPOSE.close()",
        "detail": "GEARMASTER",
        "documentation": {}
    },
    {
        "label": "retour_44",
        "kind": 2,
        "importPath": "GEARMASTER",
        "description": "GEARMASTER",
        "peekOfCode": "def retour_44():\n\tDENTURE_CONIQUE.close()\ndef retour_45():\n\tLES_EFFORTS_ROUE_ET_VIS.close()\ndef retour_46():\n\tRESISTANCE_ENGRENAGE_PARALLELE.close()\ndef retour_47():\n\tRESISTANCE_DROITE_ENTRAXE_NON_IMPOSE.close()\ndef retour_48():\n\tRESISTANCE_DROITE_AVEC_ENTRAXE_IMPOSE.close()",
        "detail": "GEARMASTER",
        "documentation": {}
    },
    {
        "label": "retour_45",
        "kind": 2,
        "importPath": "GEARMASTER",
        "description": "GEARMASTER",
        "peekOfCode": "def retour_45():\n\tLES_EFFORTS_ROUE_ET_VIS.close()\ndef retour_46():\n\tRESISTANCE_ENGRENAGE_PARALLELE.close()\ndef retour_47():\n\tRESISTANCE_DROITE_ENTRAXE_NON_IMPOSE.close()\ndef retour_48():\n\tRESISTANCE_DROITE_AVEC_ENTRAXE_IMPOSE.close()\ndef retour_49():\n\tRESISTANCE_HELICOI_ENTRAXE_NON_IMPOSE.close()",
        "detail": "GEARMASTER",
        "documentation": {}
    },
    {
        "label": "retour_46",
        "kind": 2,
        "importPath": "GEARMASTER",
        "description": "GEARMASTER",
        "peekOfCode": "def retour_46():\n\tRESISTANCE_ENGRENAGE_PARALLELE.close()\ndef retour_47():\n\tRESISTANCE_DROITE_ENTRAXE_NON_IMPOSE.close()\ndef retour_48():\n\tRESISTANCE_DROITE_AVEC_ENTRAXE_IMPOSE.close()\ndef retour_49():\n\tRESISTANCE_HELICOI_ENTRAXE_NON_IMPOSE.close()\ndef retour_50():\n\tRESISTANCE_HELICOI_ENTRAXE_IMPOSE.close()",
        "detail": "GEARMASTER",
        "documentation": {}
    },
    {
        "label": "retour_47",
        "kind": 2,
        "importPath": "GEARMASTER",
        "description": "GEARMASTER",
        "peekOfCode": "def retour_47():\n\tRESISTANCE_DROITE_ENTRAXE_NON_IMPOSE.close()\ndef retour_48():\n\tRESISTANCE_DROITE_AVEC_ENTRAXE_IMPOSE.close()\ndef retour_49():\n\tRESISTANCE_HELICOI_ENTRAXE_NON_IMPOSE.close()\ndef retour_50():\n\tRESISTANCE_HELICOI_ENTRAXE_IMPOSE.close()\n# FIN Bouton retour\ndef premier_fenetre():",
        "detail": "GEARMASTER",
        "documentation": {}
    },
    {
        "label": "retour_48",
        "kind": 2,
        "importPath": "GEARMASTER",
        "description": "GEARMASTER",
        "peekOfCode": "def retour_48():\n\tRESISTANCE_DROITE_AVEC_ENTRAXE_IMPOSE.close()\ndef retour_49():\n\tRESISTANCE_HELICOI_ENTRAXE_NON_IMPOSE.close()\ndef retour_50():\n\tRESISTANCE_HELICOI_ENTRAXE_IMPOSE.close()\n# FIN Bouton retour\ndef premier_fenetre():\n\tLOGICIEL_DE_CALCUL.setMinimumSize(1080, 720)  # Définit la taille minimale de la fenêtre\n\tLOGICIEL_DE_CALCUL.show()",
        "detail": "GEARMASTER",
        "documentation": {}
    },
    {
        "label": "retour_49",
        "kind": 2,
        "importPath": "GEARMASTER",
        "description": "GEARMASTER",
        "peekOfCode": "def retour_49():\n\tRESISTANCE_HELICOI_ENTRAXE_NON_IMPOSE.close()\ndef retour_50():\n\tRESISTANCE_HELICOI_ENTRAXE_IMPOSE.close()\n# FIN Bouton retour\ndef premier_fenetre():\n\tLOGICIEL_DE_CALCUL.setMinimumSize(1080, 720)  # Définit la taille minimale de la fenêtre\n\tLOGICIEL_DE_CALCUL.show()\n\tLOGICIEL_DE_CALCUL.showMaximized()\n\tdifferent_type_engrenage.hide()  # Maximise la fenêtre pour qu'elle occupe tout l'écran",
        "detail": "GEARMASTER",
        "documentation": {}
    },
    {
        "label": "retour_50",
        "kind": 2,
        "importPath": "GEARMASTER",
        "description": "GEARMASTER",
        "peekOfCode": "def retour_50():\n\tRESISTANCE_HELICOI_ENTRAXE_IMPOSE.close()\n# FIN Bouton retour\ndef premier_fenetre():\n\tLOGICIEL_DE_CALCUL.setMinimumSize(1080, 720)  # Définit la taille minimale de la fenêtre\n\tLOGICIEL_DE_CALCUL.show()\n\tLOGICIEL_DE_CALCUL.showMaximized()\n\tdifferent_type_engrenage.hide()  # Maximise la fenêtre pour qu'elle occupe tout l'écran\n#FENETRE 2\ndef afficherfenetre2():",
        "detail": "GEARMASTER",
        "documentation": {}
    },
    {
        "label": "premier_fenetre",
        "kind": 2,
        "importPath": "GEARMASTER",
        "description": "GEARMASTER",
        "peekOfCode": "def premier_fenetre():\n\tLOGICIEL_DE_CALCUL.setMinimumSize(1080, 720)  # Définit la taille minimale de la fenêtre\n\tLOGICIEL_DE_CALCUL.show()\n\tLOGICIEL_DE_CALCUL.showMaximized()\n\tdifferent_type_engrenage.hide()  # Maximise la fenêtre pour qu'elle occupe tout l'écran\n#FENETRE 2\ndef afficherfenetre2():\n\tdifferent_type_engrenage.setMinimumSize(1080, 720)  # permet de définir la taille minimale de la fenêtre\n\tdifferent_type_engrenage.showMaximized()\n\tLOGICIEL_DE_CALCUL.hide()",
        "detail": "GEARMASTER",
        "documentation": {}
    },
    {
        "label": "afficherfenetre2",
        "kind": 2,
        "importPath": "GEARMASTER",
        "description": "GEARMASTER",
        "peekOfCode": "def afficherfenetre2():\n\tdifferent_type_engrenage.setMinimumSize(1080, 720)  # permet de définir la taille minimale de la fenêtre\n\tdifferent_type_engrenage.showMaximized()\n\tLOGICIEL_DE_CALCUL.hide()\n\t  # permet de maximiser la fenêtre pour qu'elle occupe tout l'écran\n# DEBUT CHAPITRE 1\ndef affichercase1():\n\tfenetre_case1.setMinimumSize(1080, 720)\n\tfenetre_case1.showMaximized()\n\tdifferent_type_engrenage.hide()",
        "detail": "GEARMASTER",
        "documentation": {}
    },
    {
        "label": "affichercase1",
        "kind": 2,
        "importPath": "GEARMASTER",
        "description": "GEARMASTER",
        "peekOfCode": "def affichercase1():\n\tfenetre_case1.setMinimumSize(1080, 720)\n\tfenetre_case1.showMaximized()\n\tdifferent_type_engrenage.hide()\ndef afficherdenture_droite_exterieur():\n\tdenture_droite_ch1.setMinimumSize(1080, 720)\n\tdenture_droite_ch1.showMaximized()\n\t#denture_droite_ch1.show()\ndef afficherdenture_droite_interieur():\n\tdenture_droite_ch11.setMinimumSize(1080, 720)",
        "detail": "GEARMASTER",
        "documentation": {}
    },
    {
        "label": "afficherdenture_droite_exterieur",
        "kind": 2,
        "importPath": "GEARMASTER",
        "description": "GEARMASTER",
        "peekOfCode": "def afficherdenture_droite_exterieur():\n\tdenture_droite_ch1.setMinimumSize(1080, 720)\n\tdenture_droite_ch1.showMaximized()\n\t#denture_droite_ch1.show()\ndef afficherdenture_droite_interieur():\n\tdenture_droite_ch11.setMinimumSize(1080, 720)\n\tdenture_droite_ch11.showMaximized()\n\t#denture_droite_ch11.show()\ndef afficferdenture_droite_hE():\n\tdenture_droite_hE_ch1.setMinimumSize(1080, 720)",
        "detail": "GEARMASTER",
        "documentation": {}
    },
    {
        "label": "afficherdenture_droite_interieur",
        "kind": 2,
        "importPath": "GEARMASTER",
        "description": "GEARMASTER",
        "peekOfCode": "def afficherdenture_droite_interieur():\n\tdenture_droite_ch11.setMinimumSize(1080, 720)\n\tdenture_droite_ch11.showMaximized()\n\t#denture_droite_ch11.show()\ndef afficferdenture_droite_hE():\n\tdenture_droite_hE_ch1.setMinimumSize(1080, 720)\n\tdenture_droite_hE_ch1.showMaximized()\n\t#denture_droite_hE_ch1.show()\t\ndef afficferdenture_droite_hI():\n\tdenture_droite_hI_ch1.setMinimumSize(1080, 720)",
        "detail": "GEARMASTER",
        "documentation": {}
    },
    {
        "label": "afficferdenture_droite_hE",
        "kind": 2,
        "importPath": "GEARMASTER",
        "description": "GEARMASTER",
        "peekOfCode": "def afficferdenture_droite_hE():\n\tdenture_droite_hE_ch1.setMinimumSize(1080, 720)\n\tdenture_droite_hE_ch1.showMaximized()\n\t#denture_droite_hE_ch1.show()\t\ndef afficferdenture_droite_hI():\n\tdenture_droite_hI_ch1.setMinimumSize(1080, 720)\n\tdenture_droite_hI_ch1.showMaximized()\n\t#denture_droite_hI_ch1.show()\ndef affichermodule():\n\tcalcul_module.setMinimumSize(1080, 720)",
        "detail": "GEARMASTER",
        "documentation": {}
    },
    {
        "label": "afficferdenture_droite_hI",
        "kind": 2,
        "importPath": "GEARMASTER",
        "description": "GEARMASTER",
        "peekOfCode": "def afficferdenture_droite_hI():\n\tdenture_droite_hI_ch1.setMinimumSize(1080, 720)\n\tdenture_droite_hI_ch1.showMaximized()\n\t#denture_droite_hI_ch1.show()\ndef affichermodule():\n\tcalcul_module.setMinimumSize(1080, 720)\n\tcalcul_module.showMaximized()\n\t#calcul_module.show()\n# FIN CHAPITRE 1\n# DEBUT CHAPITRE 2",
        "detail": "GEARMASTER",
        "documentation": {}
    },
    {
        "label": "affichermodule",
        "kind": 2,
        "importPath": "GEARMASTER",
        "description": "GEARMASTER",
        "peekOfCode": "def affichermodule():\n\tcalcul_module.setMinimumSize(1080, 720)\n\tcalcul_module.showMaximized()\n\t#calcul_module.show()\n# FIN CHAPITRE 1\n# DEBUT CHAPITRE 2\ndef afficher_Engrenages_Deportees():\n\tENGRENAGES_DEPORTEES.setMinimumSize(1080, 720)\n\tENGRENAGES_DEPORTEES.showMaximized()\n\t#ENGRENAGES_DEPORTEES.show()",
        "detail": "GEARMASTER",
        "documentation": {}
    },
    {
        "label": "afficher_Engrenages_Deportees",
        "kind": 2,
        "importPath": "GEARMASTER",
        "description": "GEARMASTER",
        "peekOfCode": "def afficher_Engrenages_Deportees():\n\tENGRENAGES_DEPORTEES.setMinimumSize(1080, 720)\n\tENGRENAGES_DEPORTEES.showMaximized()\n\t#ENGRENAGES_DEPORTEES.show()\ndef afficher_DEPORTS_SANS_VARIATION_ENTRAXE():\n\tDEPORTS_SANS_VARIATION_ENTRAXE.setMinimumSize(1080, 720)\n\tDEPORTS_SANS_VARIATION_ENTRAXE.showMaximized()\n\t#DEPORTS_SANS_VARIATION_ENTRAXE.show()\ndef afficher_DEPORTS_AVEC_VARIATION_ENTRAXE():\n\tDEPORTS_AVEC_VARIATION_ENTRAXE.setMinimumSize(1080, 720)",
        "detail": "GEARMASTER",
        "documentation": {}
    },
    {
        "label": "afficher_DEPORTS_SANS_VARIATION_ENTRAXE",
        "kind": 2,
        "importPath": "GEARMASTER",
        "description": "GEARMASTER",
        "peekOfCode": "def afficher_DEPORTS_SANS_VARIATION_ENTRAXE():\n\tDEPORTS_SANS_VARIATION_ENTRAXE.setMinimumSize(1080, 720)\n\tDEPORTS_SANS_VARIATION_ENTRAXE.showMaximized()\n\t#DEPORTS_SANS_VARIATION_ENTRAXE.show()\ndef afficher_DEPORTS_AVEC_VARIATION_ENTRAXE():\n\tDEPORTS_AVEC_VARIATION_ENTRAXE.setMinimumSize(1080, 720)\n\tDEPORTS_AVEC_VARIATION_ENTRAXE.showMaximized()\n\t#DEPORTS_AVEC_VARIATION_ENTRAXE.show()\ndef afficher_SANS_VARIATION_ENTRAXE():\n\tSANS_VARIATION_ENTRAXE.setMinimumSize(1080, 720)",
        "detail": "GEARMASTER",
        "documentation": {}
    },
    {
        "label": "afficher_DEPORTS_AVEC_VARIATION_ENTRAXE",
        "kind": 2,
        "importPath": "GEARMASTER",
        "description": "GEARMASTER",
        "peekOfCode": "def afficher_DEPORTS_AVEC_VARIATION_ENTRAXE():\n\tDEPORTS_AVEC_VARIATION_ENTRAXE.setMinimumSize(1080, 720)\n\tDEPORTS_AVEC_VARIATION_ENTRAXE.showMaximized()\n\t#DEPORTS_AVEC_VARIATION_ENTRAXE.show()\ndef afficher_SANS_VARIATION_ENTRAXE():\n\tSANS_VARIATION_ENTRAXE.setMinimumSize(1080, 720)\n\tSANS_VARIATION_ENTRAXE.showMaximized()\n\t#SANS_VARIATION_ENTRAXE.show()\ndef afficher_VARIATION_ENTRAXE():\n\tVARIATION_ENTRAXE.setMinimumSize(1080, 720)",
        "detail": "GEARMASTER",
        "documentation": {}
    },
    {
        "label": "afficher_SANS_VARIATION_ENTRAXE",
        "kind": 2,
        "importPath": "GEARMASTER",
        "description": "GEARMASTER",
        "peekOfCode": "def afficher_SANS_VARIATION_ENTRAXE():\n\tSANS_VARIATION_ENTRAXE.setMinimumSize(1080, 720)\n\tSANS_VARIATION_ENTRAXE.showMaximized()\n\t#SANS_VARIATION_ENTRAXE.show()\ndef afficher_VARIATION_ENTRAXE():\n\tVARIATION_ENTRAXE.setMinimumSize(1080, 720)\n\tVARIATION_ENTRAXE.showMaximized()\n\t#VARIATION_ENTRAXE.show()\ndef afficher_METHODE_ISO_SANS_VARIATION_ENTRAXE():\n\tMETHODE_ISO_SANS_VARIATION_ENTRAXE.setMinimumSize(1080, 720)",
        "detail": "GEARMASTER",
        "documentation": {}
    },
    {
        "label": "afficher_VARIATION_ENTRAXE",
        "kind": 2,
        "importPath": "GEARMASTER",
        "description": "GEARMASTER",
        "peekOfCode": "def afficher_VARIATION_ENTRAXE():\n\tVARIATION_ENTRAXE.setMinimumSize(1080, 720)\n\tVARIATION_ENTRAXE.showMaximized()\n\t#VARIATION_ENTRAXE.show()\ndef afficher_METHODE_ISO_SANS_VARIATION_ENTRAXE():\n\tMETHODE_ISO_SANS_VARIATION_ENTRAXE.setMinimumSize(1080, 720)\n\tMETHODE_ISO_SANS_VARIATION_ENTRAXE.showMaximized()\n\t#METHODE_ISO_SANS_VARIATION_ENTRAXE.show()\ndef afficher_METHODE_MAAGTASCHENBUCH_SANS_VARIATION_ENTRAXE():\n\tMETHODE_MAAGTASCHENBUCH_SANS_VARIATION_ENTRAXE.setMinimumSize(1080, 720)",
        "detail": "GEARMASTER",
        "documentation": {}
    },
    {
        "label": "afficher_METHODE_ISO_SANS_VARIATION_ENTRAXE",
        "kind": 2,
        "importPath": "GEARMASTER",
        "description": "GEARMASTER",
        "peekOfCode": "def afficher_METHODE_ISO_SANS_VARIATION_ENTRAXE():\n\tMETHODE_ISO_SANS_VARIATION_ENTRAXE.setMinimumSize(1080, 720)\n\tMETHODE_ISO_SANS_VARIATION_ENTRAXE.showMaximized()\n\t#METHODE_ISO_SANS_VARIATION_ENTRAXE.show()\ndef afficher_METHODE_MAAGTASCHENBUCH_SANS_VARIATION_ENTRAXE():\n\tMETHODE_MAAGTASCHENBUCH_SANS_VARIATION_ENTRAXE.setMinimumSize(1080, 720)\n\tMETHODE_MAAGTASCHENBUCH_SANS_VARIATION_ENTRAXE.showMaximized()\n\t#METHODE_MAAGTASCHENBUCH_SANS_VARIATION_ENTRAXE.show()\ndef afficher_METHODE_WRICHTER_SANS_VARIATION_ENTRAXE():\n\tMETHODE_WRICHTER_SANS_VARIATION_ENTRAXE.setMinimumSize(1080, 720)",
        "detail": "GEARMASTER",
        "documentation": {}
    },
    {
        "label": "afficher_METHODE_MAAGTASCHENBUCH_SANS_VARIATION_ENTRAXE",
        "kind": 2,
        "importPath": "GEARMASTER",
        "description": "GEARMASTER",
        "peekOfCode": "def afficher_METHODE_MAAGTASCHENBUCH_SANS_VARIATION_ENTRAXE():\n\tMETHODE_MAAGTASCHENBUCH_SANS_VARIATION_ENTRAXE.setMinimumSize(1080, 720)\n\tMETHODE_MAAGTASCHENBUCH_SANS_VARIATION_ENTRAXE.showMaximized()\n\t#METHODE_MAAGTASCHENBUCH_SANS_VARIATION_ENTRAXE.show()\ndef afficher_METHODE_WRICHTER_SANS_VARIATION_ENTRAXE():\n\tMETHODE_WRICHTER_SANS_VARIATION_ENTRAXE.setMinimumSize(1080, 720)\n\tMETHODE_WRICHTER_SANS_VARIATION_ENTRAXE.showMaximized()\n\t#METHODE_WRICHTER_SANS_VARIATION_ENTRAXE.show()\ndef afficher_METHODE_ISO_D_DROITE():\n\tMETHODE_ISO_D_DROITE.setMinimumSize(1080, 720)",
        "detail": "GEARMASTER",
        "documentation": {}
    },
    {
        "label": "afficher_METHODE_WRICHTER_SANS_VARIATION_ENTRAXE",
        "kind": 2,
        "importPath": "GEARMASTER",
        "description": "GEARMASTER",
        "peekOfCode": "def afficher_METHODE_WRICHTER_SANS_VARIATION_ENTRAXE():\n\tMETHODE_WRICHTER_SANS_VARIATION_ENTRAXE.setMinimumSize(1080, 720)\n\tMETHODE_WRICHTER_SANS_VARIATION_ENTRAXE.showMaximized()\n\t#METHODE_WRICHTER_SANS_VARIATION_ENTRAXE.show()\ndef afficher_METHODE_ISO_D_DROITE():\n\tMETHODE_ISO_D_DROITE.setMinimumSize(1080, 720)\n\tMETHODE_ISO_D_DROITE.showMaximized()\n\t#METHODE_ISO_D_DROITE.show()\ndef afficher_METHODE_ISO_D_HELICOIDALE():\n\tMETHODE_ISO_D_HELICOIDALE.setMinimumSize(1080, 720)",
        "detail": "GEARMASTER",
        "documentation": {}
    },
    {
        "label": "afficher_METHODE_ISO_D_DROITE",
        "kind": 2,
        "importPath": "GEARMASTER",
        "description": "GEARMASTER",
        "peekOfCode": "def afficher_METHODE_ISO_D_DROITE():\n\tMETHODE_ISO_D_DROITE.setMinimumSize(1080, 720)\n\tMETHODE_ISO_D_DROITE.showMaximized()\n\t#METHODE_ISO_D_DROITE.show()\ndef afficher_METHODE_ISO_D_HELICOIDALE():\n\tMETHODE_ISO_D_HELICOIDALE.setMinimumSize(1080, 720)\n\tMETHODE_ISO_D_HELICOIDALE.showMaximized()\n\t#METHODE_ISO_D_HELICOIDALE.show()\ndef afficher_METHODE_W_RICHTER_D_DROITE():\n\tMETHODE_W_RICHTER_D_DROITE.setMinimumSize(1080, 720)",
        "detail": "GEARMASTER",
        "documentation": {}
    },
    {
        "label": "afficher_METHODE_ISO_D_HELICOIDALE",
        "kind": 2,
        "importPath": "GEARMASTER",
        "description": "GEARMASTER",
        "peekOfCode": "def afficher_METHODE_ISO_D_HELICOIDALE():\n\tMETHODE_ISO_D_HELICOIDALE.setMinimumSize(1080, 720)\n\tMETHODE_ISO_D_HELICOIDALE.showMaximized()\n\t#METHODE_ISO_D_HELICOIDALE.show()\ndef afficher_METHODE_W_RICHTER_D_DROITE():\n\tMETHODE_W_RICHTER_D_DROITE.setMinimumSize(1080, 720)\n\tMETHODE_W_RICHTER_D_DROITE.showMaximized()\n\t#METHODE_W_RICHTER_D_DROITE.show()\ndef afficher_METHODE_DE_W_RICHTER_D_HELICOIDALE():\n\tMETHODE_DE_W_RICHTER_D_HELICOIDALE.setMinimumSize(1080, 720)",
        "detail": "GEARMASTER",
        "documentation": {}
    },
    {
        "label": "afficher_METHODE_W_RICHTER_D_DROITE",
        "kind": 2,
        "importPath": "GEARMASTER",
        "description": "GEARMASTER",
        "peekOfCode": "def afficher_METHODE_W_RICHTER_D_DROITE():\n\tMETHODE_W_RICHTER_D_DROITE.setMinimumSize(1080, 720)\n\tMETHODE_W_RICHTER_D_DROITE.showMaximized()\n\t#METHODE_W_RICHTER_D_DROITE.show()\ndef afficher_METHODE_DE_W_RICHTER_D_HELICOIDALE():\n\tMETHODE_DE_W_RICHTER_D_HELICOIDALE.setMinimumSize(1080, 720)\n\tMETHODE_DE_W_RICHTER_D_HELICOIDALE.showMaximized()\n\t#METHODE_DE_W_RICHTER_D_HELICOIDALE.show()\ndef afficher_METHODE_MAAG_TASCHENBUCH_D_DROITE():\n\tMETHODE_MAAG_TASCHENBUCH_D_DROITE.setMinimumSize(1080, 720)",
        "detail": "GEARMASTER",
        "documentation": {}
    },
    {
        "label": "afficher_METHODE_DE_W_RICHTER_D_HELICOIDALE",
        "kind": 2,
        "importPath": "GEARMASTER",
        "description": "GEARMASTER",
        "peekOfCode": "def afficher_METHODE_DE_W_RICHTER_D_HELICOIDALE():\n\tMETHODE_DE_W_RICHTER_D_HELICOIDALE.setMinimumSize(1080, 720)\n\tMETHODE_DE_W_RICHTER_D_HELICOIDALE.showMaximized()\n\t#METHODE_DE_W_RICHTER_D_HELICOIDALE.show()\ndef afficher_METHODE_MAAG_TASCHENBUCH_D_DROITE():\n\tMETHODE_MAAG_TASCHENBUCH_D_DROITE.setMinimumSize(1080, 720)\n\tMETHODE_MAAG_TASCHENBUCH_D_DROITE.showMaximized()\n\t#METHODE_MAAG_TASCHENBUCH_D_DROITE.show()\ndef afficher_METHODE_MAAG_TASCHENBUCH_D_HELICOIDALE():\n\tMETHODE_MAAG_TASCHENBUCH_D_HELICOIDALE.setMinimumSize(1080, 720)",
        "detail": "GEARMASTER",
        "documentation": {}
    },
    {
        "label": "afficher_METHODE_MAAG_TASCHENBUCH_D_DROITE",
        "kind": 2,
        "importPath": "GEARMASTER",
        "description": "GEARMASTER",
        "peekOfCode": "def afficher_METHODE_MAAG_TASCHENBUCH_D_DROITE():\n\tMETHODE_MAAG_TASCHENBUCH_D_DROITE.setMinimumSize(1080, 720)\n\tMETHODE_MAAG_TASCHENBUCH_D_DROITE.showMaximized()\n\t#METHODE_MAAG_TASCHENBUCH_D_DROITE.show()\ndef afficher_METHODE_MAAG_TASCHENBUCH_D_HELICOIDALE():\n\tMETHODE_MAAG_TASCHENBUCH_D_HELICOIDALE.setMinimumSize(1080, 720)\n\tMETHODE_MAAG_TASCHENBUCH_D_HELICOIDALE.showMaximized()\n\t#METHODE_MAAG_TASCHENBUCH_D_HELICOIDALE.show()\ndef afficher_Denture_droite_deporteE():\n\tDenture_droite_deporteE.setMinimumSize(1080, 720)",
        "detail": "GEARMASTER",
        "documentation": {}
    },
    {
        "label": "afficher_METHODE_MAAG_TASCHENBUCH_D_HELICOIDALE",
        "kind": 2,
        "importPath": "GEARMASTER",
        "description": "GEARMASTER",
        "peekOfCode": "def afficher_METHODE_MAAG_TASCHENBUCH_D_HELICOIDALE():\n\tMETHODE_MAAG_TASCHENBUCH_D_HELICOIDALE.setMinimumSize(1080, 720)\n\tMETHODE_MAAG_TASCHENBUCH_D_HELICOIDALE.showMaximized()\n\t#METHODE_MAAG_TASCHENBUCH_D_HELICOIDALE.show()\ndef afficher_Denture_droite_deporteE():\n\tDenture_droite_deporteE.setMinimumSize(1080, 720)\n\tDenture_droite_deporteE.showMaximized()\n\t#Denture_droite_deporteE.show()\ndef afficher_Denture_droite_deporteIN():\n\tDenture_droite_deporteIN.setMinimumSize(1080, 720)",
        "detail": "GEARMASTER",
        "documentation": {}
    },
    {
        "label": "afficher_Denture_droite_deporteE",
        "kind": 2,
        "importPath": "GEARMASTER",
        "description": "GEARMASTER",
        "peekOfCode": "def afficher_Denture_droite_deporteE():\n\tDenture_droite_deporteE.setMinimumSize(1080, 720)\n\tDenture_droite_deporteE.showMaximized()\n\t#Denture_droite_deporteE.show()\ndef afficher_Denture_droite_deporteIN():\n\tDenture_droite_deporteIN.setMinimumSize(1080, 720)\n\tDenture_droite_deporteIN.showMaximized()\n\t#Denture_droite_deporteIN.show()\ndef afficher_Denture_droiteH_deporteIN():\n\tDenture_droiteH_deporteIN.setMinimumSize(1080, 720)",
        "detail": "GEARMASTER",
        "documentation": {}
    },
    {
        "label": "afficher_Denture_droite_deporteIN",
        "kind": 2,
        "importPath": "GEARMASTER",
        "description": "GEARMASTER",
        "peekOfCode": "def afficher_Denture_droite_deporteIN():\n\tDenture_droite_deporteIN.setMinimumSize(1080, 720)\n\tDenture_droite_deporteIN.showMaximized()\n\t#Denture_droite_deporteIN.show()\ndef afficher_Denture_droiteH_deporteIN():\n\tDenture_droiteH_deporteIN.setMinimumSize(1080, 720)\n\tDenture_droiteH_deporteIN.showMaximized()\n\t#Denture_droiteH_deporteIN.show()\ndef afficher_Denture_droiteH_deporteE():\n\tDenture_droiteH_deporteE.setMinimumSize(1080, 720)",
        "detail": "GEARMASTER",
        "documentation": {}
    },
    {
        "label": "afficher_Denture_droiteH_deporteIN",
        "kind": 2,
        "importPath": "GEARMASTER",
        "description": "GEARMASTER",
        "peekOfCode": "def afficher_Denture_droiteH_deporteIN():\n\tDenture_droiteH_deporteIN.setMinimumSize(1080, 720)\n\tDenture_droiteH_deporteIN.showMaximized()\n\t#Denture_droiteH_deporteIN.show()\ndef afficher_Denture_droiteH_deporteE():\n\tDenture_droiteH_deporteE.setMinimumSize(1080, 720)\n\tDenture_droiteH_deporteE.showMaximized()\n\t#Denture_droiteH_deporteE.show()\ndef afficher_Denture_droite_deporteEX_VARIATION_ANT_NON_IMPOSE():\n\tDenture_droite_deporteEX_VARIATION_ANT_NON_IMPOSE.setMinimumSize(1080, 720)",
        "detail": "GEARMASTER",
        "documentation": {}
    },
    {
        "label": "afficher_Denture_droiteH_deporteE",
        "kind": 2,
        "importPath": "GEARMASTER",
        "description": "GEARMASTER",
        "peekOfCode": "def afficher_Denture_droiteH_deporteE():\n\tDenture_droiteH_deporteE.setMinimumSize(1080, 720)\n\tDenture_droiteH_deporteE.showMaximized()\n\t#Denture_droiteH_deporteE.show()\ndef afficher_Denture_droite_deporteEX_VARIATION_ANT_NON_IMPOSE():\n\tDenture_droite_deporteEX_VARIATION_ANT_NON_IMPOSE.setMinimumSize(1080, 720)\n\tDenture_droite_deporteEX_VARIATION_ANT_NON_IMPOSE.showMaximized()\n\t#Denture_droite_deporteEX_VARIATION_ANT_NON_IMPOSE.show()\ndef afficher_Denture_droite_deporteIN_VARIATION_ANT_NON_IMPOSE():\n\tDenture_droite_deporteIN_VARIATION_ANT_NON_IMPOSE.setMinimumSize(1080, 720)",
        "detail": "GEARMASTER",
        "documentation": {}
    },
    {
        "label": "afficher_Denture_droite_deporteEX_VARIATION_ANT_NON_IMPOSE",
        "kind": 2,
        "importPath": "GEARMASTER",
        "description": "GEARMASTER",
        "peekOfCode": "def afficher_Denture_droite_deporteEX_VARIATION_ANT_NON_IMPOSE():\n\tDenture_droite_deporteEX_VARIATION_ANT_NON_IMPOSE.setMinimumSize(1080, 720)\n\tDenture_droite_deporteEX_VARIATION_ANT_NON_IMPOSE.showMaximized()\n\t#Denture_droite_deporteEX_VARIATION_ANT_NON_IMPOSE.show()\ndef afficher_Denture_droite_deporteIN_VARIATION_ANT_NON_IMPOSE():\n\tDenture_droite_deporteIN_VARIATION_ANT_NON_IMPOSE.setMinimumSize(1080, 720)\n\tDenture_droite_deporteIN_VARIATION_ANT_NON_IMPOSE.showMaximized()\n\t#Denture_droite_deporteIN_VARIATION_ANT_NON_IMPOSE.show()\ndef afficher_Denture_droiteH_deporteE_VARIATION_ANT_NON_IMPOSE():\n\tDenture_droiteH_deporteE_VARIATION_ANT_NON_IMPOSE.setMinimumSize(1080, 720)",
        "detail": "GEARMASTER",
        "documentation": {}
    },
    {
        "label": "afficher_Denture_droite_deporteIN_VARIATION_ANT_NON_IMPOSE",
        "kind": 2,
        "importPath": "GEARMASTER",
        "description": "GEARMASTER",
        "peekOfCode": "def afficher_Denture_droite_deporteIN_VARIATION_ANT_NON_IMPOSE():\n\tDenture_droite_deporteIN_VARIATION_ANT_NON_IMPOSE.setMinimumSize(1080, 720)\n\tDenture_droite_deporteIN_VARIATION_ANT_NON_IMPOSE.showMaximized()\n\t#Denture_droite_deporteIN_VARIATION_ANT_NON_IMPOSE.show()\ndef afficher_Denture_droiteH_deporteE_VARIATION_ANT_NON_IMPOSE():\n\tDenture_droiteH_deporteE_VARIATION_ANT_NON_IMPOSE.setMinimumSize(1080, 720)\n\tDenture_droiteH_deporteE_VARIATION_ANT_NON_IMPOSE.showMaximized()\n\t#Denture_droiteH_deporteE_VARIATION_ANT_NON_IMPOSE.show()\ndef afficher_Denture_droiteH_deporteIN_VARIATION_ANT_NON_IMPOSE():\n\tDenture_droiteH_deporteIN_VARIATION_ANT_NON_IMPOSE.setMinimumSize(1080, 720)",
        "detail": "GEARMASTER",
        "documentation": {}
    },
    {
        "label": "afficher_Denture_droiteH_deporteE_VARIATION_ANT_NON_IMPOSE",
        "kind": 2,
        "importPath": "GEARMASTER",
        "description": "GEARMASTER",
        "peekOfCode": "def afficher_Denture_droiteH_deporteE_VARIATION_ANT_NON_IMPOSE():\n\tDenture_droiteH_deporteE_VARIATION_ANT_NON_IMPOSE.setMinimumSize(1080, 720)\n\tDenture_droiteH_deporteE_VARIATION_ANT_NON_IMPOSE.showMaximized()\n\t#Denture_droiteH_deporteE_VARIATION_ANT_NON_IMPOSE.show()\ndef afficher_Denture_droiteH_deporteIN_VARIATION_ANT_NON_IMPOSE():\n\tDenture_droiteH_deporteIN_VARIATION_ANT_NON_IMPOSE.setMinimumSize(1080, 720)\n\tDenture_droiteH_deporteIN_VARIATION_ANT_NON_IMPOSE.showMaximized()\n\t#Denture_droiteH_deporteIN_VARIATION_ANT_NON_IMPOSE.show()\ndef afficher_Denture_droite_deporteEX_VARIATION_ENT_IMPOSE():\n\tDenture_droite_deporteEX_VARIATION_ENT_IMPOSE.setMinimumSize(1080, 720)",
        "detail": "GEARMASTER",
        "documentation": {}
    },
    {
        "label": "afficher_Denture_droiteH_deporteIN_VARIATION_ANT_NON_IMPOSE",
        "kind": 2,
        "importPath": "GEARMASTER",
        "description": "GEARMASTER",
        "peekOfCode": "def afficher_Denture_droiteH_deporteIN_VARIATION_ANT_NON_IMPOSE():\n\tDenture_droiteH_deporteIN_VARIATION_ANT_NON_IMPOSE.setMinimumSize(1080, 720)\n\tDenture_droiteH_deporteIN_VARIATION_ANT_NON_IMPOSE.showMaximized()\n\t#Denture_droiteH_deporteIN_VARIATION_ANT_NON_IMPOSE.show()\ndef afficher_Denture_droite_deporteEX_VARIATION_ENT_IMPOSE():\n\tDenture_droite_deporteEX_VARIATION_ENT_IMPOSE.setMinimumSize(1080, 720)\n\tDenture_droite_deporteEX_VARIATION_ENT_IMPOSE.showMaximized()\n\t#Denture_droite_deporteEX_VARIATION_ENT_IMPOSE.show()\ndef afficher_Denture_droite_deporteIN_VARIATION_ENT_IMPOSE():\n\tDenture_droite_deporteIN_VARIATION_ENT_IMPOSE.setMinimumSize(1080, 720)",
        "detail": "GEARMASTER",
        "documentation": {}
    },
    {
        "label": "afficher_Denture_droite_deporteEX_VARIATION_ENT_IMPOSE",
        "kind": 2,
        "importPath": "GEARMASTER",
        "description": "GEARMASTER",
        "peekOfCode": "def afficher_Denture_droite_deporteEX_VARIATION_ENT_IMPOSE():\n\tDenture_droite_deporteEX_VARIATION_ENT_IMPOSE.setMinimumSize(1080, 720)\n\tDenture_droite_deporteEX_VARIATION_ENT_IMPOSE.showMaximized()\n\t#Denture_droite_deporteEX_VARIATION_ENT_IMPOSE.show()\ndef afficher_Denture_droite_deporteIN_VARIATION_ENT_IMPOSE():\n\tDenture_droite_deporteIN_VARIATION_ENT_IMPOSE.setMinimumSize(1080, 720)\n\tDenture_droite_deporteIN_VARIATION_ENT_IMPOSE.showMaximized()\n\t#Denture_droite_deporteIN_VARIATION_ENT_IMPOSE.show()\ndef afficher_Denture_droiteH_deporteE_VARIATION_ENT_IMPOSE():\n\tDenture_droiteH_deporteE_VARIATION_ENT_IMPOSE.setMinimumSize(1080, 720)",
        "detail": "GEARMASTER",
        "documentation": {}
    },
    {
        "label": "afficher_Denture_droite_deporteIN_VARIATION_ENT_IMPOSE",
        "kind": 2,
        "importPath": "GEARMASTER",
        "description": "GEARMASTER",
        "peekOfCode": "def afficher_Denture_droite_deporteIN_VARIATION_ENT_IMPOSE():\n\tDenture_droite_deporteIN_VARIATION_ENT_IMPOSE.setMinimumSize(1080, 720)\n\tDenture_droite_deporteIN_VARIATION_ENT_IMPOSE.showMaximized()\n\t#Denture_droite_deporteIN_VARIATION_ENT_IMPOSE.show()\ndef afficher_Denture_droiteH_deporteE_VARIATION_ENT_IMPOSE():\n\tDenture_droiteH_deporteE_VARIATION_ENT_IMPOSE.setMinimumSize(1080, 720)\n\tDenture_droiteH_deporteE_VARIATION_ENT_IMPOSE.showMaximized()\n\t#Denture_droiteH_deporteE_VARIATION_ENT_IMPOSE.show()\ndef afficher_Denture_droiteH_deporteIN_VARIATION_ENT_IMPOSE():\n\tDenture_droiteH_deporteIN_VARIATION_ENT_IMPOSE.setMinimumSize(1080, 720)",
        "detail": "GEARMASTER",
        "documentation": {}
    },
    {
        "label": "afficher_Denture_droiteH_deporteE_VARIATION_ENT_IMPOSE",
        "kind": 2,
        "importPath": "GEARMASTER",
        "description": "GEARMASTER",
        "peekOfCode": "def afficher_Denture_droiteH_deporteE_VARIATION_ENT_IMPOSE():\n\tDenture_droiteH_deporteE_VARIATION_ENT_IMPOSE.setMinimumSize(1080, 720)\n\tDenture_droiteH_deporteE_VARIATION_ENT_IMPOSE.showMaximized()\n\t#Denture_droiteH_deporteE_VARIATION_ENT_IMPOSE.show()\ndef afficher_Denture_droiteH_deporteIN_VARIATION_ENT_IMPOSE():\n\tDenture_droiteH_deporteIN_VARIATION_ENT_IMPOSE.setMinimumSize(1080, 720)\n\tDenture_droiteH_deporteIN_VARIATION_ENT_IMPOSE.showMaximized()\n\t#Denture_droiteH_deporteIN_VARIATION_ENT_IMPOSE.show()\n# FIN CHAPITRE 2\n# DEBUT CHAPITRE 3",
        "detail": "GEARMASTER",
        "documentation": {}
    },
    {
        "label": "afficher_Denture_droiteH_deporteIN_VARIATION_ENT_IMPOSE",
        "kind": 2,
        "importPath": "GEARMASTER",
        "description": "GEARMASTER",
        "peekOfCode": "def afficher_Denture_droiteH_deporteIN_VARIATION_ENT_IMPOSE():\n\tDenture_droiteH_deporteIN_VARIATION_ENT_IMPOSE.setMinimumSize(1080, 720)\n\tDenture_droiteH_deporteIN_VARIATION_ENT_IMPOSE.showMaximized()\n\t#Denture_droiteH_deporteIN_VARIATION_ENT_IMPOSE.show()\n# FIN CHAPITRE 2\n# DEBUT CHAPITRE 3\ndef afficher_ENGRENAGE_CONCOURANTE():\n\tENGRENAGE_CONCOURANTE.setMinimumSize(1080, 720)\n\tENGRENAGE_CONCOURANTE.showMaximized()\n\t#ENGRENAGE_CONCOURANTE.show()",
        "detail": "GEARMASTER",
        "documentation": {}
    },
    {
        "label": "afficher_ENGRENAGE_CONCOURANTE",
        "kind": 2,
        "importPath": "GEARMASTER",
        "description": "GEARMASTER",
        "peekOfCode": "def afficher_ENGRENAGE_CONCOURANTE():\n\tENGRENAGE_CONCOURANTE.setMinimumSize(1080, 720)\n\tENGRENAGE_CONCOURANTE.showMaximized()\n\t#ENGRENAGE_CONCOURANTE.show()\ndef afficher_ENGRENAGE_CONIQUE_DROIT_DENTURE_NORMALE():\n\tENGRENAGE_CONIQUE_DROIT_DENTURE_NORMALE.setMinimumSize(1080, 720)\n\tENGRENAGE_CONIQUE_DROIT_DENTURE_NORMALE.showMaximized()\n\t#ENGRENAGE_CONIQUE_DROIT_DENTURE_NORMALE.show()\ndef afficher_ENGRENAGE_CONIQUE_DROIT_DENTURE_DEPORTEE():\n\tENGRENAGE_CONIQUE_DROIT_DENTURE_DEPORTEE.setMinimumSize(1080, 720)",
        "detail": "GEARMASTER",
        "documentation": {}
    },
    {
        "label": "afficher_ENGRENAGE_CONIQUE_DROIT_DENTURE_NORMALE",
        "kind": 2,
        "importPath": "GEARMASTER",
        "description": "GEARMASTER",
        "peekOfCode": "def afficher_ENGRENAGE_CONIQUE_DROIT_DENTURE_NORMALE():\n\tENGRENAGE_CONIQUE_DROIT_DENTURE_NORMALE.setMinimumSize(1080, 720)\n\tENGRENAGE_CONIQUE_DROIT_DENTURE_NORMALE.showMaximized()\n\t#ENGRENAGE_CONIQUE_DROIT_DENTURE_NORMALE.show()\ndef afficher_ENGRENAGE_CONIQUE_DROIT_DENTURE_DEPORTEE():\n\tENGRENAGE_CONIQUE_DROIT_DENTURE_DEPORTEE.setMinimumSize(1080, 720)\n\tENGRENAGE_CONIQUE_DROIT_DENTURE_DEPORTEE.showMaximized()\n\t#ENGRENAGE_CONIQUE_DROIT_DENTURE_DEPORTEE.show()\ndef afficher_ENGRENAGE_CONIQUE_HELICOIDALE_NON_DEPORTEE():\n\tENGRENAGE_CONIQUE_HELICOIDALE_NON_DEPORTEE.setMinimumSize(1080, 720)",
        "detail": "GEARMASTER",
        "documentation": {}
    },
    {
        "label": "afficher_ENGRENAGE_CONIQUE_DROIT_DENTURE_DEPORTEE",
        "kind": 2,
        "importPath": "GEARMASTER",
        "description": "GEARMASTER",
        "peekOfCode": "def afficher_ENGRENAGE_CONIQUE_DROIT_DENTURE_DEPORTEE():\n\tENGRENAGE_CONIQUE_DROIT_DENTURE_DEPORTEE.setMinimumSize(1080, 720)\n\tENGRENAGE_CONIQUE_DROIT_DENTURE_DEPORTEE.showMaximized()\n\t#ENGRENAGE_CONIQUE_DROIT_DENTURE_DEPORTEE.show()\ndef afficher_ENGRENAGE_CONIQUE_HELICOIDALE_NON_DEPORTEE():\n\tENGRENAGE_CONIQUE_HELICOIDALE_NON_DEPORTEE.setMinimumSize(1080, 720)\n\tENGRENAGE_CONIQUE_HELICOIDALE_NON_DEPORTEE.showMaximized()\n\t#ENGRENAGE_CONIQUE_HELICOIDALE_NON_DEPORTEE.show()\ndef afficher_ENGRENAGE_CONIQUE_HELICOIDALE_DEPORTEE():\n\tENGRENAGE_CONIQUE_HELICOIDALE_DEPORTEE.setMinimumSize(1080, 720)",
        "detail": "GEARMASTER",
        "documentation": {}
    },
    {
        "label": "afficher_ENGRENAGE_CONIQUE_HELICOIDALE_NON_DEPORTEE",
        "kind": 2,
        "importPath": "GEARMASTER",
        "description": "GEARMASTER",
        "peekOfCode": "def afficher_ENGRENAGE_CONIQUE_HELICOIDALE_NON_DEPORTEE():\n\tENGRENAGE_CONIQUE_HELICOIDALE_NON_DEPORTEE.setMinimumSize(1080, 720)\n\tENGRENAGE_CONIQUE_HELICOIDALE_NON_DEPORTEE.showMaximized()\n\t#ENGRENAGE_CONIQUE_HELICOIDALE_NON_DEPORTEE.show()\ndef afficher_ENGRENAGE_CONIQUE_HELICOIDALE_DEPORTEE():\n\tENGRENAGE_CONIQUE_HELICOIDALE_DEPORTEE.setMinimumSize(1080, 720)\n\tENGRENAGE_CONIQUE_HELICOIDALE_DEPORTEE.showMaximized()\n\t#ENGRENAGE_CONIQUE_HELICOIDALE_DEPORTEE.show()\ndef afficher_ROUE_VIS_SANS_FIN():\n\tROUE_VIS_SANS_FIN.setMinimumSize(1080, 720)",
        "detail": "GEARMASTER",
        "documentation": {}
    },
    {
        "label": "afficher_ENGRENAGE_CONIQUE_HELICOIDALE_DEPORTEE",
        "kind": 2,
        "importPath": "GEARMASTER",
        "description": "GEARMASTER",
        "peekOfCode": "def afficher_ENGRENAGE_CONIQUE_HELICOIDALE_DEPORTEE():\n\tENGRENAGE_CONIQUE_HELICOIDALE_DEPORTEE.setMinimumSize(1080, 720)\n\tENGRENAGE_CONIQUE_HELICOIDALE_DEPORTEE.showMaximized()\n\t#ENGRENAGE_CONIQUE_HELICOIDALE_DEPORTEE.show()\ndef afficher_ROUE_VIS_SANS_FIN():\n\tROUE_VIS_SANS_FIN.setMinimumSize(1080, 720)\n\tROUE_VIS_SANS_FIN.showMaximized()\n\t#ROUE_VIS_SANS_FIN.show()\n# FIN CHAPITRE 3\n# DEBUT CHAPITRE 4",
        "detail": "GEARMASTER",
        "documentation": {}
    },
    {
        "label": "afficher_ROUE_VIS_SANS_FIN",
        "kind": 2,
        "importPath": "GEARMASTER",
        "description": "GEARMASTER",
        "peekOfCode": "def afficher_ROUE_VIS_SANS_FIN():\n\tROUE_VIS_SANS_FIN.setMinimumSize(1080, 720)\n\tROUE_VIS_SANS_FIN.showMaximized()\n\t#ROUE_VIS_SANS_FIN.show()\n# FIN CHAPITRE 3\n# DEBUT CHAPITRE 4\ndef afficher_RESISTANCES_EFFORTS():\n\tRESISTANCE_EFFORT.setMinimumSize(1080, 720)\n\tRESISTANCE_EFFORT.showMaximized()\ndef afficher_LES_EFFORTS_SUR_DENTS():",
        "detail": "GEARMASTER",
        "documentation": {}
    },
    {
        "label": "afficher_RESISTANCES_EFFORTS",
        "kind": 2,
        "importPath": "GEARMASTER",
        "description": "GEARMASTER",
        "peekOfCode": "def afficher_RESISTANCES_EFFORTS():\n\tRESISTANCE_EFFORT.setMinimumSize(1080, 720)\n\tRESISTANCE_EFFORT.showMaximized()\ndef afficher_LES_EFFORTS_SUR_DENTS():\n\tLES_EFFORTS_SUR_DENTS.setMinimumSize(1080, 720)\n\tLES_EFFORTS_SUR_DENTS.showMaximized()\ndef afficher_DENTURE_DROITE_PARALLELE():\n\tDENTURE_DROITE_PARALLELE.setMinimumSize(1080, 720)\n\tDENTURE_DROITE_PARALLELE.showMaximized()\ndef afficher_DENTURE_HELICOIDALE_PARALLELE():",
        "detail": "GEARMASTER",
        "documentation": {}
    },
    {
        "label": "afficher_LES_EFFORTS_SUR_DENTS",
        "kind": 2,
        "importPath": "GEARMASTER",
        "description": "GEARMASTER",
        "peekOfCode": "def afficher_LES_EFFORTS_SUR_DENTS():\n\tLES_EFFORTS_SUR_DENTS.setMinimumSize(1080, 720)\n\tLES_EFFORTS_SUR_DENTS.showMaximized()\ndef afficher_DENTURE_DROITE_PARALLELE():\n\tDENTURE_DROITE_PARALLELE.setMinimumSize(1080, 720)\n\tDENTURE_DROITE_PARALLELE.showMaximized()\ndef afficher_DENTURE_HELICOIDALE_PARALLELE():\n\tDENTURE_HELICOIDALE_PARALLELE.setMinimumSize(1080, 720)\n\tDENTURE_HELICOIDALE_PARALLELE.showMaximized()\ndef afficher_DENTURE_CONIQUE():",
        "detail": "GEARMASTER",
        "documentation": {}
    },
    {
        "label": "afficher_DENTURE_DROITE_PARALLELE",
        "kind": 2,
        "importPath": "GEARMASTER",
        "description": "GEARMASTER",
        "peekOfCode": "def afficher_DENTURE_DROITE_PARALLELE():\n\tDENTURE_DROITE_PARALLELE.setMinimumSize(1080, 720)\n\tDENTURE_DROITE_PARALLELE.showMaximized()\ndef afficher_DENTURE_HELICOIDALE_PARALLELE():\n\tDENTURE_HELICOIDALE_PARALLELE.setMinimumSize(1080, 720)\n\tDENTURE_HELICOIDALE_PARALLELE.showMaximized()\ndef afficher_DENTURE_CONIQUE():\n\tDENTURE_CONIQUE.setMinimumSize(1080, 720)\n\tDENTURE_CONIQUE.showMaximized()\ndef afficher_LES_EFFORTS_ROUE_ET_VIS():",
        "detail": "GEARMASTER",
        "documentation": {}
    },
    {
        "label": "afficher_DENTURE_HELICOIDALE_PARALLELE",
        "kind": 2,
        "importPath": "GEARMASTER",
        "description": "GEARMASTER",
        "peekOfCode": "def afficher_DENTURE_HELICOIDALE_PARALLELE():\n\tDENTURE_HELICOIDALE_PARALLELE.setMinimumSize(1080, 720)\n\tDENTURE_HELICOIDALE_PARALLELE.showMaximized()\ndef afficher_DENTURE_CONIQUE():\n\tDENTURE_CONIQUE.setMinimumSize(1080, 720)\n\tDENTURE_CONIQUE.showMaximized()\ndef afficher_LES_EFFORTS_ROUE_ET_VIS():\n\tLES_EFFORTS_ROUE_ET_VIS.setMinimumSize(1080, 720)\n\tLES_EFFORTS_ROUE_ET_VIS.showMaximized()\ndef afficher_RESISTANCE_ENGRENAGE_PARALLELE():",
        "detail": "GEARMASTER",
        "documentation": {}
    },
    {
        "label": "afficher_DENTURE_CONIQUE",
        "kind": 2,
        "importPath": "GEARMASTER",
        "description": "GEARMASTER",
        "peekOfCode": "def afficher_DENTURE_CONIQUE():\n\tDENTURE_CONIQUE.setMinimumSize(1080, 720)\n\tDENTURE_CONIQUE.showMaximized()\ndef afficher_LES_EFFORTS_ROUE_ET_VIS():\n\tLES_EFFORTS_ROUE_ET_VIS.setMinimumSize(1080, 720)\n\tLES_EFFORTS_ROUE_ET_VIS.showMaximized()\ndef afficher_RESISTANCE_ENGRENAGE_PARALLELE():\n\tRESISTANCE_ENGRENAGE_PARALLELE.setMinimumSize(1080, 720)\n\tRESISTANCE_ENGRENAGE_PARALLELE.showMaximized()\ndef afficher_RESISTANCE_DROITE_ENTRAXE_NON_IMPOSE():",
        "detail": "GEARMASTER",
        "documentation": {}
    },
    {
        "label": "afficher_LES_EFFORTS_ROUE_ET_VIS",
        "kind": 2,
        "importPath": "GEARMASTER",
        "description": "GEARMASTER",
        "peekOfCode": "def afficher_LES_EFFORTS_ROUE_ET_VIS():\n\tLES_EFFORTS_ROUE_ET_VIS.setMinimumSize(1080, 720)\n\tLES_EFFORTS_ROUE_ET_VIS.showMaximized()\ndef afficher_RESISTANCE_ENGRENAGE_PARALLELE():\n\tRESISTANCE_ENGRENAGE_PARALLELE.setMinimumSize(1080, 720)\n\tRESISTANCE_ENGRENAGE_PARALLELE.showMaximized()\ndef afficher_RESISTANCE_DROITE_ENTRAXE_NON_IMPOSE():\n\tRESISTANCE_DROITE_ENTRAXE_NON_IMPOSE.setMinimumSize(1080, 720)\n\tRESISTANCE_DROITE_ENTRAXE_NON_IMPOSE.showMaximized()\ndef afficher_RESISTANCE_DROITE_AVEC_ENTRAXE_IMPOSE():",
        "detail": "GEARMASTER",
        "documentation": {}
    },
    {
        "label": "afficher_RESISTANCE_ENGRENAGE_PARALLELE",
        "kind": 2,
        "importPath": "GEARMASTER",
        "description": "GEARMASTER",
        "peekOfCode": "def afficher_RESISTANCE_ENGRENAGE_PARALLELE():\n\tRESISTANCE_ENGRENAGE_PARALLELE.setMinimumSize(1080, 720)\n\tRESISTANCE_ENGRENAGE_PARALLELE.showMaximized()\ndef afficher_RESISTANCE_DROITE_ENTRAXE_NON_IMPOSE():\n\tRESISTANCE_DROITE_ENTRAXE_NON_IMPOSE.setMinimumSize(1080, 720)\n\tRESISTANCE_DROITE_ENTRAXE_NON_IMPOSE.showMaximized()\ndef afficher_RESISTANCE_DROITE_AVEC_ENTRAXE_IMPOSE():\n\tRESISTANCE_DROITE_AVEC_ENTRAXE_IMPOSE.setMinimumSize(1080, 720)\n\tRESISTANCE_DROITE_AVEC_ENTRAXE_IMPOSE.showMaximized()\ndef afficher_RESISTANCE_HELICOI_ENTRAXE_NON_IMPOSE():",
        "detail": "GEARMASTER",
        "documentation": {}
    },
    {
        "label": "afficher_RESISTANCE_DROITE_ENTRAXE_NON_IMPOSE",
        "kind": 2,
        "importPath": "GEARMASTER",
        "description": "GEARMASTER",
        "peekOfCode": "def afficher_RESISTANCE_DROITE_ENTRAXE_NON_IMPOSE():\n\tRESISTANCE_DROITE_ENTRAXE_NON_IMPOSE.setMinimumSize(1080, 720)\n\tRESISTANCE_DROITE_ENTRAXE_NON_IMPOSE.showMaximized()\ndef afficher_RESISTANCE_DROITE_AVEC_ENTRAXE_IMPOSE():\n\tRESISTANCE_DROITE_AVEC_ENTRAXE_IMPOSE.setMinimumSize(1080, 720)\n\tRESISTANCE_DROITE_AVEC_ENTRAXE_IMPOSE.showMaximized()\ndef afficher_RESISTANCE_HELICOI_ENTRAXE_NON_IMPOSE():\n\tRESISTANCE_HELICOI_ENTRAXE_NON_IMPOSE.setMinimumSize(1080, 720)\n\tRESISTANCE_HELICOI_ENTRAXE_NON_IMPOSE.showMaximized()\ndef afficher_RESISTANCE_HELICOI_ENTRAXE_IMPOSE():",
        "detail": "GEARMASTER",
        "documentation": {}
    },
    {
        "label": "afficher_RESISTANCE_DROITE_AVEC_ENTRAXE_IMPOSE",
        "kind": 2,
        "importPath": "GEARMASTER",
        "description": "GEARMASTER",
        "peekOfCode": "def afficher_RESISTANCE_DROITE_AVEC_ENTRAXE_IMPOSE():\n\tRESISTANCE_DROITE_AVEC_ENTRAXE_IMPOSE.setMinimumSize(1080, 720)\n\tRESISTANCE_DROITE_AVEC_ENTRAXE_IMPOSE.showMaximized()\ndef afficher_RESISTANCE_HELICOI_ENTRAXE_NON_IMPOSE():\n\tRESISTANCE_HELICOI_ENTRAXE_NON_IMPOSE.setMinimumSize(1080, 720)\n\tRESISTANCE_HELICOI_ENTRAXE_NON_IMPOSE.showMaximized()\ndef afficher_RESISTANCE_HELICOI_ENTRAXE_IMPOSE():\n\tRESISTANCE_HELICOI_ENTRAXE_IMPOSE.setMinimumSize(1080, 720)\n\tRESISTANCE_HELICOI_ENTRAXE_IMPOSE.showMaximized()\n# CREATION DE LA FENETRE MENU",
        "detail": "GEARMASTER",
        "documentation": {}
    },
    {
        "label": "afficher_RESISTANCE_HELICOI_ENTRAXE_NON_IMPOSE",
        "kind": 2,
        "importPath": "GEARMASTER",
        "description": "GEARMASTER",
        "peekOfCode": "def afficher_RESISTANCE_HELICOI_ENTRAXE_NON_IMPOSE():\n\tRESISTANCE_HELICOI_ENTRAXE_NON_IMPOSE.setMinimumSize(1080, 720)\n\tRESISTANCE_HELICOI_ENTRAXE_NON_IMPOSE.showMaximized()\ndef afficher_RESISTANCE_HELICOI_ENTRAXE_IMPOSE():\n\tRESISTANCE_HELICOI_ENTRAXE_IMPOSE.setMinimumSize(1080, 720)\n\tRESISTANCE_HELICOI_ENTRAXE_IMPOSE.showMaximized()\n# CREATION DE LA FENETRE MENU\napp = QtWidgets.QApplication(sys.argv)\nLOGICIEL_DE_CALCUL = QtWidgets.QMainWindow()\nui = Ui_LOGICIEL_DE_CALCUL()",
        "detail": "GEARMASTER",
        "documentation": {}
    },
    {
        "label": "afficher_RESISTANCE_HELICOI_ENTRAXE_IMPOSE",
        "kind": 2,
        "importPath": "GEARMASTER",
        "description": "GEARMASTER",
        "peekOfCode": "def afficher_RESISTANCE_HELICOI_ENTRAXE_IMPOSE():\n\tRESISTANCE_HELICOI_ENTRAXE_IMPOSE.setMinimumSize(1080, 720)\n\tRESISTANCE_HELICOI_ENTRAXE_IMPOSE.showMaximized()\n# CREATION DE LA FENETRE MENU\napp = QtWidgets.QApplication(sys.argv)\nLOGICIEL_DE_CALCUL = QtWidgets.QMainWindow()\nui = Ui_LOGICIEL_DE_CALCUL()\nui.setupUi(LOGICIEL_DE_CALCUL)\nui.pushButton_2.clicked.connect(retour)\n# creation de la fenetre_2",
        "detail": "GEARMASTER",
        "documentation": {}
    },
    {
        "label": "app",
        "kind": 5,
        "importPath": "GEARMASTER",
        "description": "GEARMASTER",
        "peekOfCode": "app = QtWidgets.QApplication(sys.argv)\nLOGICIEL_DE_CALCUL = QtWidgets.QMainWindow()\nui = Ui_LOGICIEL_DE_CALCUL()\nui.setupUi(LOGICIEL_DE_CALCUL)\nui.pushButton_2.clicked.connect(retour)\n# creation de la fenetre_2\ndifferent_type_engrenage = QtWidgets.QWidget()\nuifenetre_2 = Ui_different_type_engrenage()\nuifenetre_2.setupUi(different_type_engrenage)\nuifenetre_2.bouton_retour_ch11.clicked.connect(premier_fenetre)",
        "detail": "GEARMASTER",
        "documentation": {}
    },
    {
        "label": "LOGICIEL_DE_CALCUL",
        "kind": 5,
        "importPath": "GEARMASTER",
        "description": "GEARMASTER",
        "peekOfCode": "LOGICIEL_DE_CALCUL = QtWidgets.QMainWindow()\nui = Ui_LOGICIEL_DE_CALCUL()\nui.setupUi(LOGICIEL_DE_CALCUL)\nui.pushButton_2.clicked.connect(retour)\n# creation de la fenetre_2\ndifferent_type_engrenage = QtWidgets.QWidget()\nuifenetre_2 = Ui_different_type_engrenage()\nuifenetre_2.setupUi(different_type_engrenage)\nuifenetre_2.bouton_retour_ch11.clicked.connect(premier_fenetre)\n########### SOUS FENETRES DU 1ER CHAPITRE ###########",
        "detail": "GEARMASTER",
        "documentation": {}
    },
    {
        "label": "ui",
        "kind": 5,
        "importPath": "GEARMASTER",
        "description": "GEARMASTER",
        "peekOfCode": "ui = Ui_LOGICIEL_DE_CALCUL()\nui.setupUi(LOGICIEL_DE_CALCUL)\nui.pushButton_2.clicked.connect(retour)\n# creation de la fenetre_2\ndifferent_type_engrenage = QtWidgets.QWidget()\nuifenetre_2 = Ui_different_type_engrenage()\nuifenetre_2.setupUi(different_type_engrenage)\nuifenetre_2.bouton_retour_ch11.clicked.connect(premier_fenetre)\n########### SOUS FENETRES DU 1ER CHAPITRE ###########\n# creation de la fenetre denture droite exterieur",
        "detail": "GEARMASTER",
        "documentation": {}
    },
    {
        "label": "different_type_engrenage",
        "kind": 5,
        "importPath": "GEARMASTER",
        "description": "GEARMASTER",
        "peekOfCode": "different_type_engrenage = QtWidgets.QWidget()\nuifenetre_2 = Ui_different_type_engrenage()\nuifenetre_2.setupUi(different_type_engrenage)\nuifenetre_2.bouton_retour_ch11.clicked.connect(premier_fenetre)\n########### SOUS FENETRES DU 1ER CHAPITRE ###########\n# creation de la fenetre denture droite exterieur\ndenture_droite_ch1 = QtWidgets.QWidget()\nuidenture_droite = Ui_denture_droite_ch1()\nuidenture_droite.setupUi(denture_droite_ch1)\nuidenture_droite.pushButton_2.clicked.connect(retour_3)",
        "detail": "GEARMASTER",
        "documentation": {}
    },
    {
        "label": "uifenetre_2",
        "kind": 5,
        "importPath": "GEARMASTER",
        "description": "GEARMASTER",
        "peekOfCode": "uifenetre_2 = Ui_different_type_engrenage()\nuifenetre_2.setupUi(different_type_engrenage)\nuifenetre_2.bouton_retour_ch11.clicked.connect(premier_fenetre)\n########### SOUS FENETRES DU 1ER CHAPITRE ###########\n# creation de la fenetre denture droite exterieur\ndenture_droite_ch1 = QtWidgets.QWidget()\nuidenture_droite = Ui_denture_droite_ch1()\nuidenture_droite.setupUi(denture_droite_ch1)\nuidenture_droite.pushButton_2.clicked.connect(retour_3)\n# creation de la fenetre denture droite interieur",
        "detail": "GEARMASTER",
        "documentation": {}
    },
    {
        "label": "denture_droite_ch1",
        "kind": 5,
        "importPath": "GEARMASTER",
        "description": "GEARMASTER",
        "peekOfCode": "denture_droite_ch1 = QtWidgets.QWidget()\nuidenture_droite = Ui_denture_droite_ch1()\nuidenture_droite.setupUi(denture_droite_ch1)\nuidenture_droite.pushButton_2.clicked.connect(retour_3)\n# creation de la fenetre denture droite interieur\ndenture_droite_ch11 = QtWidgets.QWidget()\nuidenture_droite1 = Ui_denture_droite_ch11()\nuidenture_droite1.setupUi(denture_droite_ch11)\nuidenture_droite1.pushButton_2.clicked.connect(retour_5)\n# creation de la fenetre denture droite helicoidale exterieur",
        "detail": "GEARMASTER",
        "documentation": {}
    },
    {
        "label": "uidenture_droite",
        "kind": 5,
        "importPath": "GEARMASTER",
        "description": "GEARMASTER",
        "peekOfCode": "uidenture_droite = Ui_denture_droite_ch1()\nuidenture_droite.setupUi(denture_droite_ch1)\nuidenture_droite.pushButton_2.clicked.connect(retour_3)\n# creation de la fenetre denture droite interieur\ndenture_droite_ch11 = QtWidgets.QWidget()\nuidenture_droite1 = Ui_denture_droite_ch11()\nuidenture_droite1.setupUi(denture_droite_ch11)\nuidenture_droite1.pushButton_2.clicked.connect(retour_5)\n# creation de la fenetre denture droite helicoidale exterieur\ndenture_droite_hE_ch1 = QtWidgets.QWidget()",
        "detail": "GEARMASTER",
        "documentation": {}
    },
    {
        "label": "denture_droite_ch11",
        "kind": 5,
        "importPath": "GEARMASTER",
        "description": "GEARMASTER",
        "peekOfCode": "denture_droite_ch11 = QtWidgets.QWidget()\nuidenture_droite1 = Ui_denture_droite_ch11()\nuidenture_droite1.setupUi(denture_droite_ch11)\nuidenture_droite1.pushButton_2.clicked.connect(retour_5)\n# creation de la fenetre denture droite helicoidale exterieur\ndenture_droite_hE_ch1 = QtWidgets.QWidget()\nuidenture_droite_hE = Ui_denture_droite_hE_ch1()\nuidenture_droite_hE.setupUi(denture_droite_hE_ch1)\nuidenture_droite_hE.pushButton_2.clicked.connect(retour_4)\n# creation de la fenetre denture droite helicoidale interieur",
        "detail": "GEARMASTER",
        "documentation": {}
    },
    {
        "label": "uidenture_droite1",
        "kind": 5,
        "importPath": "GEARMASTER",
        "description": "GEARMASTER",
        "peekOfCode": "uidenture_droite1 = Ui_denture_droite_ch11()\nuidenture_droite1.setupUi(denture_droite_ch11)\nuidenture_droite1.pushButton_2.clicked.connect(retour_5)\n# creation de la fenetre denture droite helicoidale exterieur\ndenture_droite_hE_ch1 = QtWidgets.QWidget()\nuidenture_droite_hE = Ui_denture_droite_hE_ch1()\nuidenture_droite_hE.setupUi(denture_droite_hE_ch1)\nuidenture_droite_hE.pushButton_2.clicked.connect(retour_4)\n# creation de la fenetre denture droite helicoidale interieur\ndenture_droite_hI_ch1 = QtWidgets.QWidget()",
        "detail": "GEARMASTER",
        "documentation": {}
    },
    {
        "label": "denture_droite_hE_ch1",
        "kind": 5,
        "importPath": "GEARMASTER",
        "description": "GEARMASTER",
        "peekOfCode": "denture_droite_hE_ch1 = QtWidgets.QWidget()\nuidenture_droite_hE = Ui_denture_droite_hE_ch1()\nuidenture_droite_hE.setupUi(denture_droite_hE_ch1)\nuidenture_droite_hE.pushButton_2.clicked.connect(retour_4)\n# creation de la fenetre denture droite helicoidale interieur\ndenture_droite_hI_ch1 = QtWidgets.QWidget()\nuidenture_droite_hI = Ui_denture_droite_hI_ch1()\nuidenture_droite_hI.setupUi(denture_droite_hI_ch1)\nuidenture_droite_hI.pushButton_2.clicked.connect(retour_6)\n# creation de la fenetre case1",
        "detail": "GEARMASTER",
        "documentation": {}
    },
    {
        "label": "uidenture_droite_hE",
        "kind": 5,
        "importPath": "GEARMASTER",
        "description": "GEARMASTER",
        "peekOfCode": "uidenture_droite_hE = Ui_denture_droite_hE_ch1()\nuidenture_droite_hE.setupUi(denture_droite_hE_ch1)\nuidenture_droite_hE.pushButton_2.clicked.connect(retour_4)\n# creation de la fenetre denture droite helicoidale interieur\ndenture_droite_hI_ch1 = QtWidgets.QWidget()\nuidenture_droite_hI = Ui_denture_droite_hI_ch1()\nuidenture_droite_hI.setupUi(denture_droite_hI_ch1)\nuidenture_droite_hI.pushButton_2.clicked.connect(retour_6)\n# creation de la fenetre case1\nfenetre_case1 = QtWidgets.QWidget()",
        "detail": "GEARMASTER",
        "documentation": {}
    },
    {
        "label": "denture_droite_hI_ch1",
        "kind": 5,
        "importPath": "GEARMASTER",
        "description": "GEARMASTER",
        "peekOfCode": "denture_droite_hI_ch1 = QtWidgets.QWidget()\nuidenture_droite_hI = Ui_denture_droite_hI_ch1()\nuidenture_droite_hI.setupUi(denture_droite_hI_ch1)\nuidenture_droite_hI.pushButton_2.clicked.connect(retour_6)\n# creation de la fenetre case1\nfenetre_case1 = QtWidgets.QWidget()\nuicase1 = Ui_fenetre_case1()\nuicase1.setupUi(fenetre_case1)\nuicase1.bouton_retour_ch12.clicked.connect(retour_2)\n# creation de la fenetre calcul du module",
        "detail": "GEARMASTER",
        "documentation": {}
    },
    {
        "label": "uidenture_droite_hI",
        "kind": 5,
        "importPath": "GEARMASTER",
        "description": "GEARMASTER",
        "peekOfCode": "uidenture_droite_hI = Ui_denture_droite_hI_ch1()\nuidenture_droite_hI.setupUi(denture_droite_hI_ch1)\nuidenture_droite_hI.pushButton_2.clicked.connect(retour_6)\n# creation de la fenetre case1\nfenetre_case1 = QtWidgets.QWidget()\nuicase1 = Ui_fenetre_case1()\nuicase1.setupUi(fenetre_case1)\nuicase1.bouton_retour_ch12.clicked.connect(retour_2)\n# creation de la fenetre calcul du module\ncalcul_module = QtWidgets.QWidget()",
        "detail": "GEARMASTER",
        "documentation": {}
    },
    {
        "label": "fenetre_case1",
        "kind": 5,
        "importPath": "GEARMASTER",
        "description": "GEARMASTER",
        "peekOfCode": "fenetre_case1 = QtWidgets.QWidget()\nuicase1 = Ui_fenetre_case1()\nuicase1.setupUi(fenetre_case1)\nuicase1.bouton_retour_ch12.clicked.connect(retour_2)\n# creation de la fenetre calcul du module\ncalcul_module = QtWidgets.QWidget()\nuimodule = Ui_calcul_module()\nuimodule.setupUi(calcul_module)\nuimodule.bouton_retour_ch13.clicked.connect(retour_7)\n########### FIN DES SOUS FENETRES DU 1ER CHAPITRE ###########",
        "detail": "GEARMASTER",
        "documentation": {}
    },
    {
        "label": "uicase1",
        "kind": 5,
        "importPath": "GEARMASTER",
        "description": "GEARMASTER",
        "peekOfCode": "uicase1 = Ui_fenetre_case1()\nuicase1.setupUi(fenetre_case1)\nuicase1.bouton_retour_ch12.clicked.connect(retour_2)\n# creation de la fenetre calcul du module\ncalcul_module = QtWidgets.QWidget()\nuimodule = Ui_calcul_module()\nuimodule.setupUi(calcul_module)\nuimodule.bouton_retour_ch13.clicked.connect(retour_7)\n########### FIN DES SOUS FENETRES DU 1ER CHAPITRE ###########\n########### SOUS FENETRES DU 2ieme CHAPITRE ###########",
        "detail": "GEARMASTER",
        "documentation": {}
    },
    {
        "label": "calcul_module",
        "kind": 5,
        "importPath": "GEARMASTER",
        "description": "GEARMASTER",
        "peekOfCode": "calcul_module = QtWidgets.QWidget()\nuimodule = Ui_calcul_module()\nuimodule.setupUi(calcul_module)\nuimodule.bouton_retour_ch13.clicked.connect(retour_7)\n########### FIN DES SOUS FENETRES DU 1ER CHAPITRE ###########\n########### SOUS FENETRES DU 2ieme CHAPITRE ###########\n# creation de la fenetre engrenages deportes\nENGRENAGES_DEPORTEES = QtWidgets.QWidget()\nuiENGRENAGEDEPORTES = Ui_ENGRENAGES_DEPORTEES()\nuiENGRENAGEDEPORTES.setupUi(ENGRENAGES_DEPORTEES)",
        "detail": "GEARMASTER",
        "documentation": {}
    },
    {
        "label": "uimodule",
        "kind": 5,
        "importPath": "GEARMASTER",
        "description": "GEARMASTER",
        "peekOfCode": "uimodule = Ui_calcul_module()\nuimodule.setupUi(calcul_module)\nuimodule.bouton_retour_ch13.clicked.connect(retour_7)\n########### FIN DES SOUS FENETRES DU 1ER CHAPITRE ###########\n########### SOUS FENETRES DU 2ieme CHAPITRE ###########\n# creation de la fenetre engrenages deportes\nENGRENAGES_DEPORTEES = QtWidgets.QWidget()\nuiENGRENAGEDEPORTES = Ui_ENGRENAGES_DEPORTEES()\nuiENGRENAGEDEPORTES.setupUi(ENGRENAGES_DEPORTEES)\nuiENGRENAGEDEPORTES.pushButton_5_CH20.clicked.connect(retour_8)",
        "detail": "GEARMASTER",
        "documentation": {}
    },
    {
        "label": "ENGRENAGES_DEPORTEES",
        "kind": 5,
        "importPath": "GEARMASTER",
        "description": "GEARMASTER",
        "peekOfCode": "ENGRENAGES_DEPORTEES = QtWidgets.QWidget()\nuiENGRENAGEDEPORTES = Ui_ENGRENAGES_DEPORTEES()\nuiENGRENAGEDEPORTES.setupUi(ENGRENAGES_DEPORTEES)\nuiENGRENAGEDEPORTES.pushButton_5_CH20.clicked.connect(retour_8)\n# creation de la fenetre determination des deports sans variation d'entraxe\nDEPORTS_SANS_VARIATION_ENTRAXE = QtWidgets.QWidget()\nuiDEPORTS_SV_ENTRAXE = Ui_DEPORTS_SANS_VARIATION_ENTRAXE()\nuiDEPORTS_SV_ENTRAXE.setupUi(DEPORTS_SANS_VARIATION_ENTRAXE)\nuiDEPORTS_SV_ENTRAXE.pushButton_4_SANS_VARIATION.clicked.connect(retour_9)\n# creation de la fenetre determination des deports avec variation d'entraxe",
        "detail": "GEARMASTER",
        "documentation": {}
    },
    {
        "label": "uiENGRENAGEDEPORTES",
        "kind": 5,
        "importPath": "GEARMASTER",
        "description": "GEARMASTER",
        "peekOfCode": "uiENGRENAGEDEPORTES = Ui_ENGRENAGES_DEPORTEES()\nuiENGRENAGEDEPORTES.setupUi(ENGRENAGES_DEPORTEES)\nuiENGRENAGEDEPORTES.pushButton_5_CH20.clicked.connect(retour_8)\n# creation de la fenetre determination des deports sans variation d'entraxe\nDEPORTS_SANS_VARIATION_ENTRAXE = QtWidgets.QWidget()\nuiDEPORTS_SV_ENTRAXE = Ui_DEPORTS_SANS_VARIATION_ENTRAXE()\nuiDEPORTS_SV_ENTRAXE.setupUi(DEPORTS_SANS_VARIATION_ENTRAXE)\nuiDEPORTS_SV_ENTRAXE.pushButton_4_SANS_VARIATION.clicked.connect(retour_9)\n# creation de la fenetre determination des deports avec variation d'entraxe\nDEPORTS_AVEC_VARIATION_ENTRAXE = QtWidgets.QWidget()",
        "detail": "GEARMASTER",
        "documentation": {}
    },
    {
        "label": "DEPORTS_SANS_VARIATION_ENTRAXE",
        "kind": 5,
        "importPath": "GEARMASTER",
        "description": "GEARMASTER",
        "peekOfCode": "DEPORTS_SANS_VARIATION_ENTRAXE = QtWidgets.QWidget()\nuiDEPORTS_SV_ENTRAXE = Ui_DEPORTS_SANS_VARIATION_ENTRAXE()\nuiDEPORTS_SV_ENTRAXE.setupUi(DEPORTS_SANS_VARIATION_ENTRAXE)\nuiDEPORTS_SV_ENTRAXE.pushButton_4_SANS_VARIATION.clicked.connect(retour_9)\n# creation de la fenetre determination des deports avec variation d'entraxe\nDEPORTS_AVEC_VARIATION_ENTRAXE = QtWidgets.QWidget()\nuiDEPORTS_AV_ENTRAXE = Ui_DEPORTS_AVEC_VARIATION_ENTRAXE()\nuiDEPORTS_AV_ENTRAXE.setupUi(DEPORTS_AVEC_VARIATION_ENTRAXE)\nuiDEPORTS_AV_ENTRAXE.pushButton_AVEC_VARIATION_7.clicked.connect(retour_10)\n# creation de la fenetre engrenage deportes sans variation d'entraxe",
        "detail": "GEARMASTER",
        "documentation": {}
    },
    {
        "label": "uiDEPORTS_SV_ENTRAXE",
        "kind": 5,
        "importPath": "GEARMASTER",
        "description": "GEARMASTER",
        "peekOfCode": "uiDEPORTS_SV_ENTRAXE = Ui_DEPORTS_SANS_VARIATION_ENTRAXE()\nuiDEPORTS_SV_ENTRAXE.setupUi(DEPORTS_SANS_VARIATION_ENTRAXE)\nuiDEPORTS_SV_ENTRAXE.pushButton_4_SANS_VARIATION.clicked.connect(retour_9)\n# creation de la fenetre determination des deports avec variation d'entraxe\nDEPORTS_AVEC_VARIATION_ENTRAXE = QtWidgets.QWidget()\nuiDEPORTS_AV_ENTRAXE = Ui_DEPORTS_AVEC_VARIATION_ENTRAXE()\nuiDEPORTS_AV_ENTRAXE.setupUi(DEPORTS_AVEC_VARIATION_ENTRAXE)\nuiDEPORTS_AV_ENTRAXE.pushButton_AVEC_VARIATION_7.clicked.connect(retour_10)\n# creation de la fenetre engrenage deportes sans variation d'entraxe\nSANS_VARIATION_ENTRAXE = QtWidgets.QWidget()",
        "detail": "GEARMASTER",
        "documentation": {}
    },
    {
        "label": "DEPORTS_AVEC_VARIATION_ENTRAXE",
        "kind": 5,
        "importPath": "GEARMASTER",
        "description": "GEARMASTER",
        "peekOfCode": "DEPORTS_AVEC_VARIATION_ENTRAXE = QtWidgets.QWidget()\nuiDEPORTS_AV_ENTRAXE = Ui_DEPORTS_AVEC_VARIATION_ENTRAXE()\nuiDEPORTS_AV_ENTRAXE.setupUi(DEPORTS_AVEC_VARIATION_ENTRAXE)\nuiDEPORTS_AV_ENTRAXE.pushButton_AVEC_VARIATION_7.clicked.connect(retour_10)\n# creation de la fenetre engrenage deportes sans variation d'entraxe\nSANS_VARIATION_ENTRAXE = QtWidgets.QWidget()\nuiSANS_V_ENTRAXE = Ui_SANS_VARIATION_ENTRAXE()\nuiSANS_V_ENTRAXE.setupUi(SANS_VARIATION_ENTRAXE)\nuiSANS_V_ENTRAXE.pushButton_9_CH22.clicked.connect(retour_11)\n# creation de la fenetre engrenage deportes avec variation d'entraxe",
        "detail": "GEARMASTER",
        "documentation": {}
    },
    {
        "label": "uiDEPORTS_AV_ENTRAXE",
        "kind": 5,
        "importPath": "GEARMASTER",
        "description": "GEARMASTER",
        "peekOfCode": "uiDEPORTS_AV_ENTRAXE = Ui_DEPORTS_AVEC_VARIATION_ENTRAXE()\nuiDEPORTS_AV_ENTRAXE.setupUi(DEPORTS_AVEC_VARIATION_ENTRAXE)\nuiDEPORTS_AV_ENTRAXE.pushButton_AVEC_VARIATION_7.clicked.connect(retour_10)\n# creation de la fenetre engrenage deportes sans variation d'entraxe\nSANS_VARIATION_ENTRAXE = QtWidgets.QWidget()\nuiSANS_V_ENTRAXE = Ui_SANS_VARIATION_ENTRAXE()\nuiSANS_V_ENTRAXE.setupUi(SANS_VARIATION_ENTRAXE)\nuiSANS_V_ENTRAXE.pushButton_9_CH22.clicked.connect(retour_11)\n# creation de la fenetre engrenage deportes avec variation d'entraxe\nVARIATION_ENTRAXE = QtWidgets.QWidget()",
        "detail": "GEARMASTER",
        "documentation": {}
    },
    {
        "label": "SANS_VARIATION_ENTRAXE",
        "kind": 5,
        "importPath": "GEARMASTER",
        "description": "GEARMASTER",
        "peekOfCode": "SANS_VARIATION_ENTRAXE = QtWidgets.QWidget()\nuiSANS_V_ENTRAXE = Ui_SANS_VARIATION_ENTRAXE()\nuiSANS_V_ENTRAXE.setupUi(SANS_VARIATION_ENTRAXE)\nuiSANS_V_ENTRAXE.pushButton_9_CH22.clicked.connect(retour_11)\n# creation de la fenetre engrenage deportes avec variation d'entraxe\nVARIATION_ENTRAXE = QtWidgets.QWidget()\nuiAVEC_V_ENTRAXE = Ui_VARIATION_ENTRAXE()\nuiAVEC_V_ENTRAXE.setupUi(VARIATION_ENTRAXE)\nuiAVEC_V_ENTRAXE.pushButton_9_CH21.clicked.connect(retour_12)\n# Fenetre Methode ISO sans variation d'entraxe",
        "detail": "GEARMASTER",
        "documentation": {}
    },
    {
        "label": "uiSANS_V_ENTRAXE",
        "kind": 5,
        "importPath": "GEARMASTER",
        "description": "GEARMASTER",
        "peekOfCode": "uiSANS_V_ENTRAXE = Ui_SANS_VARIATION_ENTRAXE()\nuiSANS_V_ENTRAXE.setupUi(SANS_VARIATION_ENTRAXE)\nuiSANS_V_ENTRAXE.pushButton_9_CH22.clicked.connect(retour_11)\n# creation de la fenetre engrenage deportes avec variation d'entraxe\nVARIATION_ENTRAXE = QtWidgets.QWidget()\nuiAVEC_V_ENTRAXE = Ui_VARIATION_ENTRAXE()\nuiAVEC_V_ENTRAXE.setupUi(VARIATION_ENTRAXE)\nuiAVEC_V_ENTRAXE.pushButton_9_CH21.clicked.connect(retour_12)\n# Fenetre Methode ISO sans variation d'entraxe\nMETHODE_ISO_SANS_VARIATION_ENTRAXE = QtWidgets.QWidget()",
        "detail": "GEARMASTER",
        "documentation": {}
    },
    {
        "label": "VARIATION_ENTRAXE",
        "kind": 5,
        "importPath": "GEARMASTER",
        "description": "GEARMASTER",
        "peekOfCode": "VARIATION_ENTRAXE = QtWidgets.QWidget()\nuiAVEC_V_ENTRAXE = Ui_VARIATION_ENTRAXE()\nuiAVEC_V_ENTRAXE.setupUi(VARIATION_ENTRAXE)\nuiAVEC_V_ENTRAXE.pushButton_9_CH21.clicked.connect(retour_12)\n# Fenetre Methode ISO sans variation d'entraxe\nMETHODE_ISO_SANS_VARIATION_ENTRAXE = QtWidgets.QWidget()\nuiMETHODE_ISO_SANS = Ui_METHODE_ISO_SANS_VARIATION_ENTRAXE()\nuiMETHODE_ISO_SANS.setupUi(METHODE_ISO_SANS_VARIATION_ENTRAXE)\nuiMETHODE_ISO_SANS.pushButton_2.clicked.connect(retour_13)\n# Fenetre METHODE DE MAAGTASCHENBUCH SANS VARIATION ENTRAXE",
        "detail": "GEARMASTER",
        "documentation": {}
    },
    {
        "label": "uiAVEC_V_ENTRAXE",
        "kind": 5,
        "importPath": "GEARMASTER",
        "description": "GEARMASTER",
        "peekOfCode": "uiAVEC_V_ENTRAXE = Ui_VARIATION_ENTRAXE()\nuiAVEC_V_ENTRAXE.setupUi(VARIATION_ENTRAXE)\nuiAVEC_V_ENTRAXE.pushButton_9_CH21.clicked.connect(retour_12)\n# Fenetre Methode ISO sans variation d'entraxe\nMETHODE_ISO_SANS_VARIATION_ENTRAXE = QtWidgets.QWidget()\nuiMETHODE_ISO_SANS = Ui_METHODE_ISO_SANS_VARIATION_ENTRAXE()\nuiMETHODE_ISO_SANS.setupUi(METHODE_ISO_SANS_VARIATION_ENTRAXE)\nuiMETHODE_ISO_SANS.pushButton_2.clicked.connect(retour_13)\n# Fenetre METHODE DE MAAGTASCHENBUCH SANS VARIATION ENTRAXE\nMETHODE_MAAGTASCHENBUCH_SANS_VARIATION_ENTRAXE = QtWidgets.QWidget()",
        "detail": "GEARMASTER",
        "documentation": {}
    },
    {
        "label": "METHODE_ISO_SANS_VARIATION_ENTRAXE",
        "kind": 5,
        "importPath": "GEARMASTER",
        "description": "GEARMASTER",
        "peekOfCode": "METHODE_ISO_SANS_VARIATION_ENTRAXE = QtWidgets.QWidget()\nuiMETHODE_ISO_SANS = Ui_METHODE_ISO_SANS_VARIATION_ENTRAXE()\nuiMETHODE_ISO_SANS.setupUi(METHODE_ISO_SANS_VARIATION_ENTRAXE)\nuiMETHODE_ISO_SANS.pushButton_2.clicked.connect(retour_13)\n# Fenetre METHODE DE MAAGTASCHENBUCH SANS VARIATION ENTRAXE\nMETHODE_MAAGTASCHENBUCH_SANS_VARIATION_ENTRAXE = QtWidgets.QWidget()\nuiMETHODE_MAAG_SANS = Ui_METHODE_MAAGTASCHENBUCH_SANS_VARIATION_ENTRAXE()\nuiMETHODE_MAAG_SANS.setupUi(METHODE_MAAGTASCHENBUCH_SANS_VARIATION_ENTRAXE)\nuiMETHODE_MAAG_SANS.pushButton_2.clicked.connect(retour_15)\n# Fenetre METHODE DE MAAGTASCHENBUCH SANS VARIATION ENTRAXE",
        "detail": "GEARMASTER",
        "documentation": {}
    },
    {
        "label": "uiMETHODE_ISO_SANS",
        "kind": 5,
        "importPath": "GEARMASTER",
        "description": "GEARMASTER",
        "peekOfCode": "uiMETHODE_ISO_SANS = Ui_METHODE_ISO_SANS_VARIATION_ENTRAXE()\nuiMETHODE_ISO_SANS.setupUi(METHODE_ISO_SANS_VARIATION_ENTRAXE)\nuiMETHODE_ISO_SANS.pushButton_2.clicked.connect(retour_13)\n# Fenetre METHODE DE MAAGTASCHENBUCH SANS VARIATION ENTRAXE\nMETHODE_MAAGTASCHENBUCH_SANS_VARIATION_ENTRAXE = QtWidgets.QWidget()\nuiMETHODE_MAAG_SANS = Ui_METHODE_MAAGTASCHENBUCH_SANS_VARIATION_ENTRAXE()\nuiMETHODE_MAAG_SANS.setupUi(METHODE_MAAGTASCHENBUCH_SANS_VARIATION_ENTRAXE)\nuiMETHODE_MAAG_SANS.pushButton_2.clicked.connect(retour_15)\n# Fenetre METHODE DE MAAGTASCHENBUCH SANS VARIATION ENTRAXE\nMETHODE_WRICHTER_SANS_VARIATION_ENTRAXE = QtWidgets.QWidget()",
        "detail": "GEARMASTER",
        "documentation": {}
    },
    {
        "label": "METHODE_MAAGTASCHENBUCH_SANS_VARIATION_ENTRAXE",
        "kind": 5,
        "importPath": "GEARMASTER",
        "description": "GEARMASTER",
        "peekOfCode": "METHODE_MAAGTASCHENBUCH_SANS_VARIATION_ENTRAXE = QtWidgets.QWidget()\nuiMETHODE_MAAG_SANS = Ui_METHODE_MAAGTASCHENBUCH_SANS_VARIATION_ENTRAXE()\nuiMETHODE_MAAG_SANS.setupUi(METHODE_MAAGTASCHENBUCH_SANS_VARIATION_ENTRAXE)\nuiMETHODE_MAAG_SANS.pushButton_2.clicked.connect(retour_15)\n# Fenetre METHODE DE MAAGTASCHENBUCH SANS VARIATION ENTRAXE\nMETHODE_WRICHTER_SANS_VARIATION_ENTRAXE = QtWidgets.QWidget()\nuiMETHODE_WRICHTER_SANS = Ui_METHODE_WRICHTER_SANS_VARIATION_ENTRAXE()\nuiMETHODE_WRICHTER_SANS.setupUi(METHODE_WRICHTER_SANS_VARIATION_ENTRAXE)\nuiMETHODE_WRICHTER_SANS.pushButton_2.clicked.connect(retour_14)\n# Fenetre METHODE ISO AVEC VARIATION D'ENTRAXE DENTURE DROITE",
        "detail": "GEARMASTER",
        "documentation": {}
    },
    {
        "label": "uiMETHODE_MAAG_SANS",
        "kind": 5,
        "importPath": "GEARMASTER",
        "description": "GEARMASTER",
        "peekOfCode": "uiMETHODE_MAAG_SANS = Ui_METHODE_MAAGTASCHENBUCH_SANS_VARIATION_ENTRAXE()\nuiMETHODE_MAAG_SANS.setupUi(METHODE_MAAGTASCHENBUCH_SANS_VARIATION_ENTRAXE)\nuiMETHODE_MAAG_SANS.pushButton_2.clicked.connect(retour_15)\n# Fenetre METHODE DE MAAGTASCHENBUCH SANS VARIATION ENTRAXE\nMETHODE_WRICHTER_SANS_VARIATION_ENTRAXE = QtWidgets.QWidget()\nuiMETHODE_WRICHTER_SANS = Ui_METHODE_WRICHTER_SANS_VARIATION_ENTRAXE()\nuiMETHODE_WRICHTER_SANS.setupUi(METHODE_WRICHTER_SANS_VARIATION_ENTRAXE)\nuiMETHODE_WRICHTER_SANS.pushButton_2.clicked.connect(retour_14)\n# Fenetre METHODE ISO AVEC VARIATION D'ENTRAXE DENTURE DROITE\nMETHODE_ISO_D_DROITE = QtWidgets.QWidget()",
        "detail": "GEARMASTER",
        "documentation": {}
    },
    {
        "label": "METHODE_WRICHTER_SANS_VARIATION_ENTRAXE",
        "kind": 5,
        "importPath": "GEARMASTER",
        "description": "GEARMASTER",
        "peekOfCode": "METHODE_WRICHTER_SANS_VARIATION_ENTRAXE = QtWidgets.QWidget()\nuiMETHODE_WRICHTER_SANS = Ui_METHODE_WRICHTER_SANS_VARIATION_ENTRAXE()\nuiMETHODE_WRICHTER_SANS.setupUi(METHODE_WRICHTER_SANS_VARIATION_ENTRAXE)\nuiMETHODE_WRICHTER_SANS.pushButton_2.clicked.connect(retour_14)\n# Fenetre METHODE ISO AVEC VARIATION D'ENTRAXE DENTURE DROITE\nMETHODE_ISO_D_DROITE = QtWidgets.QWidget()\nuiMETHODE_ISO_D = Ui_METHODE_ISO_D_DROITE()\nuiMETHODE_ISO_D.setupUi(METHODE_ISO_D_DROITE)\nuiMETHODE_ISO_D.pushButton_2.clicked.connect(retour_16)\n# Fenetre METHODE ISO AVEC VARIATION D'ENTRAXE HELICOIDALE",
        "detail": "GEARMASTER",
        "documentation": {}
    },
    {
        "label": "uiMETHODE_WRICHTER_SANS",
        "kind": 5,
        "importPath": "GEARMASTER",
        "description": "GEARMASTER",
        "peekOfCode": "uiMETHODE_WRICHTER_SANS = Ui_METHODE_WRICHTER_SANS_VARIATION_ENTRAXE()\nuiMETHODE_WRICHTER_SANS.setupUi(METHODE_WRICHTER_SANS_VARIATION_ENTRAXE)\nuiMETHODE_WRICHTER_SANS.pushButton_2.clicked.connect(retour_14)\n# Fenetre METHODE ISO AVEC VARIATION D'ENTRAXE DENTURE DROITE\nMETHODE_ISO_D_DROITE = QtWidgets.QWidget()\nuiMETHODE_ISO_D = Ui_METHODE_ISO_D_DROITE()\nuiMETHODE_ISO_D.setupUi(METHODE_ISO_D_DROITE)\nuiMETHODE_ISO_D.pushButton_2.clicked.connect(retour_16)\n# Fenetre METHODE ISO AVEC VARIATION D'ENTRAXE HELICOIDALE\nMETHODE_ISO_D_HELICOIDALE = QtWidgets.QWidget()",
        "detail": "GEARMASTER",
        "documentation": {}
    },
    {
        "label": "METHODE_ISO_D_DROITE",
        "kind": 5,
        "importPath": "GEARMASTER",
        "description": "GEARMASTER",
        "peekOfCode": "METHODE_ISO_D_DROITE = QtWidgets.QWidget()\nuiMETHODE_ISO_D = Ui_METHODE_ISO_D_DROITE()\nuiMETHODE_ISO_D.setupUi(METHODE_ISO_D_DROITE)\nuiMETHODE_ISO_D.pushButton_2.clicked.connect(retour_16)\n# Fenetre METHODE ISO AVEC VARIATION D'ENTRAXE HELICOIDALE\nMETHODE_ISO_D_HELICOIDALE = QtWidgets.QWidget()\nuiMETHODE_ISO_D_HELI = Ui_METHODE_ISO_D_HELICOIDALE()\nuiMETHODE_ISO_D_HELI.setupUi(METHODE_ISO_D_HELICOIDALE)\nuiMETHODE_ISO_D_HELI.pushButton_2.clicked.connect(retour_19)\n# Fenetre METHODE DE W.RICHTER AVEC VARIATION D'ENTRAXE DENTURE DROITE",
        "detail": "GEARMASTER",
        "documentation": {}
    },
    {
        "label": "uiMETHODE_ISO_D",
        "kind": 5,
        "importPath": "GEARMASTER",
        "description": "GEARMASTER",
        "peekOfCode": "uiMETHODE_ISO_D = Ui_METHODE_ISO_D_DROITE()\nuiMETHODE_ISO_D.setupUi(METHODE_ISO_D_DROITE)\nuiMETHODE_ISO_D.pushButton_2.clicked.connect(retour_16)\n# Fenetre METHODE ISO AVEC VARIATION D'ENTRAXE HELICOIDALE\nMETHODE_ISO_D_HELICOIDALE = QtWidgets.QWidget()\nuiMETHODE_ISO_D_HELI = Ui_METHODE_ISO_D_HELICOIDALE()\nuiMETHODE_ISO_D_HELI.setupUi(METHODE_ISO_D_HELICOIDALE)\nuiMETHODE_ISO_D_HELI.pushButton_2.clicked.connect(retour_19)\n# Fenetre METHODE DE W.RICHTER AVEC VARIATION D'ENTRAXE DENTURE DROITE\nMETHODE_W_RICHTER_D_DROITE = QtWidgets.QWidget()",
        "detail": "GEARMASTER",
        "documentation": {}
    },
    {
        "label": "METHODE_ISO_D_HELICOIDALE",
        "kind": 5,
        "importPath": "GEARMASTER",
        "description": "GEARMASTER",
        "peekOfCode": "METHODE_ISO_D_HELICOIDALE = QtWidgets.QWidget()\nuiMETHODE_ISO_D_HELI = Ui_METHODE_ISO_D_HELICOIDALE()\nuiMETHODE_ISO_D_HELI.setupUi(METHODE_ISO_D_HELICOIDALE)\nuiMETHODE_ISO_D_HELI.pushButton_2.clicked.connect(retour_19)\n# Fenetre METHODE DE W.RICHTER AVEC VARIATION D'ENTRAXE DENTURE DROITE\nMETHODE_W_RICHTER_D_DROITE = QtWidgets.QWidget()\nuiMETHODE_W_RICHTER_D = Ui_METHODE_W_RICHTER_D_DROITE()\nuiMETHODE_W_RICHTER_D.setupUi(METHODE_W_RICHTER_D_DROITE)\nuiMETHODE_W_RICHTER_D.pushButton_2.clicked.connect(retour_17)\n# Fenetre METHODE DE W.RICHTER AVEC VARIATION D'ENTRAXE DENTURE HELICOIDALE",
        "detail": "GEARMASTER",
        "documentation": {}
    },
    {
        "label": "uiMETHODE_ISO_D_HELI",
        "kind": 5,
        "importPath": "GEARMASTER",
        "description": "GEARMASTER",
        "peekOfCode": "uiMETHODE_ISO_D_HELI = Ui_METHODE_ISO_D_HELICOIDALE()\nuiMETHODE_ISO_D_HELI.setupUi(METHODE_ISO_D_HELICOIDALE)\nuiMETHODE_ISO_D_HELI.pushButton_2.clicked.connect(retour_19)\n# Fenetre METHODE DE W.RICHTER AVEC VARIATION D'ENTRAXE DENTURE DROITE\nMETHODE_W_RICHTER_D_DROITE = QtWidgets.QWidget()\nuiMETHODE_W_RICHTER_D = Ui_METHODE_W_RICHTER_D_DROITE()\nuiMETHODE_W_RICHTER_D.setupUi(METHODE_W_RICHTER_D_DROITE)\nuiMETHODE_W_RICHTER_D.pushButton_2.clicked.connect(retour_17)\n# Fenetre METHODE DE W.RICHTER AVEC VARIATION D'ENTRAXE DENTURE HELICOIDALE\nMETHODE_DE_W_RICHTER_D_HELICOIDALE = QtWidgets.QWidget()",
        "detail": "GEARMASTER",
        "documentation": {}
    },
    {
        "label": "METHODE_W_RICHTER_D_DROITE",
        "kind": 5,
        "importPath": "GEARMASTER",
        "description": "GEARMASTER",
        "peekOfCode": "METHODE_W_RICHTER_D_DROITE = QtWidgets.QWidget()\nuiMETHODE_W_RICHTER_D = Ui_METHODE_W_RICHTER_D_DROITE()\nuiMETHODE_W_RICHTER_D.setupUi(METHODE_W_RICHTER_D_DROITE)\nuiMETHODE_W_RICHTER_D.pushButton_2.clicked.connect(retour_17)\n# Fenetre METHODE DE W.RICHTER AVEC VARIATION D'ENTRAXE DENTURE HELICOIDALE\nMETHODE_DE_W_RICHTER_D_HELICOIDALE = QtWidgets.QWidget()\nuiMETHODE_DE_W_RICHTER_H = Ui_METHODE_DE_W_RICHTER_D_HELICOIDALE()\nuiMETHODE_DE_W_RICHTER_H.setupUi(METHODE_DE_W_RICHTER_D_HELICOIDALE)\nuiMETHODE_DE_W_RICHTER_H.pushButton_2.clicked.connect(retour_20)\n# Fenetre METHODE_MAAG_TASCHENBUCH AVEC VARIATION D'ENTRAXE DENTURE DROITE",
        "detail": "GEARMASTER",
        "documentation": {}
    },
    {
        "label": "uiMETHODE_W_RICHTER_D",
        "kind": 5,
        "importPath": "GEARMASTER",
        "description": "GEARMASTER",
        "peekOfCode": "uiMETHODE_W_RICHTER_D = Ui_METHODE_W_RICHTER_D_DROITE()\nuiMETHODE_W_RICHTER_D.setupUi(METHODE_W_RICHTER_D_DROITE)\nuiMETHODE_W_RICHTER_D.pushButton_2.clicked.connect(retour_17)\n# Fenetre METHODE DE W.RICHTER AVEC VARIATION D'ENTRAXE DENTURE HELICOIDALE\nMETHODE_DE_W_RICHTER_D_HELICOIDALE = QtWidgets.QWidget()\nuiMETHODE_DE_W_RICHTER_H = Ui_METHODE_DE_W_RICHTER_D_HELICOIDALE()\nuiMETHODE_DE_W_RICHTER_H.setupUi(METHODE_DE_W_RICHTER_D_HELICOIDALE)\nuiMETHODE_DE_W_RICHTER_H.pushButton_2.clicked.connect(retour_20)\n# Fenetre METHODE_MAAG_TASCHENBUCH AVEC VARIATION D'ENTRAXE DENTURE DROITE\nMETHODE_MAAG_TASCHENBUCH_D_DROITE = QtWidgets.QWidget()",
        "detail": "GEARMASTER",
        "documentation": {}
    },
    {
        "label": "METHODE_DE_W_RICHTER_D_HELICOIDALE",
        "kind": 5,
        "importPath": "GEARMASTER",
        "description": "GEARMASTER",
        "peekOfCode": "METHODE_DE_W_RICHTER_D_HELICOIDALE = QtWidgets.QWidget()\nuiMETHODE_DE_W_RICHTER_H = Ui_METHODE_DE_W_RICHTER_D_HELICOIDALE()\nuiMETHODE_DE_W_RICHTER_H.setupUi(METHODE_DE_W_RICHTER_D_HELICOIDALE)\nuiMETHODE_DE_W_RICHTER_H.pushButton_2.clicked.connect(retour_20)\n# Fenetre METHODE_MAAG_TASCHENBUCH AVEC VARIATION D'ENTRAXE DENTURE DROITE\nMETHODE_MAAG_TASCHENBUCH_D_DROITE = QtWidgets.QWidget()\nuiMETHODE_MAAG_D = Ui_METHODE_MAAG_TASCHENBUCH_D_DROITE()\nuiMETHODE_MAAG_D.setupUi(METHODE_MAAG_TASCHENBUCH_D_DROITE)\nuiMETHODE_MAAG_D.pushButton_2.clicked.connect(retour_18)\n# Fenetre METHODE_MAAG_TASCHENBUCH AVEC VARIATION D'ENTRAXE DENTURE HELICOIDALE",
        "detail": "GEARMASTER",
        "documentation": {}
    },
    {
        "label": "uiMETHODE_DE_W_RICHTER_H",
        "kind": 5,
        "importPath": "GEARMASTER",
        "description": "GEARMASTER",
        "peekOfCode": "uiMETHODE_DE_W_RICHTER_H = Ui_METHODE_DE_W_RICHTER_D_HELICOIDALE()\nuiMETHODE_DE_W_RICHTER_H.setupUi(METHODE_DE_W_RICHTER_D_HELICOIDALE)\nuiMETHODE_DE_W_RICHTER_H.pushButton_2.clicked.connect(retour_20)\n# Fenetre METHODE_MAAG_TASCHENBUCH AVEC VARIATION D'ENTRAXE DENTURE DROITE\nMETHODE_MAAG_TASCHENBUCH_D_DROITE = QtWidgets.QWidget()\nuiMETHODE_MAAG_D = Ui_METHODE_MAAG_TASCHENBUCH_D_DROITE()\nuiMETHODE_MAAG_D.setupUi(METHODE_MAAG_TASCHENBUCH_D_DROITE)\nuiMETHODE_MAAG_D.pushButton_2.clicked.connect(retour_18)\n# Fenetre METHODE_MAAG_TASCHENBUCH AVEC VARIATION D'ENTRAXE DENTURE HELICOIDALE\nMETHODE_MAAG_TASCHENBUCH_D_HELICOIDALE = QtWidgets.QWidget()",
        "detail": "GEARMASTER",
        "documentation": {}
    },
    {
        "label": "METHODE_MAAG_TASCHENBUCH_D_DROITE",
        "kind": 5,
        "importPath": "GEARMASTER",
        "description": "GEARMASTER",
        "peekOfCode": "METHODE_MAAG_TASCHENBUCH_D_DROITE = QtWidgets.QWidget()\nuiMETHODE_MAAG_D = Ui_METHODE_MAAG_TASCHENBUCH_D_DROITE()\nuiMETHODE_MAAG_D.setupUi(METHODE_MAAG_TASCHENBUCH_D_DROITE)\nuiMETHODE_MAAG_D.pushButton_2.clicked.connect(retour_18)\n# Fenetre METHODE_MAAG_TASCHENBUCH AVEC VARIATION D'ENTRAXE DENTURE HELICOIDALE\nMETHODE_MAAG_TASCHENBUCH_D_HELICOIDALE = QtWidgets.QWidget()\nuiMETHODE_MAAG_H = Ui_METHODE_MAAG_TASCHENBUCH_D_HELICOIDALE()\nuiMETHODE_MAAG_H.setupUi(METHODE_MAAG_TASCHENBUCH_D_HELICOIDALE)\nuiMETHODE_MAAG_H.pushButton_2.clicked.connect(retour_21)\n# fenetre denture droite deporte exterieur sans variation d'entraxe",
        "detail": "GEARMASTER",
        "documentation": {}
    },
    {
        "label": "uiMETHODE_MAAG_D",
        "kind": 5,
        "importPath": "GEARMASTER",
        "description": "GEARMASTER",
        "peekOfCode": "uiMETHODE_MAAG_D = Ui_METHODE_MAAG_TASCHENBUCH_D_DROITE()\nuiMETHODE_MAAG_D.setupUi(METHODE_MAAG_TASCHENBUCH_D_DROITE)\nuiMETHODE_MAAG_D.pushButton_2.clicked.connect(retour_18)\n# Fenetre METHODE_MAAG_TASCHENBUCH AVEC VARIATION D'ENTRAXE DENTURE HELICOIDALE\nMETHODE_MAAG_TASCHENBUCH_D_HELICOIDALE = QtWidgets.QWidget()\nuiMETHODE_MAAG_H = Ui_METHODE_MAAG_TASCHENBUCH_D_HELICOIDALE()\nuiMETHODE_MAAG_H.setupUi(METHODE_MAAG_TASCHENBUCH_D_HELICOIDALE)\nuiMETHODE_MAAG_H.pushButton_2.clicked.connect(retour_21)\n# fenetre denture droite deporte exterieur sans variation d'entraxe\nDenture_droite_deporteE = QtWidgets.QWidget()",
        "detail": "GEARMASTER",
        "documentation": {}
    },
    {
        "label": "METHODE_MAAG_TASCHENBUCH_D_HELICOIDALE",
        "kind": 5,
        "importPath": "GEARMASTER",
        "description": "GEARMASTER",
        "peekOfCode": "METHODE_MAAG_TASCHENBUCH_D_HELICOIDALE = QtWidgets.QWidget()\nuiMETHODE_MAAG_H = Ui_METHODE_MAAG_TASCHENBUCH_D_HELICOIDALE()\nuiMETHODE_MAAG_H.setupUi(METHODE_MAAG_TASCHENBUCH_D_HELICOIDALE)\nuiMETHODE_MAAG_H.pushButton_2.clicked.connect(retour_21)\n# fenetre denture droite deporte exterieur sans variation d'entraxe\nDenture_droite_deporteE = QtWidgets.QWidget()\nuiDenture_droite_deporteE = Ui_Denture_droite_deporteE()\nuiDenture_droite_deporteE.setupUi(Denture_droite_deporteE)\nuiDenture_droite_deporteE.pushButton_2.clicked.connect(retour_22)\n# fenetre denture droite deporte interieur sans variation d'entraxe",
        "detail": "GEARMASTER",
        "documentation": {}
    },
    {
        "label": "uiMETHODE_MAAG_H",
        "kind": 5,
        "importPath": "GEARMASTER",
        "description": "GEARMASTER",
        "peekOfCode": "uiMETHODE_MAAG_H = Ui_METHODE_MAAG_TASCHENBUCH_D_HELICOIDALE()\nuiMETHODE_MAAG_H.setupUi(METHODE_MAAG_TASCHENBUCH_D_HELICOIDALE)\nuiMETHODE_MAAG_H.pushButton_2.clicked.connect(retour_21)\n# fenetre denture droite deporte exterieur sans variation d'entraxe\nDenture_droite_deporteE = QtWidgets.QWidget()\nuiDenture_droite_deporteE = Ui_Denture_droite_deporteE()\nuiDenture_droite_deporteE.setupUi(Denture_droite_deporteE)\nuiDenture_droite_deporteE.pushButton_2.clicked.connect(retour_22)\n# fenetre denture droite deporte interieur sans variation d'entraxe\nDenture_droite_deporteIN = QtWidgets.QWidget()",
        "detail": "GEARMASTER",
        "documentation": {}
    },
    {
        "label": "Denture_droite_deporteE",
        "kind": 5,
        "importPath": "GEARMASTER",
        "description": "GEARMASTER",
        "peekOfCode": "Denture_droite_deporteE = QtWidgets.QWidget()\nuiDenture_droite_deporteE = Ui_Denture_droite_deporteE()\nuiDenture_droite_deporteE.setupUi(Denture_droite_deporteE)\nuiDenture_droite_deporteE.pushButton_2.clicked.connect(retour_22)\n# fenetre denture droite deporte interieur sans variation d'entraxe\nDenture_droite_deporteIN = QtWidgets.QWidget()\nuiDenture_droite_deporteIN = Ui_Denture_droite_deporteIN()\nuiDenture_droite_deporteIN.setupUi(Denture_droite_deporteIN)\nuiDenture_droite_deporteIN.pushButton_2.clicked.connect(retour_23)\n# fenetre denture helicoidale deporte interieur sans variation d'entraxe",
        "detail": "GEARMASTER",
        "documentation": {}
    },
    {
        "label": "uiDenture_droite_deporteE",
        "kind": 5,
        "importPath": "GEARMASTER",
        "description": "GEARMASTER",
        "peekOfCode": "uiDenture_droite_deporteE = Ui_Denture_droite_deporteE()\nuiDenture_droite_deporteE.setupUi(Denture_droite_deporteE)\nuiDenture_droite_deporteE.pushButton_2.clicked.connect(retour_22)\n# fenetre denture droite deporte interieur sans variation d'entraxe\nDenture_droite_deporteIN = QtWidgets.QWidget()\nuiDenture_droite_deporteIN = Ui_Denture_droite_deporteIN()\nuiDenture_droite_deporteIN.setupUi(Denture_droite_deporteIN)\nuiDenture_droite_deporteIN.pushButton_2.clicked.connect(retour_23)\n# fenetre denture helicoidale deporte interieur sans variation d'entraxe\nDenture_droiteH_deporteIN = QtWidgets.QWidget()",
        "detail": "GEARMASTER",
        "documentation": {}
    },
    {
        "label": "Denture_droite_deporteIN",
        "kind": 5,
        "importPath": "GEARMASTER",
        "description": "GEARMASTER",
        "peekOfCode": "Denture_droite_deporteIN = QtWidgets.QWidget()\nuiDenture_droite_deporteIN = Ui_Denture_droite_deporteIN()\nuiDenture_droite_deporteIN.setupUi(Denture_droite_deporteIN)\nuiDenture_droite_deporteIN.pushButton_2.clicked.connect(retour_23)\n# fenetre denture helicoidale deporte interieur sans variation d'entraxe\nDenture_droiteH_deporteIN = QtWidgets.QWidget()\nuiDenture_droiteH_deporteIN = Ui_Denture_droiteH_deporteIN()\nuiDenture_droiteH_deporteIN.setupUi(Denture_droiteH_deporteIN)\nuiDenture_droiteH_deporteIN.pushButton_2.clicked.connect(retour_24)\n# fenetre denture helicoidale deporte exterieur sans variation d'entraxe",
        "detail": "GEARMASTER",
        "documentation": {}
    },
    {
        "label": "uiDenture_droite_deporteIN",
        "kind": 5,
        "importPath": "GEARMASTER",
        "description": "GEARMASTER",
        "peekOfCode": "uiDenture_droite_deporteIN = Ui_Denture_droite_deporteIN()\nuiDenture_droite_deporteIN.setupUi(Denture_droite_deporteIN)\nuiDenture_droite_deporteIN.pushButton_2.clicked.connect(retour_23)\n# fenetre denture helicoidale deporte interieur sans variation d'entraxe\nDenture_droiteH_deporteIN = QtWidgets.QWidget()\nuiDenture_droiteH_deporteIN = Ui_Denture_droiteH_deporteIN()\nuiDenture_droiteH_deporteIN.setupUi(Denture_droiteH_deporteIN)\nuiDenture_droiteH_deporteIN.pushButton_2.clicked.connect(retour_24)\n# fenetre denture helicoidale deporte exterieur sans variation d'entraxe\nDenture_droiteH_deporteE = QtWidgets.QWidget()",
        "detail": "GEARMASTER",
        "documentation": {}
    },
    {
        "label": "Denture_droiteH_deporteIN",
        "kind": 5,
        "importPath": "GEARMASTER",
        "description": "GEARMASTER",
        "peekOfCode": "Denture_droiteH_deporteIN = QtWidgets.QWidget()\nuiDenture_droiteH_deporteIN = Ui_Denture_droiteH_deporteIN()\nuiDenture_droiteH_deporteIN.setupUi(Denture_droiteH_deporteIN)\nuiDenture_droiteH_deporteIN.pushButton_2.clicked.connect(retour_24)\n# fenetre denture helicoidale deporte exterieur sans variation d'entraxe\nDenture_droiteH_deporteE = QtWidgets.QWidget()\nuiDenture_droiteH_deporteE = Ui_Denture_droiteH_deporteE()\nuiDenture_droiteH_deporteE.setupUi(Denture_droiteH_deporteE)\nuiDenture_droiteH_deporteE.pushButton_2.clicked.connect(retour_25)\n# fenetre denture droite deporte exterieur avec variation d'entraxe (entraxe non impose)",
        "detail": "GEARMASTER",
        "documentation": {}
    },
    {
        "label": "uiDenture_droiteH_deporteIN",
        "kind": 5,
        "importPath": "GEARMASTER",
        "description": "GEARMASTER",
        "peekOfCode": "uiDenture_droiteH_deporteIN = Ui_Denture_droiteH_deporteIN()\nuiDenture_droiteH_deporteIN.setupUi(Denture_droiteH_deporteIN)\nuiDenture_droiteH_deporteIN.pushButton_2.clicked.connect(retour_24)\n# fenetre denture helicoidale deporte exterieur sans variation d'entraxe\nDenture_droiteH_deporteE = QtWidgets.QWidget()\nuiDenture_droiteH_deporteE = Ui_Denture_droiteH_deporteE()\nuiDenture_droiteH_deporteE.setupUi(Denture_droiteH_deporteE)\nuiDenture_droiteH_deporteE.pushButton_2.clicked.connect(retour_25)\n# fenetre denture droite deporte exterieur avec variation d'entraxe (entraxe non impose)\nDenture_droite_deporteEX_VARIATION_ANT_NON_IMPOSE = QtWidgets.QWidget()",
        "detail": "GEARMASTER",
        "documentation": {}
    },
    {
        "label": "Denture_droiteH_deporteE",
        "kind": 5,
        "importPath": "GEARMASTER",
        "description": "GEARMASTER",
        "peekOfCode": "Denture_droiteH_deporteE = QtWidgets.QWidget()\nuiDenture_droiteH_deporteE = Ui_Denture_droiteH_deporteE()\nuiDenture_droiteH_deporteE.setupUi(Denture_droiteH_deporteE)\nuiDenture_droiteH_deporteE.pushButton_2.clicked.connect(retour_25)\n# fenetre denture droite deporte exterieur avec variation d'entraxe (entraxe non impose)\nDenture_droite_deporteEX_VARIATION_ANT_NON_IMPOSE = QtWidgets.QWidget()\nuideporteEX_VARIATION_ANT_NON_IMPOSE = Ui_Denture_droite_deporteEX_VARIATION_ANT_NON_IMPOSE()\nuideporteEX_VARIATION_ANT_NON_IMPOSE.setupUi(Denture_droite_deporteEX_VARIATION_ANT_NON_IMPOSE)\nuideporteEX_VARIATION_ANT_NON_IMPOSE.pushButton_2.clicked.connect(retour_26)\n# fenetre denture droite deporte interieur avec variation d'entraxe (entraxe non impose)",
        "detail": "GEARMASTER",
        "documentation": {}
    },
    {
        "label": "uiDenture_droiteH_deporteE",
        "kind": 5,
        "importPath": "GEARMASTER",
        "description": "GEARMASTER",
        "peekOfCode": "uiDenture_droiteH_deporteE = Ui_Denture_droiteH_deporteE()\nuiDenture_droiteH_deporteE.setupUi(Denture_droiteH_deporteE)\nuiDenture_droiteH_deporteE.pushButton_2.clicked.connect(retour_25)\n# fenetre denture droite deporte exterieur avec variation d'entraxe (entraxe non impose)\nDenture_droite_deporteEX_VARIATION_ANT_NON_IMPOSE = QtWidgets.QWidget()\nuideporteEX_VARIATION_ANT_NON_IMPOSE = Ui_Denture_droite_deporteEX_VARIATION_ANT_NON_IMPOSE()\nuideporteEX_VARIATION_ANT_NON_IMPOSE.setupUi(Denture_droite_deporteEX_VARIATION_ANT_NON_IMPOSE)\nuideporteEX_VARIATION_ANT_NON_IMPOSE.pushButton_2.clicked.connect(retour_26)\n# fenetre denture droite deporte interieur avec variation d'entraxe (entraxe non impose)\nDenture_droite_deporteIN_VARIATION_ANT_NON_IMPOSE = QtWidgets.QWidget()",
        "detail": "GEARMASTER",
        "documentation": {}
    },
    {
        "label": "Denture_droite_deporteEX_VARIATION_ANT_NON_IMPOSE",
        "kind": 5,
        "importPath": "GEARMASTER",
        "description": "GEARMASTER",
        "peekOfCode": "Denture_droite_deporteEX_VARIATION_ANT_NON_IMPOSE = QtWidgets.QWidget()\nuideporteEX_VARIATION_ANT_NON_IMPOSE = Ui_Denture_droite_deporteEX_VARIATION_ANT_NON_IMPOSE()\nuideporteEX_VARIATION_ANT_NON_IMPOSE.setupUi(Denture_droite_deporteEX_VARIATION_ANT_NON_IMPOSE)\nuideporteEX_VARIATION_ANT_NON_IMPOSE.pushButton_2.clicked.connect(retour_26)\n# fenetre denture droite deporte interieur avec variation d'entraxe (entraxe non impose)\nDenture_droite_deporteIN_VARIATION_ANT_NON_IMPOSE = QtWidgets.QWidget()\nuideporteIN_VARIATION_ANT_NON_IMPOSE = Ui_Denture_droite_deporteIN_VARIATION_ANT_NON_IMPOSE()\nuideporteIN_VARIATION_ANT_NON_IMPOSE.setupUi(Denture_droite_deporteIN_VARIATION_ANT_NON_IMPOSE)\nuideporteIN_VARIATION_ANT_NON_IMPOSE.pushButton_2.clicked.connect(retour_27)\n# fenetre denture helicoidale deporte exterieur avec variation d'entraxe (entraxe non impose)",
        "detail": "GEARMASTER",
        "documentation": {}
    },
    {
        "label": "uideporteEX_VARIATION_ANT_NON_IMPOSE",
        "kind": 5,
        "importPath": "GEARMASTER",
        "description": "GEARMASTER",
        "peekOfCode": "uideporteEX_VARIATION_ANT_NON_IMPOSE = Ui_Denture_droite_deporteEX_VARIATION_ANT_NON_IMPOSE()\nuideporteEX_VARIATION_ANT_NON_IMPOSE.setupUi(Denture_droite_deporteEX_VARIATION_ANT_NON_IMPOSE)\nuideporteEX_VARIATION_ANT_NON_IMPOSE.pushButton_2.clicked.connect(retour_26)\n# fenetre denture droite deporte interieur avec variation d'entraxe (entraxe non impose)\nDenture_droite_deporteIN_VARIATION_ANT_NON_IMPOSE = QtWidgets.QWidget()\nuideporteIN_VARIATION_ANT_NON_IMPOSE = Ui_Denture_droite_deporteIN_VARIATION_ANT_NON_IMPOSE()\nuideporteIN_VARIATION_ANT_NON_IMPOSE.setupUi(Denture_droite_deporteIN_VARIATION_ANT_NON_IMPOSE)\nuideporteIN_VARIATION_ANT_NON_IMPOSE.pushButton_2.clicked.connect(retour_27)\n# fenetre denture helicoidale deporte exterieur avec variation d'entraxe (entraxe non impose)\nDenture_droiteH_deporteE_VARIATION_ANT_NON_IMPOSE = QtWidgets.QWidget()",
        "detail": "GEARMASTER",
        "documentation": {}
    },
    {
        "label": "Denture_droite_deporteIN_VARIATION_ANT_NON_IMPOSE",
        "kind": 5,
        "importPath": "GEARMASTER",
        "description": "GEARMASTER",
        "peekOfCode": "Denture_droite_deporteIN_VARIATION_ANT_NON_IMPOSE = QtWidgets.QWidget()\nuideporteIN_VARIATION_ANT_NON_IMPOSE = Ui_Denture_droite_deporteIN_VARIATION_ANT_NON_IMPOSE()\nuideporteIN_VARIATION_ANT_NON_IMPOSE.setupUi(Denture_droite_deporteIN_VARIATION_ANT_NON_IMPOSE)\nuideporteIN_VARIATION_ANT_NON_IMPOSE.pushButton_2.clicked.connect(retour_27)\n# fenetre denture helicoidale deporte exterieur avec variation d'entraxe (entraxe non impose)\nDenture_droiteH_deporteE_VARIATION_ANT_NON_IMPOSE = QtWidgets.QWidget()\nuiDenture_droiteH_deporteE_VARIATION = Ui_Denture_droiteH_deporteE_VARIATION_ANT_NON_IMPOSE()\nuiDenture_droiteH_deporteE_VARIATION.setupUi(Denture_droiteH_deporteE_VARIATION_ANT_NON_IMPOSE)\nuiDenture_droiteH_deporteE_VARIATION.pushButton_2.clicked.connect(retour_28)\n# fenetre denture helicoidale deporte interieur avec variation d'entraxe (entraxe non impose)",
        "detail": "GEARMASTER",
        "documentation": {}
    },
    {
        "label": "uideporteIN_VARIATION_ANT_NON_IMPOSE",
        "kind": 5,
        "importPath": "GEARMASTER",
        "description": "GEARMASTER",
        "peekOfCode": "uideporteIN_VARIATION_ANT_NON_IMPOSE = Ui_Denture_droite_deporteIN_VARIATION_ANT_NON_IMPOSE()\nuideporteIN_VARIATION_ANT_NON_IMPOSE.setupUi(Denture_droite_deporteIN_VARIATION_ANT_NON_IMPOSE)\nuideporteIN_VARIATION_ANT_NON_IMPOSE.pushButton_2.clicked.connect(retour_27)\n# fenetre denture helicoidale deporte exterieur avec variation d'entraxe (entraxe non impose)\nDenture_droiteH_deporteE_VARIATION_ANT_NON_IMPOSE = QtWidgets.QWidget()\nuiDenture_droiteH_deporteE_VARIATION = Ui_Denture_droiteH_deporteE_VARIATION_ANT_NON_IMPOSE()\nuiDenture_droiteH_deporteE_VARIATION.setupUi(Denture_droiteH_deporteE_VARIATION_ANT_NON_IMPOSE)\nuiDenture_droiteH_deporteE_VARIATION.pushButton_2.clicked.connect(retour_28)\n# fenetre denture helicoidale deporte interieur avec variation d'entraxe (entraxe non impose)\nDenture_droiteH_deporteIN_VARIATION_ANT_NON_IMPOSE = QtWidgets.QWidget()",
        "detail": "GEARMASTER",
        "documentation": {}
    },
    {
        "label": "Denture_droiteH_deporteE_VARIATION_ANT_NON_IMPOSE",
        "kind": 5,
        "importPath": "GEARMASTER",
        "description": "GEARMASTER",
        "peekOfCode": "Denture_droiteH_deporteE_VARIATION_ANT_NON_IMPOSE = QtWidgets.QWidget()\nuiDenture_droiteH_deporteE_VARIATION = Ui_Denture_droiteH_deporteE_VARIATION_ANT_NON_IMPOSE()\nuiDenture_droiteH_deporteE_VARIATION.setupUi(Denture_droiteH_deporteE_VARIATION_ANT_NON_IMPOSE)\nuiDenture_droiteH_deporteE_VARIATION.pushButton_2.clicked.connect(retour_28)\n# fenetre denture helicoidale deporte interieur avec variation d'entraxe (entraxe non impose)\nDenture_droiteH_deporteIN_VARIATION_ANT_NON_IMPOSE = QtWidgets.QWidget()\nuiDenture_droiteH_deporteIN_VARIATION = Ui_Denture_droiteH_deporteIN_VARIATION_ANT_NON_IMPOSE()\nuiDenture_droiteH_deporteIN_VARIATION.setupUi(Denture_droiteH_deporteIN_VARIATION_ANT_NON_IMPOSE)\nuiDenture_droiteH_deporteIN_VARIATION.pushButton_2.clicked.connect(retour_29)\n# fenetre denture droite deporte exterieur avec variation d'entraxe (entraxe impose)",
        "detail": "GEARMASTER",
        "documentation": {}
    },
    {
        "label": "uiDenture_droiteH_deporteE_VARIATION",
        "kind": 5,
        "importPath": "GEARMASTER",
        "description": "GEARMASTER",
        "peekOfCode": "uiDenture_droiteH_deporteE_VARIATION = Ui_Denture_droiteH_deporteE_VARIATION_ANT_NON_IMPOSE()\nuiDenture_droiteH_deporteE_VARIATION.setupUi(Denture_droiteH_deporteE_VARIATION_ANT_NON_IMPOSE)\nuiDenture_droiteH_deporteE_VARIATION.pushButton_2.clicked.connect(retour_28)\n# fenetre denture helicoidale deporte interieur avec variation d'entraxe (entraxe non impose)\nDenture_droiteH_deporteIN_VARIATION_ANT_NON_IMPOSE = QtWidgets.QWidget()\nuiDenture_droiteH_deporteIN_VARIATION = Ui_Denture_droiteH_deporteIN_VARIATION_ANT_NON_IMPOSE()\nuiDenture_droiteH_deporteIN_VARIATION.setupUi(Denture_droiteH_deporteIN_VARIATION_ANT_NON_IMPOSE)\nuiDenture_droiteH_deporteIN_VARIATION.pushButton_2.clicked.connect(retour_29)\n# fenetre denture droite deporte exterieur avec variation d'entraxe (entraxe impose)\nDenture_droite_deporteEX_VARIATION_ENT_IMPOSE = QtWidgets.QWidget()",
        "detail": "GEARMASTER",
        "documentation": {}
    },
    {
        "label": "Denture_droiteH_deporteIN_VARIATION_ANT_NON_IMPOSE",
        "kind": 5,
        "importPath": "GEARMASTER",
        "description": "GEARMASTER",
        "peekOfCode": "Denture_droiteH_deporteIN_VARIATION_ANT_NON_IMPOSE = QtWidgets.QWidget()\nuiDenture_droiteH_deporteIN_VARIATION = Ui_Denture_droiteH_deporteIN_VARIATION_ANT_NON_IMPOSE()\nuiDenture_droiteH_deporteIN_VARIATION.setupUi(Denture_droiteH_deporteIN_VARIATION_ANT_NON_IMPOSE)\nuiDenture_droiteH_deporteIN_VARIATION.pushButton_2.clicked.connect(retour_29)\n# fenetre denture droite deporte exterieur avec variation d'entraxe (entraxe impose)\nDenture_droite_deporteEX_VARIATION_ENT_IMPOSE = QtWidgets.QWidget()\nuiDenture_droiteEX_ENTRAXE_IMPOSE = Ui_Denture_droite_deporteEX_VARIATION_ENT_IMPOSE()\nuiDenture_droiteEX_ENTRAXE_IMPOSE.setupUi(Denture_droite_deporteEX_VARIATION_ENT_IMPOSE)\nuiDenture_droiteEX_ENTRAXE_IMPOSE.pushButton_2.clicked.connect(retour_30)\n# fenetre denture droite deporte interieur avec variation d'entraxe (entraxe impose)",
        "detail": "GEARMASTER",
        "documentation": {}
    },
    {
        "label": "uiDenture_droiteH_deporteIN_VARIATION",
        "kind": 5,
        "importPath": "GEARMASTER",
        "description": "GEARMASTER",
        "peekOfCode": "uiDenture_droiteH_deporteIN_VARIATION = Ui_Denture_droiteH_deporteIN_VARIATION_ANT_NON_IMPOSE()\nuiDenture_droiteH_deporteIN_VARIATION.setupUi(Denture_droiteH_deporteIN_VARIATION_ANT_NON_IMPOSE)\nuiDenture_droiteH_deporteIN_VARIATION.pushButton_2.clicked.connect(retour_29)\n# fenetre denture droite deporte exterieur avec variation d'entraxe (entraxe impose)\nDenture_droite_deporteEX_VARIATION_ENT_IMPOSE = QtWidgets.QWidget()\nuiDenture_droiteEX_ENTRAXE_IMPOSE = Ui_Denture_droite_deporteEX_VARIATION_ENT_IMPOSE()\nuiDenture_droiteEX_ENTRAXE_IMPOSE.setupUi(Denture_droite_deporteEX_VARIATION_ENT_IMPOSE)\nuiDenture_droiteEX_ENTRAXE_IMPOSE.pushButton_2.clicked.connect(retour_30)\n# fenetre denture droite deporte interieur avec variation d'entraxe (entraxe impose)\nDenture_droite_deporteIN_VARIATION_ENT_IMPOSE = QtWidgets.QWidget()",
        "detail": "GEARMASTER",
        "documentation": {}
    },
    {
        "label": "Denture_droite_deporteEX_VARIATION_ENT_IMPOSE",
        "kind": 5,
        "importPath": "GEARMASTER",
        "description": "GEARMASTER",
        "peekOfCode": "Denture_droite_deporteEX_VARIATION_ENT_IMPOSE = QtWidgets.QWidget()\nuiDenture_droiteEX_ENTRAXE_IMPOSE = Ui_Denture_droite_deporteEX_VARIATION_ENT_IMPOSE()\nuiDenture_droiteEX_ENTRAXE_IMPOSE.setupUi(Denture_droite_deporteEX_VARIATION_ENT_IMPOSE)\nuiDenture_droiteEX_ENTRAXE_IMPOSE.pushButton_2.clicked.connect(retour_30)\n# fenetre denture droite deporte interieur avec variation d'entraxe (entraxe impose)\nDenture_droite_deporteIN_VARIATION_ENT_IMPOSE = QtWidgets.QWidget()\nuiDenture_droiteIN_ENTRAXE_IMPOSE = Ui_Denture_droite_deporteIN_VARIATION_ENT_IMPOSE()\nuiDenture_droiteIN_ENTRAXE_IMPOSE.setupUi(Denture_droite_deporteIN_VARIATION_ENT_IMPOSE)\nuiDenture_droiteIN_ENTRAXE_IMPOSE.pushButton_2.clicked.connect(retour_31)\n# fenetre denture helicoidale deporte exterieur avec variation d'entraxe (entraxe impose)",
        "detail": "GEARMASTER",
        "documentation": {}
    },
    {
        "label": "uiDenture_droiteEX_ENTRAXE_IMPOSE",
        "kind": 5,
        "importPath": "GEARMASTER",
        "description": "GEARMASTER",
        "peekOfCode": "uiDenture_droiteEX_ENTRAXE_IMPOSE = Ui_Denture_droite_deporteEX_VARIATION_ENT_IMPOSE()\nuiDenture_droiteEX_ENTRAXE_IMPOSE.setupUi(Denture_droite_deporteEX_VARIATION_ENT_IMPOSE)\nuiDenture_droiteEX_ENTRAXE_IMPOSE.pushButton_2.clicked.connect(retour_30)\n# fenetre denture droite deporte interieur avec variation d'entraxe (entraxe impose)\nDenture_droite_deporteIN_VARIATION_ENT_IMPOSE = QtWidgets.QWidget()\nuiDenture_droiteIN_ENTRAXE_IMPOSE = Ui_Denture_droite_deporteIN_VARIATION_ENT_IMPOSE()\nuiDenture_droiteIN_ENTRAXE_IMPOSE.setupUi(Denture_droite_deporteIN_VARIATION_ENT_IMPOSE)\nuiDenture_droiteIN_ENTRAXE_IMPOSE.pushButton_2.clicked.connect(retour_31)\n# fenetre denture helicoidale deporte exterieur avec variation d'entraxe (entraxe impose)\nDenture_droiteH_deporteE_VARIATION_ENT_IMPOSE = QtWidgets.QWidget()",
        "detail": "GEARMASTER",
        "documentation": {}
    },
    {
        "label": "Denture_droite_deporteIN_VARIATION_ENT_IMPOSE",
        "kind": 5,
        "importPath": "GEARMASTER",
        "description": "GEARMASTER",
        "peekOfCode": "Denture_droite_deporteIN_VARIATION_ENT_IMPOSE = QtWidgets.QWidget()\nuiDenture_droiteIN_ENTRAXE_IMPOSE = Ui_Denture_droite_deporteIN_VARIATION_ENT_IMPOSE()\nuiDenture_droiteIN_ENTRAXE_IMPOSE.setupUi(Denture_droite_deporteIN_VARIATION_ENT_IMPOSE)\nuiDenture_droiteIN_ENTRAXE_IMPOSE.pushButton_2.clicked.connect(retour_31)\n# fenetre denture helicoidale deporte exterieur avec variation d'entraxe (entraxe impose)\nDenture_droiteH_deporteE_VARIATION_ENT_IMPOSE = QtWidgets.QWidget()\nuiDenture_helicoidal_EX_ENTRAXE_IMPOSE = Ui_Denture_droiteH_deporteE_VARIATION_ENT_IMPOSE()\nuiDenture_helicoidal_EX_ENTRAXE_IMPOSE.setupUi(Denture_droiteH_deporteE_VARIATION_ENT_IMPOSE)\nuiDenture_helicoidal_EX_ENTRAXE_IMPOSE.pushButton_2.clicked.connect(retour_32)\n# fenetre denture helicoidale deporte interieur avec variation d'entraxe (entraxe impose)",
        "detail": "GEARMASTER",
        "documentation": {}
    },
    {
        "label": "uiDenture_droiteIN_ENTRAXE_IMPOSE",
        "kind": 5,
        "importPath": "GEARMASTER",
        "description": "GEARMASTER",
        "peekOfCode": "uiDenture_droiteIN_ENTRAXE_IMPOSE = Ui_Denture_droite_deporteIN_VARIATION_ENT_IMPOSE()\nuiDenture_droiteIN_ENTRAXE_IMPOSE.setupUi(Denture_droite_deporteIN_VARIATION_ENT_IMPOSE)\nuiDenture_droiteIN_ENTRAXE_IMPOSE.pushButton_2.clicked.connect(retour_31)\n# fenetre denture helicoidale deporte exterieur avec variation d'entraxe (entraxe impose)\nDenture_droiteH_deporteE_VARIATION_ENT_IMPOSE = QtWidgets.QWidget()\nuiDenture_helicoidal_EX_ENTRAXE_IMPOSE = Ui_Denture_droiteH_deporteE_VARIATION_ENT_IMPOSE()\nuiDenture_helicoidal_EX_ENTRAXE_IMPOSE.setupUi(Denture_droiteH_deporteE_VARIATION_ENT_IMPOSE)\nuiDenture_helicoidal_EX_ENTRAXE_IMPOSE.pushButton_2.clicked.connect(retour_32)\n# fenetre denture helicoidale deporte interieur avec variation d'entraxe (entraxe impose)\nDenture_droiteH_deporteIN_VARIATION_ENT_IMPOSE = QtWidgets.QWidget()",
        "detail": "GEARMASTER",
        "documentation": {}
    },
    {
        "label": "Denture_droiteH_deporteE_VARIATION_ENT_IMPOSE",
        "kind": 5,
        "importPath": "GEARMASTER",
        "description": "GEARMASTER",
        "peekOfCode": "Denture_droiteH_deporteE_VARIATION_ENT_IMPOSE = QtWidgets.QWidget()\nuiDenture_helicoidal_EX_ENTRAXE_IMPOSE = Ui_Denture_droiteH_deporteE_VARIATION_ENT_IMPOSE()\nuiDenture_helicoidal_EX_ENTRAXE_IMPOSE.setupUi(Denture_droiteH_deporteE_VARIATION_ENT_IMPOSE)\nuiDenture_helicoidal_EX_ENTRAXE_IMPOSE.pushButton_2.clicked.connect(retour_32)\n# fenetre denture helicoidale deporte interieur avec variation d'entraxe (entraxe impose)\nDenture_droiteH_deporteIN_VARIATION_ENT_IMPOSE = QtWidgets.QWidget()\nuiDenture_helicoidal_IN_ENTRAXE_IMPOSE = Ui_Denture_droiteH_deporteIN_VARIATION_ENT_IMPOSE()\nuiDenture_helicoidal_IN_ENTRAXE_IMPOSE.setupUi(Denture_droiteH_deporteIN_VARIATION_ENT_IMPOSE)\nuiDenture_helicoidal_IN_ENTRAXE_IMPOSE.pushButton_2.clicked.connect(retour_33)\n########### FIN DES SOUS FENETRES DU 2ieme CHAPITRE ###########",
        "detail": "GEARMASTER",
        "documentation": {}
    },
    {
        "label": "uiDenture_helicoidal_EX_ENTRAXE_IMPOSE",
        "kind": 5,
        "importPath": "GEARMASTER",
        "description": "GEARMASTER",
        "peekOfCode": "uiDenture_helicoidal_EX_ENTRAXE_IMPOSE = Ui_Denture_droiteH_deporteE_VARIATION_ENT_IMPOSE()\nuiDenture_helicoidal_EX_ENTRAXE_IMPOSE.setupUi(Denture_droiteH_deporteE_VARIATION_ENT_IMPOSE)\nuiDenture_helicoidal_EX_ENTRAXE_IMPOSE.pushButton_2.clicked.connect(retour_32)\n# fenetre denture helicoidale deporte interieur avec variation d'entraxe (entraxe impose)\nDenture_droiteH_deporteIN_VARIATION_ENT_IMPOSE = QtWidgets.QWidget()\nuiDenture_helicoidal_IN_ENTRAXE_IMPOSE = Ui_Denture_droiteH_deporteIN_VARIATION_ENT_IMPOSE()\nuiDenture_helicoidal_IN_ENTRAXE_IMPOSE.setupUi(Denture_droiteH_deporteIN_VARIATION_ENT_IMPOSE)\nuiDenture_helicoidal_IN_ENTRAXE_IMPOSE.pushButton_2.clicked.connect(retour_33)\n########### FIN DES SOUS FENETRES DU 2ieme CHAPITRE ###########\n########### FENETRES DU 3ieme CHAPITRE ###########",
        "detail": "GEARMASTER",
        "documentation": {}
    },
    {
        "label": "Denture_droiteH_deporteIN_VARIATION_ENT_IMPOSE",
        "kind": 5,
        "importPath": "GEARMASTER",
        "description": "GEARMASTER",
        "peekOfCode": "Denture_droiteH_deporteIN_VARIATION_ENT_IMPOSE = QtWidgets.QWidget()\nuiDenture_helicoidal_IN_ENTRAXE_IMPOSE = Ui_Denture_droiteH_deporteIN_VARIATION_ENT_IMPOSE()\nuiDenture_helicoidal_IN_ENTRAXE_IMPOSE.setupUi(Denture_droiteH_deporteIN_VARIATION_ENT_IMPOSE)\nuiDenture_helicoidal_IN_ENTRAXE_IMPOSE.pushButton_2.clicked.connect(retour_33)\n########### FIN DES SOUS FENETRES DU 2ieme CHAPITRE ###########\n########### FENETRES DU 3ieme CHAPITRE ###########\nENGRENAGE_CONCOURANTE = QtWidgets.QWidget()\nuiENGRENAGE_CONCOURANTE = Ui_ENGRENAGE_CONCOURANTE()\nuiENGRENAGE_CONCOURANTE.setupUi(ENGRENAGE_CONCOURANTE)\nuiENGRENAGE_CONCOURANTE.pushButton_9_CH21.clicked.connect(retour_34)",
        "detail": "GEARMASTER",
        "documentation": {}
    },
    {
        "label": "uiDenture_helicoidal_IN_ENTRAXE_IMPOSE",
        "kind": 5,
        "importPath": "GEARMASTER",
        "description": "GEARMASTER",
        "peekOfCode": "uiDenture_helicoidal_IN_ENTRAXE_IMPOSE = Ui_Denture_droiteH_deporteIN_VARIATION_ENT_IMPOSE()\nuiDenture_helicoidal_IN_ENTRAXE_IMPOSE.setupUi(Denture_droiteH_deporteIN_VARIATION_ENT_IMPOSE)\nuiDenture_helicoidal_IN_ENTRAXE_IMPOSE.pushButton_2.clicked.connect(retour_33)\n########### FIN DES SOUS FENETRES DU 2ieme CHAPITRE ###########\n########### FENETRES DU 3ieme CHAPITRE ###########\nENGRENAGE_CONCOURANTE = QtWidgets.QWidget()\nuiENGRENAGE_CONCOURANTE = Ui_ENGRENAGE_CONCOURANTE()\nuiENGRENAGE_CONCOURANTE.setupUi(ENGRENAGE_CONCOURANTE)\nuiENGRENAGE_CONCOURANTE.pushButton_9_CH21.clicked.connect(retour_34)\nENGRENAGE_CONIQUE_DROIT_DENTURE_NORMALE = QtWidgets.QWidget()",
        "detail": "GEARMASTER",
        "documentation": {}
    },
    {
        "label": "ENGRENAGE_CONCOURANTE",
        "kind": 5,
        "importPath": "GEARMASTER",
        "description": "GEARMASTER",
        "peekOfCode": "ENGRENAGE_CONCOURANTE = QtWidgets.QWidget()\nuiENGRENAGE_CONCOURANTE = Ui_ENGRENAGE_CONCOURANTE()\nuiENGRENAGE_CONCOURANTE.setupUi(ENGRENAGE_CONCOURANTE)\nuiENGRENAGE_CONCOURANTE.pushButton_9_CH21.clicked.connect(retour_34)\nENGRENAGE_CONIQUE_DROIT_DENTURE_NORMALE = QtWidgets.QWidget()\nuiENGRENAGE_CONIQUE_N = Ui_ENGRENAGE_CONIQUE_DROIT_DENTURE_NORMALE()\nuiENGRENAGE_CONIQUE_N.setupUi(ENGRENAGE_CONIQUE_DROIT_DENTURE_NORMALE)\nuiENGRENAGE_CONIQUE_N.pushButton_2.clicked.connect(retour_35)\nENGRENAGE_CONIQUE_DROIT_DENTURE_DEPORTEE = QtWidgets.QWidget()\nuiENGRENAGE_CONIQUE_D = Ui_ENGRENAGE_CONIQUE_DROIT_DENTURE_DEPORTEE()",
        "detail": "GEARMASTER",
        "documentation": {}
    },
    {
        "label": "uiENGRENAGE_CONCOURANTE",
        "kind": 5,
        "importPath": "GEARMASTER",
        "description": "GEARMASTER",
        "peekOfCode": "uiENGRENAGE_CONCOURANTE = Ui_ENGRENAGE_CONCOURANTE()\nuiENGRENAGE_CONCOURANTE.setupUi(ENGRENAGE_CONCOURANTE)\nuiENGRENAGE_CONCOURANTE.pushButton_9_CH21.clicked.connect(retour_34)\nENGRENAGE_CONIQUE_DROIT_DENTURE_NORMALE = QtWidgets.QWidget()\nuiENGRENAGE_CONIQUE_N = Ui_ENGRENAGE_CONIQUE_DROIT_DENTURE_NORMALE()\nuiENGRENAGE_CONIQUE_N.setupUi(ENGRENAGE_CONIQUE_DROIT_DENTURE_NORMALE)\nuiENGRENAGE_CONIQUE_N.pushButton_2.clicked.connect(retour_35)\nENGRENAGE_CONIQUE_DROIT_DENTURE_DEPORTEE = QtWidgets.QWidget()\nuiENGRENAGE_CONIQUE_D = Ui_ENGRENAGE_CONIQUE_DROIT_DENTURE_DEPORTEE()\nuiENGRENAGE_CONIQUE_D.setupUi(ENGRENAGE_CONIQUE_DROIT_DENTURE_DEPORTEE)",
        "detail": "GEARMASTER",
        "documentation": {}
    },
    {
        "label": "ENGRENAGE_CONIQUE_DROIT_DENTURE_NORMALE",
        "kind": 5,
        "importPath": "GEARMASTER",
        "description": "GEARMASTER",
        "peekOfCode": "ENGRENAGE_CONIQUE_DROIT_DENTURE_NORMALE = QtWidgets.QWidget()\nuiENGRENAGE_CONIQUE_N = Ui_ENGRENAGE_CONIQUE_DROIT_DENTURE_NORMALE()\nuiENGRENAGE_CONIQUE_N.setupUi(ENGRENAGE_CONIQUE_DROIT_DENTURE_NORMALE)\nuiENGRENAGE_CONIQUE_N.pushButton_2.clicked.connect(retour_35)\nENGRENAGE_CONIQUE_DROIT_DENTURE_DEPORTEE = QtWidgets.QWidget()\nuiENGRENAGE_CONIQUE_D = Ui_ENGRENAGE_CONIQUE_DROIT_DENTURE_DEPORTEE()\nuiENGRENAGE_CONIQUE_D.setupUi(ENGRENAGE_CONIQUE_DROIT_DENTURE_DEPORTEE)\nuiENGRENAGE_CONIQUE_D.pushButton_2.clicked.connect(retour_36)\nENGRENAGE_CONIQUE_HELICOIDALE_NON_DEPORTEE = QtWidgets.QWidget()\nuiENGRENAGE_CONIQUE_HELICOIDALE_N = Ui_ENGRENAGE_CONIQUE_HELICOIDALE_NON_DEPORTEE()",
        "detail": "GEARMASTER",
        "documentation": {}
    },
    {
        "label": "uiENGRENAGE_CONIQUE_N",
        "kind": 5,
        "importPath": "GEARMASTER",
        "description": "GEARMASTER",
        "peekOfCode": "uiENGRENAGE_CONIQUE_N = Ui_ENGRENAGE_CONIQUE_DROIT_DENTURE_NORMALE()\nuiENGRENAGE_CONIQUE_N.setupUi(ENGRENAGE_CONIQUE_DROIT_DENTURE_NORMALE)\nuiENGRENAGE_CONIQUE_N.pushButton_2.clicked.connect(retour_35)\nENGRENAGE_CONIQUE_DROIT_DENTURE_DEPORTEE = QtWidgets.QWidget()\nuiENGRENAGE_CONIQUE_D = Ui_ENGRENAGE_CONIQUE_DROIT_DENTURE_DEPORTEE()\nuiENGRENAGE_CONIQUE_D.setupUi(ENGRENAGE_CONIQUE_DROIT_DENTURE_DEPORTEE)\nuiENGRENAGE_CONIQUE_D.pushButton_2.clicked.connect(retour_36)\nENGRENAGE_CONIQUE_HELICOIDALE_NON_DEPORTEE = QtWidgets.QWidget()\nuiENGRENAGE_CONIQUE_HELICOIDALE_N = Ui_ENGRENAGE_CONIQUE_HELICOIDALE_NON_DEPORTEE()\nuiENGRENAGE_CONIQUE_HELICOIDALE_N.setupUi(ENGRENAGE_CONIQUE_HELICOIDALE_NON_DEPORTEE)",
        "detail": "GEARMASTER",
        "documentation": {}
    },
    {
        "label": "ENGRENAGE_CONIQUE_DROIT_DENTURE_DEPORTEE",
        "kind": 5,
        "importPath": "GEARMASTER",
        "description": "GEARMASTER",
        "peekOfCode": "ENGRENAGE_CONIQUE_DROIT_DENTURE_DEPORTEE = QtWidgets.QWidget()\nuiENGRENAGE_CONIQUE_D = Ui_ENGRENAGE_CONIQUE_DROIT_DENTURE_DEPORTEE()\nuiENGRENAGE_CONIQUE_D.setupUi(ENGRENAGE_CONIQUE_DROIT_DENTURE_DEPORTEE)\nuiENGRENAGE_CONIQUE_D.pushButton_2.clicked.connect(retour_36)\nENGRENAGE_CONIQUE_HELICOIDALE_NON_DEPORTEE = QtWidgets.QWidget()\nuiENGRENAGE_CONIQUE_HELICOIDALE_N = Ui_ENGRENAGE_CONIQUE_HELICOIDALE_NON_DEPORTEE()\nuiENGRENAGE_CONIQUE_HELICOIDALE_N.setupUi(ENGRENAGE_CONIQUE_HELICOIDALE_NON_DEPORTEE)\nuiENGRENAGE_CONIQUE_HELICOIDALE_N.pushButton_2.clicked.connect(retour_37)\nENGRENAGE_CONIQUE_HELICOIDALE_DEPORTEE = QtWidgets.QWidget()\nuiENGRENAGE_CONIQUE_HELICOIDALE_D = Ui_ENGRENAGE_CONIQUE_HELICOIDALE_DEPORTEE()",
        "detail": "GEARMASTER",
        "documentation": {}
    },
    {
        "label": "uiENGRENAGE_CONIQUE_D",
        "kind": 5,
        "importPath": "GEARMASTER",
        "description": "GEARMASTER",
        "peekOfCode": "uiENGRENAGE_CONIQUE_D = Ui_ENGRENAGE_CONIQUE_DROIT_DENTURE_DEPORTEE()\nuiENGRENAGE_CONIQUE_D.setupUi(ENGRENAGE_CONIQUE_DROIT_DENTURE_DEPORTEE)\nuiENGRENAGE_CONIQUE_D.pushButton_2.clicked.connect(retour_36)\nENGRENAGE_CONIQUE_HELICOIDALE_NON_DEPORTEE = QtWidgets.QWidget()\nuiENGRENAGE_CONIQUE_HELICOIDALE_N = Ui_ENGRENAGE_CONIQUE_HELICOIDALE_NON_DEPORTEE()\nuiENGRENAGE_CONIQUE_HELICOIDALE_N.setupUi(ENGRENAGE_CONIQUE_HELICOIDALE_NON_DEPORTEE)\nuiENGRENAGE_CONIQUE_HELICOIDALE_N.pushButton_2.clicked.connect(retour_37)\nENGRENAGE_CONIQUE_HELICOIDALE_DEPORTEE = QtWidgets.QWidget()\nuiENGRENAGE_CONIQUE_HELICOIDALE_D = Ui_ENGRENAGE_CONIQUE_HELICOIDALE_DEPORTEE()\nuiENGRENAGE_CONIQUE_HELICOIDALE_D.setupUi(ENGRENAGE_CONIQUE_HELICOIDALE_DEPORTEE)",
        "detail": "GEARMASTER",
        "documentation": {}
    },
    {
        "label": "ENGRENAGE_CONIQUE_HELICOIDALE_NON_DEPORTEE",
        "kind": 5,
        "importPath": "GEARMASTER",
        "description": "GEARMASTER",
        "peekOfCode": "ENGRENAGE_CONIQUE_HELICOIDALE_NON_DEPORTEE = QtWidgets.QWidget()\nuiENGRENAGE_CONIQUE_HELICOIDALE_N = Ui_ENGRENAGE_CONIQUE_HELICOIDALE_NON_DEPORTEE()\nuiENGRENAGE_CONIQUE_HELICOIDALE_N.setupUi(ENGRENAGE_CONIQUE_HELICOIDALE_NON_DEPORTEE)\nuiENGRENAGE_CONIQUE_HELICOIDALE_N.pushButton_2.clicked.connect(retour_37)\nENGRENAGE_CONIQUE_HELICOIDALE_DEPORTEE = QtWidgets.QWidget()\nuiENGRENAGE_CONIQUE_HELICOIDALE_D = Ui_ENGRENAGE_CONIQUE_HELICOIDALE_DEPORTEE()\nuiENGRENAGE_CONIQUE_HELICOIDALE_D.setupUi(ENGRENAGE_CONIQUE_HELICOIDALE_DEPORTEE)\nuiENGRENAGE_CONIQUE_HELICOIDALE_D.pushButton_2.clicked.connect(retour_38)\nROUE_VIS_SANS_FIN = QtWidgets.QWidget()\nuiROUE_VIS = Ui_ROUE_VIS_SANS_FIN()",
        "detail": "GEARMASTER",
        "documentation": {}
    },
    {
        "label": "uiENGRENAGE_CONIQUE_HELICOIDALE_N",
        "kind": 5,
        "importPath": "GEARMASTER",
        "description": "GEARMASTER",
        "peekOfCode": "uiENGRENAGE_CONIQUE_HELICOIDALE_N = Ui_ENGRENAGE_CONIQUE_HELICOIDALE_NON_DEPORTEE()\nuiENGRENAGE_CONIQUE_HELICOIDALE_N.setupUi(ENGRENAGE_CONIQUE_HELICOIDALE_NON_DEPORTEE)\nuiENGRENAGE_CONIQUE_HELICOIDALE_N.pushButton_2.clicked.connect(retour_37)\nENGRENAGE_CONIQUE_HELICOIDALE_DEPORTEE = QtWidgets.QWidget()\nuiENGRENAGE_CONIQUE_HELICOIDALE_D = Ui_ENGRENAGE_CONIQUE_HELICOIDALE_DEPORTEE()\nuiENGRENAGE_CONIQUE_HELICOIDALE_D.setupUi(ENGRENAGE_CONIQUE_HELICOIDALE_DEPORTEE)\nuiENGRENAGE_CONIQUE_HELICOIDALE_D.pushButton_2.clicked.connect(retour_38)\nROUE_VIS_SANS_FIN = QtWidgets.QWidget()\nuiROUE_VIS = Ui_ROUE_VIS_SANS_FIN()\nuiROUE_VIS.setupUi(ROUE_VIS_SANS_FIN)",
        "detail": "GEARMASTER",
        "documentation": {}
    },
    {
        "label": "ENGRENAGE_CONIQUE_HELICOIDALE_DEPORTEE",
        "kind": 5,
        "importPath": "GEARMASTER",
        "description": "GEARMASTER",
        "peekOfCode": "ENGRENAGE_CONIQUE_HELICOIDALE_DEPORTEE = QtWidgets.QWidget()\nuiENGRENAGE_CONIQUE_HELICOIDALE_D = Ui_ENGRENAGE_CONIQUE_HELICOIDALE_DEPORTEE()\nuiENGRENAGE_CONIQUE_HELICOIDALE_D.setupUi(ENGRENAGE_CONIQUE_HELICOIDALE_DEPORTEE)\nuiENGRENAGE_CONIQUE_HELICOIDALE_D.pushButton_2.clicked.connect(retour_38)\nROUE_VIS_SANS_FIN = QtWidgets.QWidget()\nuiROUE_VIS = Ui_ROUE_VIS_SANS_FIN()\nuiROUE_VIS.setupUi(ROUE_VIS_SANS_FIN)\nuiROUE_VIS.pushButton_2.clicked.connect(retour_39)\n########### FIN DES SOUS FENETRES DU 3ieme CHAPITRE ###########\n########### FENETRES DU 4ieme CHAPITRE ###########",
        "detail": "GEARMASTER",
        "documentation": {}
    },
    {
        "label": "uiENGRENAGE_CONIQUE_HELICOIDALE_D",
        "kind": 5,
        "importPath": "GEARMASTER",
        "description": "GEARMASTER",
        "peekOfCode": "uiENGRENAGE_CONIQUE_HELICOIDALE_D = Ui_ENGRENAGE_CONIQUE_HELICOIDALE_DEPORTEE()\nuiENGRENAGE_CONIQUE_HELICOIDALE_D.setupUi(ENGRENAGE_CONIQUE_HELICOIDALE_DEPORTEE)\nuiENGRENAGE_CONIQUE_HELICOIDALE_D.pushButton_2.clicked.connect(retour_38)\nROUE_VIS_SANS_FIN = QtWidgets.QWidget()\nuiROUE_VIS = Ui_ROUE_VIS_SANS_FIN()\nuiROUE_VIS.setupUi(ROUE_VIS_SANS_FIN)\nuiROUE_VIS.pushButton_2.clicked.connect(retour_39)\n########### FIN DES SOUS FENETRES DU 3ieme CHAPITRE ###########\n########### FENETRES DU 4ieme CHAPITRE ###########\n# creation de la fenetre pour les caluls des efforts et des resistances",
        "detail": "GEARMASTER",
        "documentation": {}
    },
    {
        "label": "ROUE_VIS_SANS_FIN",
        "kind": 5,
        "importPath": "GEARMASTER",
        "description": "GEARMASTER",
        "peekOfCode": "ROUE_VIS_SANS_FIN = QtWidgets.QWidget()\nuiROUE_VIS = Ui_ROUE_VIS_SANS_FIN()\nuiROUE_VIS.setupUi(ROUE_VIS_SANS_FIN)\nuiROUE_VIS.pushButton_2.clicked.connect(retour_39)\n########### FIN DES SOUS FENETRES DU 3ieme CHAPITRE ###########\n########### FENETRES DU 4ieme CHAPITRE ###########\n# creation de la fenetre pour les caluls des efforts et des resistances\nRESISTANCE_EFFORT = QtWidgets.QWidget()\nuiRESISTANCE_EFFORT = Ui_RESISTANCE_EFFORT()\nuiRESISTANCE_EFFORT.setupUi(RESISTANCE_EFFORT)",
        "detail": "GEARMASTER",
        "documentation": {}
    },
    {
        "label": "uiROUE_VIS",
        "kind": 5,
        "importPath": "GEARMASTER",
        "description": "GEARMASTER",
        "peekOfCode": "uiROUE_VIS = Ui_ROUE_VIS_SANS_FIN()\nuiROUE_VIS.setupUi(ROUE_VIS_SANS_FIN)\nuiROUE_VIS.pushButton_2.clicked.connect(retour_39)\n########### FIN DES SOUS FENETRES DU 3ieme CHAPITRE ###########\n########### FENETRES DU 4ieme CHAPITRE ###########\n# creation de la fenetre pour les caluls des efforts et des resistances\nRESISTANCE_EFFORT = QtWidgets.QWidget()\nuiRESISTANCE_EFFORT = Ui_RESISTANCE_EFFORT()\nuiRESISTANCE_EFFORT.setupUi(RESISTANCE_EFFORT)\nuiRESISTANCE_EFFORT.RETOUR_RESISTRANCE_EFFORTS.clicked.connect(retour_40)",
        "detail": "GEARMASTER",
        "documentation": {}
    },
    {
        "label": "RESISTANCE_EFFORT",
        "kind": 5,
        "importPath": "GEARMASTER",
        "description": "GEARMASTER",
        "peekOfCode": "RESISTANCE_EFFORT = QtWidgets.QWidget()\nuiRESISTANCE_EFFORT = Ui_RESISTANCE_EFFORT()\nuiRESISTANCE_EFFORT.setupUi(RESISTANCE_EFFORT)\nuiRESISTANCE_EFFORT.RETOUR_RESISTRANCE_EFFORTS.clicked.connect(retour_40)\nLES_EFFORTS_SUR_DENTS = QtWidgets.QWidget()\nuiLES_EFFORTS_SUR_DENTS = Ui_LES_EFFORTS_SUR_DENTS()\nuiLES_EFFORTS_SUR_DENTS.setupUi(LES_EFFORTS_SUR_DENTS)\nuiLES_EFFORTS_SUR_DENTS.pushButton_RETOUR_EFFORTS_SUR_DENTS.clicked.connect(retour_41)\nDENTURE_DROITE_PARALLELE = QtWidgets.QWidget()\nuiDENTURE_DROITE_PARALLELE = Ui_DENTURE_DROITE_PARALLELE()",
        "detail": "GEARMASTER",
        "documentation": {}
    },
    {
        "label": "uiRESISTANCE_EFFORT",
        "kind": 5,
        "importPath": "GEARMASTER",
        "description": "GEARMASTER",
        "peekOfCode": "uiRESISTANCE_EFFORT = Ui_RESISTANCE_EFFORT()\nuiRESISTANCE_EFFORT.setupUi(RESISTANCE_EFFORT)\nuiRESISTANCE_EFFORT.RETOUR_RESISTRANCE_EFFORTS.clicked.connect(retour_40)\nLES_EFFORTS_SUR_DENTS = QtWidgets.QWidget()\nuiLES_EFFORTS_SUR_DENTS = Ui_LES_EFFORTS_SUR_DENTS()\nuiLES_EFFORTS_SUR_DENTS.setupUi(LES_EFFORTS_SUR_DENTS)\nuiLES_EFFORTS_SUR_DENTS.pushButton_RETOUR_EFFORTS_SUR_DENTS.clicked.connect(retour_41)\nDENTURE_DROITE_PARALLELE = QtWidgets.QWidget()\nuiDENTURE_DROITE_PARALLELE = Ui_DENTURE_DROITE_PARALLELE()\nuiDENTURE_DROITE_PARALLELE.setupUi(DENTURE_DROITE_PARALLELE)",
        "detail": "GEARMASTER",
        "documentation": {}
    },
    {
        "label": "LES_EFFORTS_SUR_DENTS",
        "kind": 5,
        "importPath": "GEARMASTER",
        "description": "GEARMASTER",
        "peekOfCode": "LES_EFFORTS_SUR_DENTS = QtWidgets.QWidget()\nuiLES_EFFORTS_SUR_DENTS = Ui_LES_EFFORTS_SUR_DENTS()\nuiLES_EFFORTS_SUR_DENTS.setupUi(LES_EFFORTS_SUR_DENTS)\nuiLES_EFFORTS_SUR_DENTS.pushButton_RETOUR_EFFORTS_SUR_DENTS.clicked.connect(retour_41)\nDENTURE_DROITE_PARALLELE = QtWidgets.QWidget()\nuiDENTURE_DROITE_PARALLELE = Ui_DENTURE_DROITE_PARALLELE()\nuiDENTURE_DROITE_PARALLELE.setupUi(DENTURE_DROITE_PARALLELE)\nuiDENTURE_DROITE_PARALLELE.pushButton_2.clicked.connect(retour_42)\nDENTURE_HELICOIDALE_PARALLELE = QtWidgets.QWidget()\nuiDENTURE_HELICOIDALE_PARALLELE = Ui_DENTURE_HELICOIDALE_PARALLELE()",
        "detail": "GEARMASTER",
        "documentation": {}
    },
    {
        "label": "uiLES_EFFORTS_SUR_DENTS",
        "kind": 5,
        "importPath": "GEARMASTER",
        "description": "GEARMASTER",
        "peekOfCode": "uiLES_EFFORTS_SUR_DENTS = Ui_LES_EFFORTS_SUR_DENTS()\nuiLES_EFFORTS_SUR_DENTS.setupUi(LES_EFFORTS_SUR_DENTS)\nuiLES_EFFORTS_SUR_DENTS.pushButton_RETOUR_EFFORTS_SUR_DENTS.clicked.connect(retour_41)\nDENTURE_DROITE_PARALLELE = QtWidgets.QWidget()\nuiDENTURE_DROITE_PARALLELE = Ui_DENTURE_DROITE_PARALLELE()\nuiDENTURE_DROITE_PARALLELE.setupUi(DENTURE_DROITE_PARALLELE)\nuiDENTURE_DROITE_PARALLELE.pushButton_2.clicked.connect(retour_42)\nDENTURE_HELICOIDALE_PARALLELE = QtWidgets.QWidget()\nuiDENTURE_HELICOIDALE_PARALLELE = Ui_DENTURE_HELICOIDALE_PARALLELE()\nuiDENTURE_HELICOIDALE_PARALLELE.setupUi(DENTURE_HELICOIDALE_PARALLELE)",
        "detail": "GEARMASTER",
        "documentation": {}
    },
    {
        "label": "DENTURE_DROITE_PARALLELE",
        "kind": 5,
        "importPath": "GEARMASTER",
        "description": "GEARMASTER",
        "peekOfCode": "DENTURE_DROITE_PARALLELE = QtWidgets.QWidget()\nuiDENTURE_DROITE_PARALLELE = Ui_DENTURE_DROITE_PARALLELE()\nuiDENTURE_DROITE_PARALLELE.setupUi(DENTURE_DROITE_PARALLELE)\nuiDENTURE_DROITE_PARALLELE.pushButton_2.clicked.connect(retour_42)\nDENTURE_HELICOIDALE_PARALLELE = QtWidgets.QWidget()\nuiDENTURE_HELICOIDALE_PARALLELE = Ui_DENTURE_HELICOIDALE_PARALLELE()\nuiDENTURE_HELICOIDALE_PARALLELE.setupUi(DENTURE_HELICOIDALE_PARALLELE)\nuiDENTURE_HELICOIDALE_PARALLELE.pushButton_2.clicked.connect(retour_43)\nDENTURE_CONIQUE = QtWidgets.QWidget()\nuiDENTURE_CONIQUE = Ui_DENTURE_CONIQUE()",
        "detail": "GEARMASTER",
        "documentation": {}
    },
    {
        "label": "uiDENTURE_DROITE_PARALLELE",
        "kind": 5,
        "importPath": "GEARMASTER",
        "description": "GEARMASTER",
        "peekOfCode": "uiDENTURE_DROITE_PARALLELE = Ui_DENTURE_DROITE_PARALLELE()\nuiDENTURE_DROITE_PARALLELE.setupUi(DENTURE_DROITE_PARALLELE)\nuiDENTURE_DROITE_PARALLELE.pushButton_2.clicked.connect(retour_42)\nDENTURE_HELICOIDALE_PARALLELE = QtWidgets.QWidget()\nuiDENTURE_HELICOIDALE_PARALLELE = Ui_DENTURE_HELICOIDALE_PARALLELE()\nuiDENTURE_HELICOIDALE_PARALLELE.setupUi(DENTURE_HELICOIDALE_PARALLELE)\nuiDENTURE_HELICOIDALE_PARALLELE.pushButton_2.clicked.connect(retour_43)\nDENTURE_CONIQUE = QtWidgets.QWidget()\nuiDENTURE_CONIQUE = Ui_DENTURE_CONIQUE()\nuiDENTURE_CONIQUE.setupUi(DENTURE_CONIQUE)",
        "detail": "GEARMASTER",
        "documentation": {}
    },
    {
        "label": "DENTURE_HELICOIDALE_PARALLELE",
        "kind": 5,
        "importPath": "GEARMASTER",
        "description": "GEARMASTER",
        "peekOfCode": "DENTURE_HELICOIDALE_PARALLELE = QtWidgets.QWidget()\nuiDENTURE_HELICOIDALE_PARALLELE = Ui_DENTURE_HELICOIDALE_PARALLELE()\nuiDENTURE_HELICOIDALE_PARALLELE.setupUi(DENTURE_HELICOIDALE_PARALLELE)\nuiDENTURE_HELICOIDALE_PARALLELE.pushButton_2.clicked.connect(retour_43)\nDENTURE_CONIQUE = QtWidgets.QWidget()\nuiDENTURE_CONIQUE = Ui_DENTURE_CONIQUE()\nuiDENTURE_CONIQUE.setupUi(DENTURE_CONIQUE)\nuiDENTURE_CONIQUE.pushButton_2.clicked.connect(retour_44)\nLES_EFFORTS_ROUE_ET_VIS = QtWidgets.QWidget()\nuiLES_EFFORTS_ROUE_ET_VIS = Ui_LES_EFFORTS_ROUE_ET_VIS()",
        "detail": "GEARMASTER",
        "documentation": {}
    },
    {
        "label": "uiDENTURE_HELICOIDALE_PARALLELE",
        "kind": 5,
        "importPath": "GEARMASTER",
        "description": "GEARMASTER",
        "peekOfCode": "uiDENTURE_HELICOIDALE_PARALLELE = Ui_DENTURE_HELICOIDALE_PARALLELE()\nuiDENTURE_HELICOIDALE_PARALLELE.setupUi(DENTURE_HELICOIDALE_PARALLELE)\nuiDENTURE_HELICOIDALE_PARALLELE.pushButton_2.clicked.connect(retour_43)\nDENTURE_CONIQUE = QtWidgets.QWidget()\nuiDENTURE_CONIQUE = Ui_DENTURE_CONIQUE()\nuiDENTURE_CONIQUE.setupUi(DENTURE_CONIQUE)\nuiDENTURE_CONIQUE.pushButton_2.clicked.connect(retour_44)\nLES_EFFORTS_ROUE_ET_VIS = QtWidgets.QWidget()\nuiLES_EFFORTS_ROUE_ET_VIS = Ui_LES_EFFORTS_ROUE_ET_VIS()\nuiLES_EFFORTS_ROUE_ET_VIS.setupUi(LES_EFFORTS_ROUE_ET_VIS)",
        "detail": "GEARMASTER",
        "documentation": {}
    },
    {
        "label": "DENTURE_CONIQUE",
        "kind": 5,
        "importPath": "GEARMASTER",
        "description": "GEARMASTER",
        "peekOfCode": "DENTURE_CONIQUE = QtWidgets.QWidget()\nuiDENTURE_CONIQUE = Ui_DENTURE_CONIQUE()\nuiDENTURE_CONIQUE.setupUi(DENTURE_CONIQUE)\nuiDENTURE_CONIQUE.pushButton_2.clicked.connect(retour_44)\nLES_EFFORTS_ROUE_ET_VIS = QtWidgets.QWidget()\nuiLES_EFFORTS_ROUE_ET_VIS = Ui_LES_EFFORTS_ROUE_ET_VIS()\nuiLES_EFFORTS_ROUE_ET_VIS.setupUi(LES_EFFORTS_ROUE_ET_VIS)\nuiLES_EFFORTS_ROUE_ET_VIS.pushButton_2.clicked.connect(retour_45)\n# fenetre pour le calcul de resistance des dents des engrenages paralleles\nRESISTANCE_ENGRENAGE_PARALLELE = QtWidgets.QWidget()",
        "detail": "GEARMASTER",
        "documentation": {}
    },
    {
        "label": "uiDENTURE_CONIQUE",
        "kind": 5,
        "importPath": "GEARMASTER",
        "description": "GEARMASTER",
        "peekOfCode": "uiDENTURE_CONIQUE = Ui_DENTURE_CONIQUE()\nuiDENTURE_CONIQUE.setupUi(DENTURE_CONIQUE)\nuiDENTURE_CONIQUE.pushButton_2.clicked.connect(retour_44)\nLES_EFFORTS_ROUE_ET_VIS = QtWidgets.QWidget()\nuiLES_EFFORTS_ROUE_ET_VIS = Ui_LES_EFFORTS_ROUE_ET_VIS()\nuiLES_EFFORTS_ROUE_ET_VIS.setupUi(LES_EFFORTS_ROUE_ET_VIS)\nuiLES_EFFORTS_ROUE_ET_VIS.pushButton_2.clicked.connect(retour_45)\n# fenetre pour le calcul de resistance des dents des engrenages paralleles\nRESISTANCE_ENGRENAGE_PARALLELE = QtWidgets.QWidget()\nuiRESISTANCE_ENGRENAGE_PARALLELE = Ui_RESISTANCE_ENGRENAGE_PARALLELE()",
        "detail": "GEARMASTER",
        "documentation": {}
    },
    {
        "label": "LES_EFFORTS_ROUE_ET_VIS",
        "kind": 5,
        "importPath": "GEARMASTER",
        "description": "GEARMASTER",
        "peekOfCode": "LES_EFFORTS_ROUE_ET_VIS = QtWidgets.QWidget()\nuiLES_EFFORTS_ROUE_ET_VIS = Ui_LES_EFFORTS_ROUE_ET_VIS()\nuiLES_EFFORTS_ROUE_ET_VIS.setupUi(LES_EFFORTS_ROUE_ET_VIS)\nuiLES_EFFORTS_ROUE_ET_VIS.pushButton_2.clicked.connect(retour_45)\n# fenetre pour le calcul de resistance des dents des engrenages paralleles\nRESISTANCE_ENGRENAGE_PARALLELE = QtWidgets.QWidget()\nuiRESISTANCE_ENGRENAGE_PARALLELE = Ui_RESISTANCE_ENGRENAGE_PARALLELE()\nuiRESISTANCE_ENGRENAGE_PARALLELE.setupUi(RESISTANCE_ENGRENAGE_PARALLELE)\nuiRESISTANCE_ENGRENAGE_PARALLELE.pushButton_RETOUR_EFFORTS_SUR_DENTS.clicked.connect(retour_46)\n# fenetre pour le calcul de resistance des engrenages parallele a denture droite sans imposer entraxe",
        "detail": "GEARMASTER",
        "documentation": {}
    },
    {
        "label": "uiLES_EFFORTS_ROUE_ET_VIS",
        "kind": 5,
        "importPath": "GEARMASTER",
        "description": "GEARMASTER",
        "peekOfCode": "uiLES_EFFORTS_ROUE_ET_VIS = Ui_LES_EFFORTS_ROUE_ET_VIS()\nuiLES_EFFORTS_ROUE_ET_VIS.setupUi(LES_EFFORTS_ROUE_ET_VIS)\nuiLES_EFFORTS_ROUE_ET_VIS.pushButton_2.clicked.connect(retour_45)\n# fenetre pour le calcul de resistance des dents des engrenages paralleles\nRESISTANCE_ENGRENAGE_PARALLELE = QtWidgets.QWidget()\nuiRESISTANCE_ENGRENAGE_PARALLELE = Ui_RESISTANCE_ENGRENAGE_PARALLELE()\nuiRESISTANCE_ENGRENAGE_PARALLELE.setupUi(RESISTANCE_ENGRENAGE_PARALLELE)\nuiRESISTANCE_ENGRENAGE_PARALLELE.pushButton_RETOUR_EFFORTS_SUR_DENTS.clicked.connect(retour_46)\n# fenetre pour le calcul de resistance des engrenages parallele a denture droite sans imposer entraxe\nRESISTANCE_DROITE_ENTRAXE_NON_IMPOSE = QtWidgets.QWidget()",
        "detail": "GEARMASTER",
        "documentation": {}
    },
    {
        "label": "RESISTANCE_ENGRENAGE_PARALLELE",
        "kind": 5,
        "importPath": "GEARMASTER",
        "description": "GEARMASTER",
        "peekOfCode": "RESISTANCE_ENGRENAGE_PARALLELE = QtWidgets.QWidget()\nuiRESISTANCE_ENGRENAGE_PARALLELE = Ui_RESISTANCE_ENGRENAGE_PARALLELE()\nuiRESISTANCE_ENGRENAGE_PARALLELE.setupUi(RESISTANCE_ENGRENAGE_PARALLELE)\nuiRESISTANCE_ENGRENAGE_PARALLELE.pushButton_RETOUR_EFFORTS_SUR_DENTS.clicked.connect(retour_46)\n# fenetre pour le calcul de resistance des engrenages parallele a denture droite sans imposer entraxe\nRESISTANCE_DROITE_ENTRAXE_NON_IMPOSE = QtWidgets.QWidget()\nuiRESISTANCE_DROITE_ENTRAXE_NON_IMPOSE = Ui_RESISTANCE_DROITE_ENTRAXE_NON_IMPOSE()\nuiRESISTANCE_DROITE_ENTRAXE_NON_IMPOSE.setupUi(RESISTANCE_DROITE_ENTRAXE_NON_IMPOSE)\nuiRESISTANCE_DROITE_ENTRAXE_NON_IMPOSE.RETOUR_RESISTANCE_DROITE_PARALLELE_ENTRAXE_NON_IMPOSE.clicked.connect(retour_47)\n# fenetre pour le calcul de resistance des engrenages parallele a denture droite avec entraxe imposer",
        "detail": "GEARMASTER",
        "documentation": {}
    },
    {
        "label": "uiRESISTANCE_ENGRENAGE_PARALLELE",
        "kind": 5,
        "importPath": "GEARMASTER",
        "description": "GEARMASTER",
        "peekOfCode": "uiRESISTANCE_ENGRENAGE_PARALLELE = Ui_RESISTANCE_ENGRENAGE_PARALLELE()\nuiRESISTANCE_ENGRENAGE_PARALLELE.setupUi(RESISTANCE_ENGRENAGE_PARALLELE)\nuiRESISTANCE_ENGRENAGE_PARALLELE.pushButton_RETOUR_EFFORTS_SUR_DENTS.clicked.connect(retour_46)\n# fenetre pour le calcul de resistance des engrenages parallele a denture droite sans imposer entraxe\nRESISTANCE_DROITE_ENTRAXE_NON_IMPOSE = QtWidgets.QWidget()\nuiRESISTANCE_DROITE_ENTRAXE_NON_IMPOSE = Ui_RESISTANCE_DROITE_ENTRAXE_NON_IMPOSE()\nuiRESISTANCE_DROITE_ENTRAXE_NON_IMPOSE.setupUi(RESISTANCE_DROITE_ENTRAXE_NON_IMPOSE)\nuiRESISTANCE_DROITE_ENTRAXE_NON_IMPOSE.RETOUR_RESISTANCE_DROITE_PARALLELE_ENTRAXE_NON_IMPOSE.clicked.connect(retour_47)\n# fenetre pour le calcul de resistance des engrenages parallele a denture droite avec entraxe imposer\nRESISTANCE_DROITE_AVEC_ENTRAXE_IMPOSE = QtWidgets.QWidget()",
        "detail": "GEARMASTER",
        "documentation": {}
    },
    {
        "label": "RESISTANCE_DROITE_ENTRAXE_NON_IMPOSE",
        "kind": 5,
        "importPath": "GEARMASTER",
        "description": "GEARMASTER",
        "peekOfCode": "RESISTANCE_DROITE_ENTRAXE_NON_IMPOSE = QtWidgets.QWidget()\nuiRESISTANCE_DROITE_ENTRAXE_NON_IMPOSE = Ui_RESISTANCE_DROITE_ENTRAXE_NON_IMPOSE()\nuiRESISTANCE_DROITE_ENTRAXE_NON_IMPOSE.setupUi(RESISTANCE_DROITE_ENTRAXE_NON_IMPOSE)\nuiRESISTANCE_DROITE_ENTRAXE_NON_IMPOSE.RETOUR_RESISTANCE_DROITE_PARALLELE_ENTRAXE_NON_IMPOSE.clicked.connect(retour_47)\n# fenetre pour le calcul de resistance des engrenages parallele a denture droite avec entraxe imposer\nRESISTANCE_DROITE_AVEC_ENTRAXE_IMPOSE = QtWidgets.QWidget()\nuiRESISTANCE_DROITE_AVEC_ENTRAXE_IMPOSE = Ui_RESISTANCE_DROITE_AVEC_ENTRAXE_IMPOSE()\nuiRESISTANCE_DROITE_AVEC_ENTRAXE_IMPOSE.setupUi(RESISTANCE_DROITE_AVEC_ENTRAXE_IMPOSE)\nuiRESISTANCE_DROITE_AVEC_ENTRAXE_IMPOSE.RETOUR_RESISTANCE_HELICOI_PARALLELE.clicked.connect(retour_48)\nRESISTANCE_HELICOI_ENTRAXE_NON_IMPOSE = QtWidgets.QWidget()",
        "detail": "GEARMASTER",
        "documentation": {}
    },
    {
        "label": "uiRESISTANCE_DROITE_ENTRAXE_NON_IMPOSE",
        "kind": 5,
        "importPath": "GEARMASTER",
        "description": "GEARMASTER",
        "peekOfCode": "uiRESISTANCE_DROITE_ENTRAXE_NON_IMPOSE = Ui_RESISTANCE_DROITE_ENTRAXE_NON_IMPOSE()\nuiRESISTANCE_DROITE_ENTRAXE_NON_IMPOSE.setupUi(RESISTANCE_DROITE_ENTRAXE_NON_IMPOSE)\nuiRESISTANCE_DROITE_ENTRAXE_NON_IMPOSE.RETOUR_RESISTANCE_DROITE_PARALLELE_ENTRAXE_NON_IMPOSE.clicked.connect(retour_47)\n# fenetre pour le calcul de resistance des engrenages parallele a denture droite avec entraxe imposer\nRESISTANCE_DROITE_AVEC_ENTRAXE_IMPOSE = QtWidgets.QWidget()\nuiRESISTANCE_DROITE_AVEC_ENTRAXE_IMPOSE = Ui_RESISTANCE_DROITE_AVEC_ENTRAXE_IMPOSE()\nuiRESISTANCE_DROITE_AVEC_ENTRAXE_IMPOSE.setupUi(RESISTANCE_DROITE_AVEC_ENTRAXE_IMPOSE)\nuiRESISTANCE_DROITE_AVEC_ENTRAXE_IMPOSE.RETOUR_RESISTANCE_HELICOI_PARALLELE.clicked.connect(retour_48)\nRESISTANCE_HELICOI_ENTRAXE_NON_IMPOSE = QtWidgets.QWidget()\nuiRESISTANCE_HELICOI_ENTRAXE_NON_IMPOSE = Ui_RESISTANCE_HELICOI_ENTRAXE_NON_IMPOSE()",
        "detail": "GEARMASTER",
        "documentation": {}
    },
    {
        "label": "RESISTANCE_DROITE_AVEC_ENTRAXE_IMPOSE",
        "kind": 5,
        "importPath": "GEARMASTER",
        "description": "GEARMASTER",
        "peekOfCode": "RESISTANCE_DROITE_AVEC_ENTRAXE_IMPOSE = QtWidgets.QWidget()\nuiRESISTANCE_DROITE_AVEC_ENTRAXE_IMPOSE = Ui_RESISTANCE_DROITE_AVEC_ENTRAXE_IMPOSE()\nuiRESISTANCE_DROITE_AVEC_ENTRAXE_IMPOSE.setupUi(RESISTANCE_DROITE_AVEC_ENTRAXE_IMPOSE)\nuiRESISTANCE_DROITE_AVEC_ENTRAXE_IMPOSE.RETOUR_RESISTANCE_HELICOI_PARALLELE.clicked.connect(retour_48)\nRESISTANCE_HELICOI_ENTRAXE_NON_IMPOSE = QtWidgets.QWidget()\nuiRESISTANCE_HELICOI_ENTRAXE_NON_IMPOSE = Ui_RESISTANCE_HELICOI_ENTRAXE_NON_IMPOSE()\nuiRESISTANCE_HELICOI_ENTRAXE_NON_IMPOSE.setupUi(RESISTANCE_HELICOI_ENTRAXE_NON_IMPOSE)\nuiRESISTANCE_HELICOI_ENTRAXE_NON_IMPOSE.RETOUR_RESISTANCE_HELICOI_PARALLELE_ENTRAXE_NON_IMPOSE.clicked.connect(retour_49)\nRESISTANCE_HELICOI_ENTRAXE_IMPOSE = QtWidgets.QWidget()\nuiRESISTANCE_HELICOI_ENTRAXE_IMPOSE = Ui_RESISTANCE_HELICOI_ENTRAXE_IMPOSE()",
        "detail": "GEARMASTER",
        "documentation": {}
    },
    {
        "label": "uiRESISTANCE_DROITE_AVEC_ENTRAXE_IMPOSE",
        "kind": 5,
        "importPath": "GEARMASTER",
        "description": "GEARMASTER",
        "peekOfCode": "uiRESISTANCE_DROITE_AVEC_ENTRAXE_IMPOSE = Ui_RESISTANCE_DROITE_AVEC_ENTRAXE_IMPOSE()\nuiRESISTANCE_DROITE_AVEC_ENTRAXE_IMPOSE.setupUi(RESISTANCE_DROITE_AVEC_ENTRAXE_IMPOSE)\nuiRESISTANCE_DROITE_AVEC_ENTRAXE_IMPOSE.RETOUR_RESISTANCE_HELICOI_PARALLELE.clicked.connect(retour_48)\nRESISTANCE_HELICOI_ENTRAXE_NON_IMPOSE = QtWidgets.QWidget()\nuiRESISTANCE_HELICOI_ENTRAXE_NON_IMPOSE = Ui_RESISTANCE_HELICOI_ENTRAXE_NON_IMPOSE()\nuiRESISTANCE_HELICOI_ENTRAXE_NON_IMPOSE.setupUi(RESISTANCE_HELICOI_ENTRAXE_NON_IMPOSE)\nuiRESISTANCE_HELICOI_ENTRAXE_NON_IMPOSE.RETOUR_RESISTANCE_HELICOI_PARALLELE_ENTRAXE_NON_IMPOSE.clicked.connect(retour_49)\nRESISTANCE_HELICOI_ENTRAXE_IMPOSE = QtWidgets.QWidget()\nuiRESISTANCE_HELICOI_ENTRAXE_IMPOSE = Ui_RESISTANCE_HELICOI_ENTRAXE_IMPOSE()\nuiRESISTANCE_HELICOI_ENTRAXE_IMPOSE.setupUi(RESISTANCE_HELICOI_ENTRAXE_IMPOSE)",
        "detail": "GEARMASTER",
        "documentation": {}
    },
    {
        "label": "RESISTANCE_HELICOI_ENTRAXE_NON_IMPOSE",
        "kind": 5,
        "importPath": "GEARMASTER",
        "description": "GEARMASTER",
        "peekOfCode": "RESISTANCE_HELICOI_ENTRAXE_NON_IMPOSE = QtWidgets.QWidget()\nuiRESISTANCE_HELICOI_ENTRAXE_NON_IMPOSE = Ui_RESISTANCE_HELICOI_ENTRAXE_NON_IMPOSE()\nuiRESISTANCE_HELICOI_ENTRAXE_NON_IMPOSE.setupUi(RESISTANCE_HELICOI_ENTRAXE_NON_IMPOSE)\nuiRESISTANCE_HELICOI_ENTRAXE_NON_IMPOSE.RETOUR_RESISTANCE_HELICOI_PARALLELE_ENTRAXE_NON_IMPOSE.clicked.connect(retour_49)\nRESISTANCE_HELICOI_ENTRAXE_IMPOSE = QtWidgets.QWidget()\nuiRESISTANCE_HELICOI_ENTRAXE_IMPOSE = Ui_RESISTANCE_HELICOI_ENTRAXE_IMPOSE()\nuiRESISTANCE_HELICOI_ENTRAXE_IMPOSE.setupUi(RESISTANCE_HELICOI_ENTRAXE_IMPOSE)\nuiRESISTANCE_HELICOI_ENTRAXE_IMPOSE.RETOUR_RESISTANCE_HELICOI_PARALLELE.clicked.connect(retour_50)\nLOGICIEL_DE_CALCUL.setMinimumSize(1080, 720)  # Définit la taille minimale de la fenêtre\nLOGICIEL_DE_CALCUL.show()",
        "detail": "GEARMASTER",
        "documentation": {}
    },
    {
        "label": "uiRESISTANCE_HELICOI_ENTRAXE_NON_IMPOSE",
        "kind": 5,
        "importPath": "GEARMASTER",
        "description": "GEARMASTER",
        "peekOfCode": "uiRESISTANCE_HELICOI_ENTRAXE_NON_IMPOSE = Ui_RESISTANCE_HELICOI_ENTRAXE_NON_IMPOSE()\nuiRESISTANCE_HELICOI_ENTRAXE_NON_IMPOSE.setupUi(RESISTANCE_HELICOI_ENTRAXE_NON_IMPOSE)\nuiRESISTANCE_HELICOI_ENTRAXE_NON_IMPOSE.RETOUR_RESISTANCE_HELICOI_PARALLELE_ENTRAXE_NON_IMPOSE.clicked.connect(retour_49)\nRESISTANCE_HELICOI_ENTRAXE_IMPOSE = QtWidgets.QWidget()\nuiRESISTANCE_HELICOI_ENTRAXE_IMPOSE = Ui_RESISTANCE_HELICOI_ENTRAXE_IMPOSE()\nuiRESISTANCE_HELICOI_ENTRAXE_IMPOSE.setupUi(RESISTANCE_HELICOI_ENTRAXE_IMPOSE)\nuiRESISTANCE_HELICOI_ENTRAXE_IMPOSE.RETOUR_RESISTANCE_HELICOI_PARALLELE.clicked.connect(retour_50)\nLOGICIEL_DE_CALCUL.setMinimumSize(1080, 720)  # Définit la taille minimale de la fenêtre\nLOGICIEL_DE_CALCUL.show()\nLOGICIEL_DE_CALCUL.showMaximized()  # Maximise la fenêtre pour qu'elle occupe tout l'écran",
        "detail": "GEARMASTER",
        "documentation": {}
    },
    {
        "label": "RESISTANCE_HELICOI_ENTRAXE_IMPOSE",
        "kind": 5,
        "importPath": "GEARMASTER",
        "description": "GEARMASTER",
        "peekOfCode": "RESISTANCE_HELICOI_ENTRAXE_IMPOSE = QtWidgets.QWidget()\nuiRESISTANCE_HELICOI_ENTRAXE_IMPOSE = Ui_RESISTANCE_HELICOI_ENTRAXE_IMPOSE()\nuiRESISTANCE_HELICOI_ENTRAXE_IMPOSE.setupUi(RESISTANCE_HELICOI_ENTRAXE_IMPOSE)\nuiRESISTANCE_HELICOI_ENTRAXE_IMPOSE.RETOUR_RESISTANCE_HELICOI_PARALLELE.clicked.connect(retour_50)\nLOGICIEL_DE_CALCUL.setMinimumSize(1080, 720)  # Définit la taille minimale de la fenêtre\nLOGICIEL_DE_CALCUL.show()\nLOGICIEL_DE_CALCUL.showMaximized()  # Maximise la fenêtre pour qu'elle occupe tout l'écran\n# Le bouton d'ouverture de la fenetre 2\nui.pushButton.clicked.connect(afficherfenetre2)\n# Les boutons_ouverture (CHAPITRE 1)",
        "detail": "GEARMASTER",
        "documentation": {}
    },
    {
        "label": "uiRESISTANCE_HELICOI_ENTRAXE_IMPOSE",
        "kind": 5,
        "importPath": "GEARMASTER",
        "description": "GEARMASTER",
        "peekOfCode": "uiRESISTANCE_HELICOI_ENTRAXE_IMPOSE = Ui_RESISTANCE_HELICOI_ENTRAXE_IMPOSE()\nuiRESISTANCE_HELICOI_ENTRAXE_IMPOSE.setupUi(RESISTANCE_HELICOI_ENTRAXE_IMPOSE)\nuiRESISTANCE_HELICOI_ENTRAXE_IMPOSE.RETOUR_RESISTANCE_HELICOI_PARALLELE.clicked.connect(retour_50)\nLOGICIEL_DE_CALCUL.setMinimumSize(1080, 720)  # Définit la taille minimale de la fenêtre\nLOGICIEL_DE_CALCUL.show()\nLOGICIEL_DE_CALCUL.showMaximized()  # Maximise la fenêtre pour qu'elle occupe tout l'écran\n# Le bouton d'ouverture de la fenetre 2\nui.pushButton.clicked.connect(afficherfenetre2)\n# Les boutons_ouverture (CHAPITRE 1)\nuifenetre_2.bouton_case1.clicked.connect(affichercase1)",
        "detail": "GEARMASTER",
        "documentation": {}
    },
    {
        "label": "Ui_LOGICIEL_DE_CALCUL",
        "kind": 6,
        "importPath": "menu",
        "description": "menu",
        "peekOfCode": "class Ui_LOGICIEL_DE_CALCUL(object):\n    def setupUi(self, LOGICIEL_DE_CALCUL):\n        LOGICIEL_DE_CALCUL.setObjectName(\"LOGICIEL_DE_CALCUL\")\n        LOGICIEL_DE_CALCUL.resize(709, 454)\n        LOGICIEL_DE_CALCUL.setMinimumSize(QtCore.QSize(709, 454))\n        LOGICIEL_DE_CALCUL.setCursor(QtGui.QCursor(QtCore.Qt.ArrowCursor))\n        #############################################################\n        LOGICIEL_DE_CALCUL.setStyleSheet(\"background-color: #00aaff;\")\n        icon = QtGui.QIcon()\n        icon.addPixmap(QtGui.QPixmap(\"../../reducteur_gearexpert.gif\"), QtGui.QIcon.Normal, QtGui.QIcon.Off)",
        "detail": "menu",
        "documentation": {}
    },
    {
        "label": "Ui_RESISTANCE_DROITE_AVEC_ENTRAXE_IMPOSE",
        "kind": 6,
        "importPath": "RESISTANCE_DROITE_AVEC_ENTRAXE_IMPOSE",
        "description": "RESISTANCE_DROITE_AVEC_ENTRAXE_IMPOSE",
        "peekOfCode": "class Ui_RESISTANCE_DROITE_AVEC_ENTRAXE_IMPOSE(object):\n    def calculer_engrenage(self):\n        engrenage = \"\"\n        if self.radioButton.isChecked():\n            engrenage = \"exterieur\"\n        elif self.radioButton_2.isChecked():\n            engrenage = \"interieur\"\n        else:\n            QMessageBox.warning(None, \"Erreur de sélection\", \"Veuillez sélectionner une classe d'ISO_un type d'acier et precisez si l'engrenage est exterieur ou interieur.\")\n            return",
        "detail": "RESISTANCE_DROITE_AVEC_ENTRAXE_IMPOSE",
        "documentation": {}
    },
    {
        "label": "Ui_RESISTANCE_HELICOI_ENTRAXE_IMPOSE",
        "kind": 6,
        "importPath": "RESISTANCE_HELICOI_ENTRAXE_IMPOSE",
        "description": "RESISTANCE_HELICOI_ENTRAXE_IMPOSE",
        "peekOfCode": "class Ui_RESISTANCE_HELICOI_ENTRAXE_IMPOSE(object):\n    def calculer_engrenage(self):\n        engrenage = \"\"\n        if self.radioButton.isChecked():\n            engrenage = \"exterieur\"\n        elif self.radioButton_2.isChecked():\n            engrenage = \"interieur\"\n        else:\n            QMessageBox.warning(None, \"Erreur de sélection\", \"Veuillez sélectionner une classe d'ISO et un type d'acier et aussi precisez si l'engrenage est exterieur ou interieur.\")\n            return",
        "detail": "RESISTANCE_HELICOI_ENTRAXE_IMPOSE",
        "documentation": {}
    }
]